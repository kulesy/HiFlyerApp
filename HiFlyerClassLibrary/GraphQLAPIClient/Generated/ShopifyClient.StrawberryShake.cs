// <auto-generated/>
#nullable enable

namespace HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient
{
    /// <summary>
    /// The schema’s entry-point for queries. This acts as the public, top-level API from which all queries must start.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetCustomerResult : global::System.IEquatable<GetCustomerResult>, IGetCustomerResult
    {
        public GetCustomerResult(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetCustomer_Customer? customer)
        {
            Customer = customer;
        }

        /// <summary>
        /// Find a customer by its access token.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetCustomer_Customer? Customer { get; }

        public virtual global::System.Boolean Equals(GetCustomerResult? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((Customer is null && other.Customer is null) || Customer != null && Customer.Equals(other.Customer)));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetCustomerResult)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (Customer != null)
                {
                    hash ^= 397 * Customer.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// A customer represents a customer account with the shop. Customer accounts store contact information for the customer, saving logged-in customers the trouble of having to provide it at every checkout.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetCustomer_Customer_Customer : global::System.IEquatable<GetCustomer_Customer_Customer>, IGetCustomer_Customer_Customer
    {
        public GetCustomer_Customer_Customer(global::System.String id, global::System.String? firstName, global::System.String? lastName, global::System.Boolean acceptsMarketing, global::System.String? email, global::System.String? phone, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetCustomer_Customer_DefaultAddress? defaultAddress)
        {
            Id = id;
            FirstName = firstName;
            LastName = lastName;
            AcceptsMarketing = acceptsMarketing;
            Email = email;
            Phone = phone;
            DefaultAddress = defaultAddress;
        }

        /// <summary>
        /// A unique identifier for the customer.
        /// </summary>
        public global::System.String Id { get; }
        /// <summary>
        /// The customer’s first name.
        /// </summary>
        public global::System.String? FirstName { get; }
        /// <summary>
        /// The customer’s last name.
        /// </summary>
        public global::System.String? LastName { get; }
        /// <summary>
        /// Indicates whether the customer has consented to be sent marketing material via email.
        /// </summary>
        public global::System.Boolean AcceptsMarketing { get; }
        /// <summary>
        /// The customer’s email address.
        /// </summary>
        public global::System.String? Email { get; }
        /// <summary>
        /// The customer’s phone number.
        /// </summary>
        public global::System.String? Phone { get; }
        /// <summary>
        /// The customer’s default address.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetCustomer_Customer_DefaultAddress? DefaultAddress { get; }

        public virtual global::System.Boolean Equals(GetCustomer_Customer_Customer? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Id.Equals(other.Id)) && ((FirstName is null && other.FirstName is null) || FirstName != null && FirstName.Equals(other.FirstName)) && ((LastName is null && other.LastName is null) || LastName != null && LastName.Equals(other.LastName)) && AcceptsMarketing == other.AcceptsMarketing && ((Email is null && other.Email is null) || Email != null && Email.Equals(other.Email)) && ((Phone is null && other.Phone is null) || Phone != null && Phone.Equals(other.Phone)) && ((DefaultAddress is null && other.DefaultAddress is null) || DefaultAddress != null && DefaultAddress.Equals(other.DefaultAddress));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetCustomer_Customer_Customer)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Id.GetHashCode();
                if (FirstName != null)
                {
                    hash ^= 397 * FirstName.GetHashCode();
                }

                if (LastName != null)
                {
                    hash ^= 397 * LastName.GetHashCode();
                }

                hash ^= 397 * AcceptsMarketing.GetHashCode();
                if (Email != null)
                {
                    hash ^= 397 * Email.GetHashCode();
                }

                if (Phone != null)
                {
                    hash ^= 397 * Phone.GetHashCode();
                }

                if (DefaultAddress != null)
                {
                    hash ^= 397 * DefaultAddress.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// Represents a mailing address for customers and shipping.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetCustomer_Customer_DefaultAddress_MailingAddress : global::System.IEquatable<GetCustomer_Customer_DefaultAddress_MailingAddress>, IGetCustomer_Customer_DefaultAddress_MailingAddress
    {
        public GetCustomer_Customer_DefaultAddress_MailingAddress(global::System.String id, global::System.String? address1, global::System.String? address2, global::System.String? city, global::System.String? company, global::System.String? country, global::System.String? firstName, global::System.String? lastName, global::System.String? phone, global::System.String? province, global::System.String? zip)
        {
            Id = id;
            Address1 = address1;
            Address2 = address2;
            City = city;
            Company = company;
            Country = country;
            FirstName = firstName;
            LastName = lastName;
            Phone = phone;
            Province = province;
            Zip = zip;
        }

        /// <summary>
        /// A globally-unique identifier.
        /// </summary>
        public global::System.String Id { get; }
        /// <summary>
        /// The first line of the address. Typically the street address or PO Box number.
        /// </summary>
        public global::System.String? Address1 { get; }
        /// <summary>
        /// The second line of the address. Typically the number of the apartment, suite, or unit.
        /// </summary>
        public global::System.String? Address2 { get; }
        /// <summary>
        /// The name of the city, district, village, or town.
        /// </summary>
        public global::System.String? City { get; }
        /// <summary>
        /// The name of the customer's company or organization.
        /// </summary>
        public global::System.String? Company { get; }
        /// <summary>
        /// The name of the country.
        /// </summary>
        public global::System.String? Country { get; }
        /// <summary>
        /// The first name of the customer.
        /// </summary>
        public global::System.String? FirstName { get; }
        /// <summary>
        /// The last name of the customer.
        /// </summary>
        public global::System.String? LastName { get; }
        /// <summary>
        /// A unique phone number for the customer.
        /// 
        /// Formatted using E.164 standard. For example, _+16135551111_.
        /// </summary>
        public global::System.String? Phone { get; }
        /// <summary>
        /// The region of the address, such as the province, state, or district.
        /// </summary>
        public global::System.String? Province { get; }
        /// <summary>
        /// The zip or postal code of the address.
        /// </summary>
        public global::System.String? Zip { get; }

        public virtual global::System.Boolean Equals(GetCustomer_Customer_DefaultAddress_MailingAddress? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Id.Equals(other.Id)) && ((Address1 is null && other.Address1 is null) || Address1 != null && Address1.Equals(other.Address1)) && ((Address2 is null && other.Address2 is null) || Address2 != null && Address2.Equals(other.Address2)) && ((City is null && other.City is null) || City != null && City.Equals(other.City)) && ((Company is null && other.Company is null) || Company != null && Company.Equals(other.Company)) && ((Country is null && other.Country is null) || Country != null && Country.Equals(other.Country)) && ((FirstName is null && other.FirstName is null) || FirstName != null && FirstName.Equals(other.FirstName)) && ((LastName is null && other.LastName is null) || LastName != null && LastName.Equals(other.LastName)) && ((Phone is null && other.Phone is null) || Phone != null && Phone.Equals(other.Phone)) && ((Province is null && other.Province is null) || Province != null && Province.Equals(other.Province)) && ((Zip is null && other.Zip is null) || Zip != null && Zip.Equals(other.Zip));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetCustomer_Customer_DefaultAddress_MailingAddress)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Id.GetHashCode();
                if (Address1 != null)
                {
                    hash ^= 397 * Address1.GetHashCode();
                }

                if (Address2 != null)
                {
                    hash ^= 397 * Address2.GetHashCode();
                }

                if (City != null)
                {
                    hash ^= 397 * City.GetHashCode();
                }

                if (Company != null)
                {
                    hash ^= 397 * Company.GetHashCode();
                }

                if (Country != null)
                {
                    hash ^= 397 * Country.GetHashCode();
                }

                if (FirstName != null)
                {
                    hash ^= 397 * FirstName.GetHashCode();
                }

                if (LastName != null)
                {
                    hash ^= 397 * LastName.GetHashCode();
                }

                if (Phone != null)
                {
                    hash ^= 397 * Phone.GetHashCode();
                }

                if (Province != null)
                {
                    hash ^= 397 * Province.GetHashCode();
                }

                if (Zip != null)
                {
                    hash ^= 397 * Zip.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// The schema’s entry-point for queries. This acts as the public, top-level API from which all queries must start.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetCustomerResult
    {
        /// <summary>
        /// Find a customer by its access token.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetCustomer_Customer? Customer { get; }
    }

    /// <summary>
    /// A customer represents a customer account with the shop. Customer accounts store contact information for the customer, saving logged-in customers the trouble of having to provide it at every checkout.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetCustomer_Customer
    {
        /// <summary>
        /// A unique identifier for the customer.
        /// </summary>
        public global::System.String Id { get; }
        /// <summary>
        /// The customer’s first name.
        /// </summary>
        public global::System.String? FirstName { get; }
        /// <summary>
        /// The customer’s last name.
        /// </summary>
        public global::System.String? LastName { get; }
        /// <summary>
        /// Indicates whether the customer has consented to be sent marketing material via email.
        /// </summary>
        public global::System.Boolean AcceptsMarketing { get; }
        /// <summary>
        /// The customer’s email address.
        /// </summary>
        public global::System.String? Email { get; }
        /// <summary>
        /// The customer’s phone number.
        /// </summary>
        public global::System.String? Phone { get; }
        /// <summary>
        /// The customer’s default address.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetCustomer_Customer_DefaultAddress? DefaultAddress { get; }
    }

    /// <summary>
    /// A customer represents a customer account with the shop. Customer accounts store contact information for the customer, saving logged-in customers the trouble of having to provide it at every checkout.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetCustomer_Customer_Customer : IGetCustomer_Customer
    {
    }

    /// <summary>
    /// Represents a mailing address for customers and shipping.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetCustomer_Customer_DefaultAddress
    {
        /// <summary>
        /// A globally-unique identifier.
        /// </summary>
        public global::System.String Id { get; }
        /// <summary>
        /// The first line of the address. Typically the street address or PO Box number.
        /// </summary>
        public global::System.String? Address1 { get; }
        /// <summary>
        /// The second line of the address. Typically the number of the apartment, suite, or unit.
        /// </summary>
        public global::System.String? Address2 { get; }
        /// <summary>
        /// The name of the city, district, village, or town.
        /// </summary>
        public global::System.String? City { get; }
        /// <summary>
        /// The name of the customer's company or organization.
        /// </summary>
        public global::System.String? Company { get; }
        /// <summary>
        /// The name of the country.
        /// </summary>
        public global::System.String? Country { get; }
        /// <summary>
        /// The first name of the customer.
        /// </summary>
        public global::System.String? FirstName { get; }
        /// <summary>
        /// The last name of the customer.
        /// </summary>
        public global::System.String? LastName { get; }
        /// <summary>
        /// A unique phone number for the customer.
        /// 
        /// Formatted using E.164 standard. For example, _+16135551111_.
        /// </summary>
        public global::System.String? Phone { get; }
        /// <summary>
        /// The region of the address, such as the province, state, or district.
        /// </summary>
        public global::System.String? Province { get; }
        /// <summary>
        /// The zip or postal code of the address.
        /// </summary>
        public global::System.String? Zip { get; }
    }

    /// <summary>
    /// Represents a mailing address for customers and shipping.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetCustomer_Customer_DefaultAddress_MailingAddress : IGetCustomer_Customer_DefaultAddress
    {
    }

    /// <summary>
    /// The schema’s entry-point for queries. This acts as the public, top-level API from which all queries must start.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetProductByHandleResult : global::System.IEquatable<GetProductByHandleResult>, IGetProductByHandleResult
    {
        public GetProductByHandleResult(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product? product)
        {
            Product = product;
        }

        /// <summary>
        /// Fetch a specific `Product` by one of its unique attributes.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product? Product { get; }

        public virtual global::System.Boolean Equals(GetProductByHandleResult? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((Product is null && other.Product is null) || Product != null && Product.Equals(other.Product)));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetProductByHandleResult)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (Product != null)
                {
                    hash ^= 397 * Product.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// A product represents an individual item for sale in a Shopify store. Products are often physical, but they don't have to be.
    /// For example, a digital download (such as a movie, music or ebook file) also qualifies as a product, as do services (such as equipment rental, work for hire, customization of another product or an extended warranty).
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetProductByHandle_Product_Product : global::System.IEquatable<GetProductByHandle_Product_Product>, IGetProductByHandle_Product_Product
    {
        public GetProductByHandle_Product_Product(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_Variants variants, global::System.String handle, global::System.String title, global::System.String description, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_PriceRange priceRange, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_Images images, global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_Options> options)
        {
            Variants = variants;
            Handle = handle;
            Title = title;
            Description = description;
            PriceRange = priceRange;
            Images = images;
            Options = options;
        }

        /// <summary>
        /// List of the product’s variants.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_Variants Variants { get; }
        /// <summary>
        /// A human-friendly unique string for the Product automatically generated from its title.
        /// They are used by the Liquid templating language to refer to objects.
        /// </summary>
        public global::System.String Handle { get; }
        /// <summary>
        /// The product’s title.
        /// </summary>
        public global::System.String Title { get; }
        /// <summary>
        /// Stripped description of the product, single line with HTML tags removed.
        /// </summary>
        public global::System.String Description { get; }
        /// <summary>
        /// The price range.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_PriceRange PriceRange { get; }
        /// <summary>
        /// List of images associated with the product.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_Images Images { get; }
        /// <summary>
        /// List of product options.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_Options> Options { get; }

        public virtual global::System.Boolean Equals(GetProductByHandle_Product_Product? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Variants.Equals(other.Variants)) && Handle.Equals(other.Handle) && Title.Equals(other.Title) && Description.Equals(other.Description) && PriceRange.Equals(other.PriceRange) && Images.Equals(other.Images) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Options, other.Options);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetProductByHandle_Product_Product)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Variants.GetHashCode();
                hash ^= 397 * Handle.GetHashCode();
                hash ^= 397 * Title.GetHashCode();
                hash ^= 397 * Description.GetHashCode();
                hash ^= 397 * PriceRange.GetHashCode();
                hash ^= 397 * Images.GetHashCode();
                foreach (var Options_elm in Options)
                {
                    hash ^= 397 * Options_elm.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// An auto-generated type for paginating through multiple ProductVariants.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetProductByHandle_Product_Variants_ProductVariantConnection : global::System.IEquatable<GetProductByHandle_Product_Variants_ProductVariantConnection>, IGetProductByHandle_Product_Variants_ProductVariantConnection
    {
        public GetProductByHandle_Product_Variants_ProductVariantConnection(global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_Variants_Edges> edges)
        {
            Edges = edges;
        }

        /// <summary>
        /// A list of edges.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_Variants_Edges> Edges { get; }

        public virtual global::System.Boolean Equals(GetProductByHandle_Product_Variants_ProductVariantConnection? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Edges, other.Edges));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetProductByHandle_Product_Variants_ProductVariantConnection)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                foreach (var Edges_elm in Edges)
                {
                    hash ^= 397 * Edges_elm.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// The price range of the product.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetProductByHandle_Product_PriceRange_ProductPriceRange : global::System.IEquatable<GetProductByHandle_Product_PriceRange_ProductPriceRange>, IGetProductByHandle_Product_PriceRange_ProductPriceRange
    {
        public GetProductByHandle_Product_PriceRange_ProductPriceRange(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_PriceRange_MinVariantPrice minVariantPrice)
        {
            MinVariantPrice = minVariantPrice;
        }

        /// <summary>
        /// The lowest variant's price.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_PriceRange_MinVariantPrice MinVariantPrice { get; }

        public virtual global::System.Boolean Equals(GetProductByHandle_Product_PriceRange_ProductPriceRange? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (MinVariantPrice.Equals(other.MinVariantPrice));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetProductByHandle_Product_PriceRange_ProductPriceRange)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * MinVariantPrice.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// An auto-generated type for paginating through multiple Images.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetProductByHandle_Product_Images_ImageConnection : global::System.IEquatable<GetProductByHandle_Product_Images_ImageConnection>, IGetProductByHandle_Product_Images_ImageConnection
    {
        public GetProductByHandle_Product_Images_ImageConnection(global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_Images_Edges> edges)
        {
            Edges = edges;
        }

        /// <summary>
        /// A list of edges.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_Images_Edges> Edges { get; }

        public virtual global::System.Boolean Equals(GetProductByHandle_Product_Images_ImageConnection? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Edges, other.Edges));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetProductByHandle_Product_Images_ImageConnection)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                foreach (var Edges_elm in Edges)
                {
                    hash ^= 397 * Edges_elm.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// Product property names like "Size", "Color", and "Material" that the customers can select.
    /// Variants are selected based on permutations of these options.
    /// 255 characters limit each.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetProductByHandle_Product_Options_ProductOption : global::System.IEquatable<GetProductByHandle_Product_Options_ProductOption>, IGetProductByHandle_Product_Options_ProductOption
    {
        public GetProductByHandle_Product_Options_ProductOption(global::System.String name, global::System.Collections.Generic.IReadOnlyList<global::System.String> values)
        {
            Name = name;
            Values = values;
        }

        /// <summary>
        /// The product option’s name.
        /// </summary>
        public global::System.String Name { get; }
        /// <summary>
        /// The corresponding value to the product option name.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::System.String> Values { get; }

        public virtual global::System.Boolean Equals(GetProductByHandle_Product_Options_ProductOption? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Name.Equals(other.Name)) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Values, other.Values);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetProductByHandle_Product_Options_ProductOption)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Name.GetHashCode();
                foreach (var Values_elm in Values)
                {
                    hash ^= 397 * Values_elm.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// An auto-generated type which holds one ProductVariant and a cursor during pagination.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetProductByHandle_Product_Variants_Edges_ProductVariantEdge : global::System.IEquatable<GetProductByHandle_Product_Variants_Edges_ProductVariantEdge>, IGetProductByHandle_Product_Variants_Edges_ProductVariantEdge
    {
        public GetProductByHandle_Product_Variants_Edges_ProductVariantEdge(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_Variants_Edges_Node node)
        {
            Node = node;
        }

        /// <summary>
        /// The item at the end of ProductVariantEdge.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_Variants_Edges_Node Node { get; }

        public virtual global::System.Boolean Equals(GetProductByHandle_Product_Variants_Edges_ProductVariantEdge? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Node.Equals(other.Node));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetProductByHandle_Product_Variants_Edges_ProductVariantEdge)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Node.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// A monetary value with currency.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetProductByHandle_Product_PriceRange_MinVariantPrice_MoneyV2 : global::System.IEquatable<GetProductByHandle_Product_PriceRange_MinVariantPrice_MoneyV2>, IGetProductByHandle_Product_PriceRange_MinVariantPrice_MoneyV2
    {
        public GetProductByHandle_Product_PriceRange_MinVariantPrice_MoneyV2(global::System.String amount)
        {
            Amount = amount;
        }

        /// <summary>
        /// String money amount.
        /// </summary>
        public global::System.String Amount { get; }

        public virtual global::System.Boolean Equals(GetProductByHandle_Product_PriceRange_MinVariantPrice_MoneyV2? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Amount.Equals(other.Amount));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetProductByHandle_Product_PriceRange_MinVariantPrice_MoneyV2)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Amount.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// An auto-generated type which holds one Image and a cursor during pagination.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetProductByHandle_Product_Images_Edges_ImageEdge : global::System.IEquatable<GetProductByHandle_Product_Images_Edges_ImageEdge>, IGetProductByHandle_Product_Images_Edges_ImageEdge
    {
        public GetProductByHandle_Product_Images_Edges_ImageEdge(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_Images_Edges_Node node)
        {
            Node = node;
        }

        /// <summary>
        /// The item at the end of ImageEdge.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_Images_Edges_Node Node { get; }

        public virtual global::System.Boolean Equals(GetProductByHandle_Product_Images_Edges_ImageEdge? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Node.Equals(other.Node));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetProductByHandle_Product_Images_Edges_ImageEdge)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Node.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// A product variant represents a different version of a product, such as differing sizes or differing colors.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetProductByHandle_Product_Variants_Edges_Node_ProductVariant : global::System.IEquatable<GetProductByHandle_Product_Variants_Edges_Node_ProductVariant>, IGetProductByHandle_Product_Variants_Edges_Node_ProductVariant
    {
        public GetProductByHandle_Product_Variants_Edges_Node_ProductVariant(global::System.Int32? quantityAvailable, global::System.String title, global::System.String id)
        {
            QuantityAvailable = quantityAvailable;
            Title = title;
            Id = id;
        }

        /// <summary>
        /// The total sellable quantity of the variant for online sales channels.
        /// </summary>
        public global::System.Int32? QuantityAvailable { get; }
        /// <summary>
        /// The product variant’s title.
        /// </summary>
        public global::System.String Title { get; }
        /// <summary>
        /// A globally-unique identifier.
        /// </summary>
        public global::System.String Id { get; }

        public virtual global::System.Boolean Equals(GetProductByHandle_Product_Variants_Edges_Node_ProductVariant? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (QuantityAvailable == other.QuantityAvailable) && Title.Equals(other.Title) && Id.Equals(other.Id);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetProductByHandle_Product_Variants_Edges_Node_ProductVariant)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (QuantityAvailable != null)
                {
                    hash ^= 397 * QuantityAvailable.GetHashCode();
                }

                hash ^= 397 * Title.GetHashCode();
                hash ^= 397 * Id.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// Represents an image resource.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetProductByHandle_Product_Images_Edges_Node_Image : global::System.IEquatable<GetProductByHandle_Product_Images_Edges_Node_Image>, IGetProductByHandle_Product_Images_Edges_Node_Image
    {
        public GetProductByHandle_Product_Images_Edges_Node_Image(global::System.Uri url)
        {
            Url = url;
        }

        /// <summary>
        /// The location of the image as a URL.
        /// 
        /// If no transform options are specified, then the original image will be preserved including any pre-applied transforms.
        /// 
        /// All transformation options are considered "best-effort". Any transformation that the original image type doesn't support will be ignored.
        /// 
        /// If you need multiple variations of the same image, then you can use [GraphQL aliases](https://graphql.org/learn/queries/#aliases).
        /// </summary>
        public global::System.Uri Url { get; }

        public virtual global::System.Boolean Equals(GetProductByHandle_Product_Images_Edges_Node_Image? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Url.Equals(other.Url));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetProductByHandle_Product_Images_Edges_Node_Image)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Url.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// The schema’s entry-point for queries. This acts as the public, top-level API from which all queries must start.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProductByHandleResult
    {
        /// <summary>
        /// Fetch a specific `Product` by one of its unique attributes.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product? Product { get; }
    }

    /// <summary>
    /// A product represents an individual item for sale in a Shopify store. Products are often physical, but they don't have to be.
    /// For example, a digital download (such as a movie, music or ebook file) also qualifies as a product, as do services (such as equipment rental, work for hire, customization of another product or an extended warranty).
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProductByHandle_Product
    {
        /// <summary>
        /// List of the product’s variants.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_Variants Variants { get; }
        /// <summary>
        /// A human-friendly unique string for the Product automatically generated from its title.
        /// They are used by the Liquid templating language to refer to objects.
        /// </summary>
        public global::System.String Handle { get; }
        /// <summary>
        /// The product’s title.
        /// </summary>
        public global::System.String Title { get; }
        /// <summary>
        /// Stripped description of the product, single line with HTML tags removed.
        /// </summary>
        public global::System.String Description { get; }
        /// <summary>
        /// The price range.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_PriceRange PriceRange { get; }
        /// <summary>
        /// List of images associated with the product.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_Images Images { get; }
        /// <summary>
        /// List of product options.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_Options> Options { get; }
    }

    /// <summary>
    /// A product represents an individual item for sale in a Shopify store. Products are often physical, but they don't have to be.
    /// For example, a digital download (such as a movie, music or ebook file) also qualifies as a product, as do services (such as equipment rental, work for hire, customization of another product or an extended warranty).
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProductByHandle_Product_Product : IGetProductByHandle_Product
    {
    }

    /// <summary>
    /// An auto-generated type for paginating through multiple ProductVariants.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProductByHandle_Product_Variants
    {
        /// <summary>
        /// A list of edges.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_Variants_Edges> Edges { get; }
    }

    /// <summary>
    /// An auto-generated type for paginating through multiple ProductVariants.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProductByHandle_Product_Variants_ProductVariantConnection : IGetProductByHandle_Product_Variants
    {
    }

    /// <summary>
    /// The price range of the product.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProductByHandle_Product_PriceRange
    {
        /// <summary>
        /// The lowest variant's price.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_PriceRange_MinVariantPrice MinVariantPrice { get; }
    }

    /// <summary>
    /// The price range of the product.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProductByHandle_Product_PriceRange_ProductPriceRange : IGetProductByHandle_Product_PriceRange
    {
    }

    /// <summary>
    /// An auto-generated type for paginating through multiple Images.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProductByHandle_Product_Images
    {
        /// <summary>
        /// A list of edges.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_Images_Edges> Edges { get; }
    }

    /// <summary>
    /// An auto-generated type for paginating through multiple Images.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProductByHandle_Product_Images_ImageConnection : IGetProductByHandle_Product_Images
    {
    }

    /// <summary>
    /// Product property names like "Size", "Color", and "Material" that the customers can select.
    /// Variants are selected based on permutations of these options.
    /// 255 characters limit each.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProductByHandle_Product_Options
    {
        /// <summary>
        /// The product option’s name.
        /// </summary>
        public global::System.String Name { get; }
        /// <summary>
        /// The corresponding value to the product option name.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::System.String> Values { get; }
    }

    /// <summary>
    /// Product property names like "Size", "Color", and "Material" that the customers can select.
    /// Variants are selected based on permutations of these options.
    /// 255 characters limit each.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProductByHandle_Product_Options_ProductOption : IGetProductByHandle_Product_Options
    {
    }

    /// <summary>
    /// An auto-generated type which holds one ProductVariant and a cursor during pagination.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProductByHandle_Product_Variants_Edges
    {
        /// <summary>
        /// The item at the end of ProductVariantEdge.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_Variants_Edges_Node Node { get; }
    }

    /// <summary>
    /// An auto-generated type which holds one ProductVariant and a cursor during pagination.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProductByHandle_Product_Variants_Edges_ProductVariantEdge : IGetProductByHandle_Product_Variants_Edges
    {
    }

    /// <summary>
    /// A monetary value with currency.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProductByHandle_Product_PriceRange_MinVariantPrice
    {
        /// <summary>
        /// String money amount.
        /// </summary>
        public global::System.String Amount { get; }
    }

    /// <summary>
    /// A monetary value with currency.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProductByHandle_Product_PriceRange_MinVariantPrice_MoneyV2 : IGetProductByHandle_Product_PriceRange_MinVariantPrice
    {
    }

    /// <summary>
    /// An auto-generated type which holds one Image and a cursor during pagination.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProductByHandle_Product_Images_Edges
    {
        /// <summary>
        /// The item at the end of ImageEdge.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_Images_Edges_Node Node { get; }
    }

    /// <summary>
    /// An auto-generated type which holds one Image and a cursor during pagination.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProductByHandle_Product_Images_Edges_ImageEdge : IGetProductByHandle_Product_Images_Edges
    {
    }

    /// <summary>
    /// A product variant represents a different version of a product, such as differing sizes or differing colors.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProductByHandle_Product_Variants_Edges_Node
    {
        /// <summary>
        /// The total sellable quantity of the variant for online sales channels.
        /// </summary>
        public global::System.Int32? QuantityAvailable { get; }
        /// <summary>
        /// The product variant’s title.
        /// </summary>
        public global::System.String Title { get; }
        /// <summary>
        /// A globally-unique identifier.
        /// </summary>
        public global::System.String Id { get; }
    }

    /// <summary>
    /// A product variant represents a different version of a product, such as differing sizes or differing colors.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProductByHandle_Product_Variants_Edges_Node_ProductVariant : IGetProductByHandle_Product_Variants_Edges_Node
    {
    }

    /// <summary>
    /// Represents an image resource.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProductByHandle_Product_Images_Edges_Node
    {
        /// <summary>
        /// The location of the image as a URL.
        /// 
        /// If no transform options are specified, then the original image will be preserved including any pre-applied transforms.
        /// 
        /// All transformation options are considered "best-effort". Any transformation that the original image type doesn't support will be ignored.
        /// 
        /// If you need multiple variations of the same image, then you can use [GraphQL aliases](https://graphql.org/learn/queries/#aliases).
        /// </summary>
        public global::System.Uri Url { get; }
    }

    /// <summary>
    /// Represents an image resource.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProductByHandle_Product_Images_Edges_Node_Image : IGetProductByHandle_Product_Images_Edges_Node
    {
    }

    /// <summary>
    /// The schema’s entry-point for queries. This acts as the public, top-level API from which all queries must start.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetProductsResult : global::System.IEquatable<GetProductsResult>, IGetProductsResult
    {
        public GetProductsResult(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products products)
        {
            Products = products;
        }

        /// <summary>
        /// List of the shop’s products.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products Products { get; }

        public virtual global::System.Boolean Equals(GetProductsResult? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Products.Equals(other.Products));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetProductsResult)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Products.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// An auto-generated type for paginating through multiple Products.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetProducts_Products_ProductConnection : global::System.IEquatable<GetProducts_Products_ProductConnection>, IGetProducts_Products_ProductConnection
    {
        public GetProducts_Products_ProductConnection(global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges> edges)
        {
            Edges = edges;
        }

        /// <summary>
        /// A list of edges.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges> Edges { get; }

        public virtual global::System.Boolean Equals(GetProducts_Products_ProductConnection? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Edges, other.Edges));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetProducts_Products_ProductConnection)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                foreach (var Edges_elm in Edges)
                {
                    hash ^= 397 * Edges_elm.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// An auto-generated type which holds one Product and a cursor during pagination.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetProducts_Products_Edges_ProductEdge : global::System.IEquatable<GetProducts_Products_Edges_ProductEdge>, IGetProducts_Products_Edges_ProductEdge
    {
        public GetProducts_Products_Edges_ProductEdge(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges_Node node)
        {
            Node = node;
        }

        /// <summary>
        /// The item at the end of ProductEdge.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges_Node Node { get; }

        public virtual global::System.Boolean Equals(GetProducts_Products_Edges_ProductEdge? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Node.Equals(other.Node));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetProducts_Products_Edges_ProductEdge)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Node.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// A product represents an individual item for sale in a Shopify store. Products are often physical, but they don't have to be.
    /// For example, a digital download (such as a movie, music or ebook file) also qualifies as a product, as do services (such as equipment rental, work for hire, customization of another product or an extended warranty).
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetProducts_Products_Edges_Node_Product : global::System.IEquatable<GetProducts_Products_Edges_Node_Product>, IGetProducts_Products_Edges_Node_Product
    {
        public GetProducts_Products_Edges_Node_Product(global::System.String handle, global::System.String title, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges_Node_PriceRange priceRange, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges_Node_Images images)
        {
            Handle = handle;
            Title = title;
            PriceRange = priceRange;
            Images = images;
        }

        /// <summary>
        /// A human-friendly unique string for the Product automatically generated from its title.
        /// They are used by the Liquid templating language to refer to objects.
        /// </summary>
        public global::System.String Handle { get; }
        /// <summary>
        /// The product’s title.
        /// </summary>
        public global::System.String Title { get; }
        /// <summary>
        /// The price range.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges_Node_PriceRange PriceRange { get; }
        /// <summary>
        /// List of images associated with the product.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges_Node_Images Images { get; }

        public virtual global::System.Boolean Equals(GetProducts_Products_Edges_Node_Product? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Handle.Equals(other.Handle)) && Title.Equals(other.Title) && PriceRange.Equals(other.PriceRange) && Images.Equals(other.Images);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetProducts_Products_Edges_Node_Product)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Handle.GetHashCode();
                hash ^= 397 * Title.GetHashCode();
                hash ^= 397 * PriceRange.GetHashCode();
                hash ^= 397 * Images.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// The price range of the product.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetProducts_Products_Edges_Node_PriceRange_ProductPriceRange : global::System.IEquatable<GetProducts_Products_Edges_Node_PriceRange_ProductPriceRange>, IGetProducts_Products_Edges_Node_PriceRange_ProductPriceRange
    {
        public GetProducts_Products_Edges_Node_PriceRange_ProductPriceRange(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges_Node_PriceRange_MinVariantPrice minVariantPrice)
        {
            MinVariantPrice = minVariantPrice;
        }

        /// <summary>
        /// The lowest variant's price.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges_Node_PriceRange_MinVariantPrice MinVariantPrice { get; }

        public virtual global::System.Boolean Equals(GetProducts_Products_Edges_Node_PriceRange_ProductPriceRange? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (MinVariantPrice.Equals(other.MinVariantPrice));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetProducts_Products_Edges_Node_PriceRange_ProductPriceRange)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * MinVariantPrice.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// An auto-generated type for paginating through multiple Images.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetProducts_Products_Edges_Node_Images_ImageConnection : global::System.IEquatable<GetProducts_Products_Edges_Node_Images_ImageConnection>, IGetProducts_Products_Edges_Node_Images_ImageConnection
    {
        public GetProducts_Products_Edges_Node_Images_ImageConnection(global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges_Node_Images_Edges> edges)
        {
            Edges = edges;
        }

        /// <summary>
        /// A list of edges.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges_Node_Images_Edges> Edges { get; }

        public virtual global::System.Boolean Equals(GetProducts_Products_Edges_Node_Images_ImageConnection? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Edges, other.Edges));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetProducts_Products_Edges_Node_Images_ImageConnection)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                foreach (var Edges_elm in Edges)
                {
                    hash ^= 397 * Edges_elm.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// A monetary value with currency.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetProducts_Products_Edges_Node_PriceRange_MinVariantPrice_MoneyV2 : global::System.IEquatable<GetProducts_Products_Edges_Node_PriceRange_MinVariantPrice_MoneyV2>, IGetProducts_Products_Edges_Node_PriceRange_MinVariantPrice_MoneyV2
    {
        public GetProducts_Products_Edges_Node_PriceRange_MinVariantPrice_MoneyV2(global::System.String amount)
        {
            Amount = amount;
        }

        /// <summary>
        /// String money amount.
        /// </summary>
        public global::System.String Amount { get; }

        public virtual global::System.Boolean Equals(GetProducts_Products_Edges_Node_PriceRange_MinVariantPrice_MoneyV2? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Amount.Equals(other.Amount));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetProducts_Products_Edges_Node_PriceRange_MinVariantPrice_MoneyV2)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Amount.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// An auto-generated type which holds one Image and a cursor during pagination.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetProducts_Products_Edges_Node_Images_Edges_ImageEdge : global::System.IEquatable<GetProducts_Products_Edges_Node_Images_Edges_ImageEdge>, IGetProducts_Products_Edges_Node_Images_Edges_ImageEdge
    {
        public GetProducts_Products_Edges_Node_Images_Edges_ImageEdge(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges_Node_Images_Edges_Node node)
        {
            Node = node;
        }

        /// <summary>
        /// The item at the end of ImageEdge.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges_Node_Images_Edges_Node Node { get; }

        public virtual global::System.Boolean Equals(GetProducts_Products_Edges_Node_Images_Edges_ImageEdge? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Node.Equals(other.Node));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetProducts_Products_Edges_Node_Images_Edges_ImageEdge)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Node.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// Represents an image resource.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetProducts_Products_Edges_Node_Images_Edges_Node_Image : global::System.IEquatable<GetProducts_Products_Edges_Node_Images_Edges_Node_Image>, IGetProducts_Products_Edges_Node_Images_Edges_Node_Image
    {
        public GetProducts_Products_Edges_Node_Images_Edges_Node_Image(global::System.Uri url)
        {
            Url = url;
        }

        /// <summary>
        /// The location of the image as a URL.
        /// 
        /// If no transform options are specified, then the original image will be preserved including any pre-applied transforms.
        /// 
        /// All transformation options are considered "best-effort". Any transformation that the original image type doesn't support will be ignored.
        /// 
        /// If you need multiple variations of the same image, then you can use [GraphQL aliases](https://graphql.org/learn/queries/#aliases).
        /// </summary>
        public global::System.Uri Url { get; }

        public virtual global::System.Boolean Equals(GetProducts_Products_Edges_Node_Images_Edges_Node_Image? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Url.Equals(other.Url));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetProducts_Products_Edges_Node_Images_Edges_Node_Image)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Url.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// The schema’s entry-point for queries. This acts as the public, top-level API from which all queries must start.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProductsResult
    {
        /// <summary>
        /// List of the shop’s products.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products Products { get; }
    }

    /// <summary>
    /// An auto-generated type for paginating through multiple Products.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProducts_Products
    {
        /// <summary>
        /// A list of edges.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges> Edges { get; }
    }

    /// <summary>
    /// An auto-generated type for paginating through multiple Products.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProducts_Products_ProductConnection : IGetProducts_Products
    {
    }

    /// <summary>
    /// An auto-generated type which holds one Product and a cursor during pagination.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProducts_Products_Edges
    {
        /// <summary>
        /// The item at the end of ProductEdge.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges_Node Node { get; }
    }

    /// <summary>
    /// An auto-generated type which holds one Product and a cursor during pagination.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProducts_Products_Edges_ProductEdge : IGetProducts_Products_Edges
    {
    }

    /// <summary>
    /// A product represents an individual item for sale in a Shopify store. Products are often physical, but they don't have to be.
    /// For example, a digital download (such as a movie, music or ebook file) also qualifies as a product, as do services (such as equipment rental, work for hire, customization of another product or an extended warranty).
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProducts_Products_Edges_Node
    {
        /// <summary>
        /// A human-friendly unique string for the Product automatically generated from its title.
        /// They are used by the Liquid templating language to refer to objects.
        /// </summary>
        public global::System.String Handle { get; }
        /// <summary>
        /// The product’s title.
        /// </summary>
        public global::System.String Title { get; }
        /// <summary>
        /// The price range.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges_Node_PriceRange PriceRange { get; }
        /// <summary>
        /// List of images associated with the product.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges_Node_Images Images { get; }
    }

    /// <summary>
    /// A product represents an individual item for sale in a Shopify store. Products are often physical, but they don't have to be.
    /// For example, a digital download (such as a movie, music or ebook file) also qualifies as a product, as do services (such as equipment rental, work for hire, customization of another product or an extended warranty).
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProducts_Products_Edges_Node_Product : IGetProducts_Products_Edges_Node
    {
    }

    /// <summary>
    /// The price range of the product.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProducts_Products_Edges_Node_PriceRange
    {
        /// <summary>
        /// The lowest variant's price.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges_Node_PriceRange_MinVariantPrice MinVariantPrice { get; }
    }

    /// <summary>
    /// The price range of the product.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProducts_Products_Edges_Node_PriceRange_ProductPriceRange : IGetProducts_Products_Edges_Node_PriceRange
    {
    }

    /// <summary>
    /// An auto-generated type for paginating through multiple Images.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProducts_Products_Edges_Node_Images
    {
        /// <summary>
        /// A list of edges.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges_Node_Images_Edges> Edges { get; }
    }

    /// <summary>
    /// An auto-generated type for paginating through multiple Images.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProducts_Products_Edges_Node_Images_ImageConnection : IGetProducts_Products_Edges_Node_Images
    {
    }

    /// <summary>
    /// A monetary value with currency.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProducts_Products_Edges_Node_PriceRange_MinVariantPrice
    {
        /// <summary>
        /// String money amount.
        /// </summary>
        public global::System.String Amount { get; }
    }

    /// <summary>
    /// A monetary value with currency.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProducts_Products_Edges_Node_PriceRange_MinVariantPrice_MoneyV2 : IGetProducts_Products_Edges_Node_PriceRange_MinVariantPrice
    {
    }

    /// <summary>
    /// An auto-generated type which holds one Image and a cursor during pagination.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProducts_Products_Edges_Node_Images_Edges
    {
        /// <summary>
        /// The item at the end of ImageEdge.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges_Node_Images_Edges_Node Node { get; }
    }

    /// <summary>
    /// An auto-generated type which holds one Image and a cursor during pagination.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProducts_Products_Edges_Node_Images_Edges_ImageEdge : IGetProducts_Products_Edges_Node_Images_Edges
    {
    }

    /// <summary>
    /// Represents an image resource.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProducts_Products_Edges_Node_Images_Edges_Node
    {
        /// <summary>
        /// The location of the image as a URL.
        /// 
        /// If no transform options are specified, then the original image will be preserved including any pre-applied transforms.
        /// 
        /// All transformation options are considered "best-effort". Any transformation that the original image type doesn't support will be ignored.
        /// 
        /// If you need multiple variations of the same image, then you can use [GraphQL aliases](https://graphql.org/learn/queries/#aliases).
        /// </summary>
        public global::System.Uri Url { get; }
    }

    /// <summary>
    /// Represents an image resource.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProducts_Products_Edges_Node_Images_Edges_Node_Image : IGetProducts_Products_Edges_Node_Images_Edges_Node
    {
    }

    /// <summary>
    /// The schema’s entry-point for mutations. This acts as the public, top-level API from which all mutation queries must start.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCustomerAccessTokenResult : global::System.IEquatable<CreateCustomerAccessTokenResult>, ICreateCustomerAccessTokenResult
    {
        public CreateCustomerAccessTokenResult(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAccessToken_CustomerAccessTokenCreate? customerAccessTokenCreate)
        {
            CustomerAccessTokenCreate = customerAccessTokenCreate;
        }

        /// <summary>
        /// Creates a customer access token.
        /// The customer access token is required to modify the customer object in any way.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAccessToken_CustomerAccessTokenCreate? CustomerAccessTokenCreate { get; }

        public virtual global::System.Boolean Equals(CreateCustomerAccessTokenResult? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((CustomerAccessTokenCreate is null && other.CustomerAccessTokenCreate is null) || CustomerAccessTokenCreate != null && CustomerAccessTokenCreate.Equals(other.CustomerAccessTokenCreate)));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CreateCustomerAccessTokenResult)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (CustomerAccessTokenCreate != null)
                {
                    hash ^= 397 * CustomerAccessTokenCreate.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// Return type for `customerAccessTokenCreate` mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerAccessTokenCreatePayload : global::System.IEquatable<CreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerAccessTokenCreatePayload>, ICreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerAccessTokenCreatePayload
    {
        public CreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerAccessTokenCreatePayload(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerAccessToken? customerAccessToken, global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerUserErrors> customerUserErrors)
        {
            CustomerAccessToken = customerAccessToken;
            CustomerUserErrors = customerUserErrors;
        }

        /// <summary>
        /// The newly created customer access token object.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerAccessToken? CustomerAccessToken { get; }
        /// <summary>
        /// The list of errors that occurred from executing the mutation.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerUserErrors> CustomerUserErrors { get; }

        public virtual global::System.Boolean Equals(CreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerAccessTokenCreatePayload? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((CustomerAccessToken is null && other.CustomerAccessToken is null) || CustomerAccessToken != null && CustomerAccessToken.Equals(other.CustomerAccessToken))) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(CustomerUserErrors, other.CustomerUserErrors);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerAccessTokenCreatePayload)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (CustomerAccessToken != null)
                {
                    hash ^= 397 * CustomerAccessToken.GetHashCode();
                }

                foreach (var CustomerUserErrors_elm in CustomerUserErrors)
                {
                    hash ^= 397 * CustomerUserErrors_elm.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// A CustomerAccessToken represents the unique token required to make modifications to the customer object.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerAccessToken_CustomerAccessToken : global::System.IEquatable<CreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerAccessToken_CustomerAccessToken>, ICreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerAccessToken_CustomerAccessToken
    {
        public CreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerAccessToken_CustomerAccessToken(global::System.String accessToken, global::System.DateTimeOffset expiresAt)
        {
            AccessToken = accessToken;
            ExpiresAt = expiresAt;
        }

        /// <summary>
        /// The customer’s access token.
        /// </summary>
        public global::System.String AccessToken { get; }
        /// <summary>
        /// The date and time when the customer access token expires.
        /// </summary>
        public global::System.DateTimeOffset ExpiresAt { get; }

        public virtual global::System.Boolean Equals(CreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerAccessToken_CustomerAccessToken? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (AccessToken.Equals(other.AccessToken)) && ExpiresAt.Equals(other.ExpiresAt);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerAccessToken_CustomerAccessToken)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * AccessToken.GetHashCode();
                hash ^= 397 * ExpiresAt.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// Represents an error that happens during execution of a customer mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerUserErrors_CustomerUserError : global::System.IEquatable<CreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerUserErrors_CustomerUserError>, ICreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerUserErrors_CustomerUserError
    {
        public CreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerUserErrors_CustomerUserError(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerErrorCode? code, global::System.Collections.Generic.IReadOnlyList<global::System.String>? field, global::System.String message)
        {
            Code = code;
            Field = field;
            Message = message;
        }

        /// <summary>
        /// The error code.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerErrorCode? Code { get; }
        /// <summary>
        /// The path to the input field that caused the error.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::System.String>? Field { get; }
        /// <summary>
        /// The error message.
        /// </summary>
        public global::System.String Message { get; }

        public virtual global::System.Boolean Equals(CreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerUserErrors_CustomerUserError? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((Code is null && other.Code is null) || Code != null && Code.Equals(other.Code))) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Field, other.Field) && Message.Equals(other.Message);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerUserErrors_CustomerUserError)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (Code != null)
                {
                    hash ^= 397 * Code.GetHashCode();
                }

                if (Field != null)
                {
                    foreach (var Field_elm in Field)
                    {
                        hash ^= 397 * Field_elm.GetHashCode();
                    }
                }

                hash ^= 397 * Message.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// The schema’s entry-point for mutations. This acts as the public, top-level API from which all mutation queries must start.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCustomerAccessTokenResult
    {
        /// <summary>
        /// Creates a customer access token.
        /// The customer access token is required to modify the customer object in any way.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAccessToken_CustomerAccessTokenCreate? CustomerAccessTokenCreate { get; }
    }

    /// <summary>
    /// Return type for `customerAccessTokenCreate` mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCustomerAccessToken_CustomerAccessTokenCreate
    {
        /// <summary>
        /// The newly created customer access token object.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerAccessToken? CustomerAccessToken { get; }
        /// <summary>
        /// The list of errors that occurred from executing the mutation.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerUserErrors> CustomerUserErrors { get; }
    }

    /// <summary>
    /// Return type for `customerAccessTokenCreate` mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerAccessTokenCreatePayload : ICreateCustomerAccessToken_CustomerAccessTokenCreate
    {
    }

    /// <summary>
    /// A CustomerAccessToken represents the unique token required to make modifications to the customer object.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerAccessToken
    {
        /// <summary>
        /// The customer’s access token.
        /// </summary>
        public global::System.String AccessToken { get; }
        /// <summary>
        /// The date and time when the customer access token expires.
        /// </summary>
        public global::System.DateTimeOffset ExpiresAt { get; }
    }

    /// <summary>
    /// A CustomerAccessToken represents the unique token required to make modifications to the customer object.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerAccessToken_CustomerAccessToken : ICreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerAccessToken
    {
    }

    /// <summary>
    /// Represents an error that happens during execution of a customer mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerUserErrors
    {
        /// <summary>
        /// The error code.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerErrorCode? Code { get; }
        /// <summary>
        /// The path to the input field that caused the error.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::System.String>? Field { get; }
        /// <summary>
        /// The error message.
        /// </summary>
        public global::System.String Message { get; }
    }

    /// <summary>
    /// Represents an error that happens during execution of a customer mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerUserErrors_CustomerUserError : ICreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerUserErrors
    {
    }

    /// <summary>
    /// The schema’s entry-point for mutations. This acts as the public, top-level API from which all mutation queries must start.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCheckoutLoggedOutResult : global::System.IEquatable<CreateCheckoutLoggedOutResult>, ICreateCheckoutLoggedOutResult
    {
        public CreateCheckoutLoggedOutResult(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedOut_CheckoutCreate? checkoutCreate)
        {
            CheckoutCreate = checkoutCreate;
        }

        /// <summary>
        /// Creates a new checkout.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedOut_CheckoutCreate? CheckoutCreate { get; }

        public virtual global::System.Boolean Equals(CreateCheckoutLoggedOutResult? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((CheckoutCreate is null && other.CheckoutCreate is null) || CheckoutCreate != null && CheckoutCreate.Equals(other.CheckoutCreate)));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CreateCheckoutLoggedOutResult)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (CheckoutCreate != null)
                {
                    hash ^= 397 * CheckoutCreate.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// Return type for `checkoutCreate` mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCheckoutLoggedOut_CheckoutCreate_CheckoutCreatePayload : global::System.IEquatable<CreateCheckoutLoggedOut_CheckoutCreate_CheckoutCreatePayload>, ICreateCheckoutLoggedOut_CheckoutCreate_CheckoutCreatePayload
    {
        public CreateCheckoutLoggedOut_CheckoutCreate_CheckoutCreatePayload(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedOut_CheckoutCreate_Checkout? checkout, global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedOut_CheckoutCreate_CheckoutUserErrors> checkoutUserErrors)
        {
            Checkout = checkout;
            CheckoutUserErrors = checkoutUserErrors;
        }

        /// <summary>
        /// The new checkout object.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedOut_CheckoutCreate_Checkout? Checkout { get; }
        /// <summary>
        /// The list of errors that occurred from executing the mutation.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedOut_CheckoutCreate_CheckoutUserErrors> CheckoutUserErrors { get; }

        public virtual global::System.Boolean Equals(CreateCheckoutLoggedOut_CheckoutCreate_CheckoutCreatePayload? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((Checkout is null && other.Checkout is null) || Checkout != null && Checkout.Equals(other.Checkout))) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(CheckoutUserErrors, other.CheckoutUserErrors);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CreateCheckoutLoggedOut_CheckoutCreate_CheckoutCreatePayload)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (Checkout != null)
                {
                    hash ^= 397 * Checkout.GetHashCode();
                }

                foreach (var CheckoutUserErrors_elm in CheckoutUserErrors)
                {
                    hash ^= 397 * CheckoutUserErrors_elm.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// A container for all the information required to checkout items and pay.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCheckoutLoggedOut_CheckoutCreate_Checkout_Checkout : global::System.IEquatable<CreateCheckoutLoggedOut_CheckoutCreate_Checkout_Checkout>, ICreateCheckoutLoggedOut_CheckoutCreate_Checkout_Checkout
    {
        public CreateCheckoutLoggedOut_CheckoutCreate_Checkout_Checkout(global::System.String id, global::System.Uri webUrl)
        {
            Id = id;
            WebUrl = webUrl;
        }

        /// <summary>
        /// A globally-unique identifier.
        /// </summary>
        public global::System.String Id { get; }
        /// <summary>
        /// The url pointing to the checkout accessible from the web.
        /// </summary>
        public global::System.Uri WebUrl { get; }

        public virtual global::System.Boolean Equals(CreateCheckoutLoggedOut_CheckoutCreate_Checkout_Checkout? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Id.Equals(other.Id)) && WebUrl.Equals(other.WebUrl);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CreateCheckoutLoggedOut_CheckoutCreate_Checkout_Checkout)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Id.GetHashCode();
                hash ^= 397 * WebUrl.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// Represents an error that happens during execution of a checkout mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCheckoutLoggedOut_CheckoutCreate_CheckoutUserErrors_CheckoutUserError : global::System.IEquatable<CreateCheckoutLoggedOut_CheckoutCreate_CheckoutUserErrors_CheckoutUserError>, ICreateCheckoutLoggedOut_CheckoutCreate_CheckoutUserErrors_CheckoutUserError
    {
        public CreateCheckoutLoggedOut_CheckoutCreate_CheckoutUserErrors_CheckoutUserError(global::System.Collections.Generic.IReadOnlyList<global::System.String>? field, global::System.String message)
        {
            Field = field;
            Message = message;
        }

        /// <summary>
        /// The path to the input field that caused the error.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::System.String>? Field { get; }
        /// <summary>
        /// The error message.
        /// </summary>
        public global::System.String Message { get; }

        public virtual global::System.Boolean Equals(CreateCheckoutLoggedOut_CheckoutCreate_CheckoutUserErrors_CheckoutUserError? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Field, other.Field)) && Message.Equals(other.Message);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CreateCheckoutLoggedOut_CheckoutCreate_CheckoutUserErrors_CheckoutUserError)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (Field != null)
                {
                    foreach (var Field_elm in Field)
                    {
                        hash ^= 397 * Field_elm.GetHashCode();
                    }
                }

                hash ^= 397 * Message.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// The schema’s entry-point for mutations. This acts as the public, top-level API from which all mutation queries must start.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCheckoutLoggedOutResult
    {
        /// <summary>
        /// Creates a new checkout.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedOut_CheckoutCreate? CheckoutCreate { get; }
    }

    /// <summary>
    /// Return type for `checkoutCreate` mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCheckoutLoggedOut_CheckoutCreate
    {
        /// <summary>
        /// The new checkout object.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedOut_CheckoutCreate_Checkout? Checkout { get; }
        /// <summary>
        /// The list of errors that occurred from executing the mutation.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedOut_CheckoutCreate_CheckoutUserErrors> CheckoutUserErrors { get; }
    }

    /// <summary>
    /// Return type for `checkoutCreate` mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCheckoutLoggedOut_CheckoutCreate_CheckoutCreatePayload : ICreateCheckoutLoggedOut_CheckoutCreate
    {
    }

    /// <summary>
    /// A container for all the information required to checkout items and pay.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCheckoutLoggedOut_CheckoutCreate_Checkout
    {
        /// <summary>
        /// A globally-unique identifier.
        /// </summary>
        public global::System.String Id { get; }
        /// <summary>
        /// The url pointing to the checkout accessible from the web.
        /// </summary>
        public global::System.Uri WebUrl { get; }
    }

    /// <summary>
    /// A container for all the information required to checkout items and pay.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCheckoutLoggedOut_CheckoutCreate_Checkout_Checkout : ICreateCheckoutLoggedOut_CheckoutCreate_Checkout
    {
    }

    /// <summary>
    /// Represents an error that happens during execution of a checkout mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCheckoutLoggedOut_CheckoutCreate_CheckoutUserErrors
    {
        /// <summary>
        /// The path to the input field that caused the error.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::System.String>? Field { get; }
        /// <summary>
        /// The error message.
        /// </summary>
        public global::System.String Message { get; }
    }

    /// <summary>
    /// Represents an error that happens during execution of a checkout mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCheckoutLoggedOut_CheckoutCreate_CheckoutUserErrors_CheckoutUserError : ICreateCheckoutLoggedOut_CheckoutCreate_CheckoutUserErrors
    {
    }

    /// <summary>
    /// The schema’s entry-point for mutations. This acts as the public, top-level API from which all mutation queries must start.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CheckoutCustomerAssociateV2Result : global::System.IEquatable<CheckoutCustomerAssociateV2Result>, ICheckoutCustomerAssociateV2Result
    {
        public CheckoutCustomerAssociateV2Result(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2? checkoutCustomerAssociateV2)
        {
            CheckoutCustomerAssociateV2 = checkoutCustomerAssociateV2;
        }

        /// <summary>
        /// Associates a customer to the checkout.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2? CheckoutCustomerAssociateV2 { get; }

        public virtual global::System.Boolean Equals(CheckoutCustomerAssociateV2Result? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((CheckoutCustomerAssociateV2 is null && other.CheckoutCustomerAssociateV2 is null) || CheckoutCustomerAssociateV2 != null && CheckoutCustomerAssociateV2.Equals(other.CheckoutCustomerAssociateV2)));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CheckoutCustomerAssociateV2Result)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (CheckoutCustomerAssociateV2 != null)
                {
                    hash ^= 397 * CheckoutCustomerAssociateV2.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// Return type for `checkoutCustomerAssociateV2` mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2Payload : global::System.IEquatable<CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2Payload>, ICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2Payload
    {
        public CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2Payload(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Checkout? checkout, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Customer? customer, global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_UserErrors> userErrors)
        {
            Checkout = checkout;
            Customer = customer;
            UserErrors = userErrors;
        }

        /// <summary>
        /// The updated checkout object.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Checkout? Checkout { get; }
        /// <summary>
        /// The associated customer object.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Customer? Customer { get; }
        /// <summary>
        /// The list of errors that occurred from executing the mutation.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_UserErrors> UserErrors { get; }

        public virtual global::System.Boolean Equals(CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2Payload? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((Checkout is null && other.Checkout is null) || Checkout != null && Checkout.Equals(other.Checkout))) && ((Customer is null && other.Customer is null) || Customer != null && Customer.Equals(other.Customer)) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(UserErrors, other.UserErrors);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2Payload)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (Checkout != null)
                {
                    hash ^= 397 * Checkout.GetHashCode();
                }

                if (Customer != null)
                {
                    hash ^= 397 * Customer.GetHashCode();
                }

                foreach (var UserErrors_elm in UserErrors)
                {
                    hash ^= 397 * UserErrors_elm.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// A container for all the information required to checkout items and pay.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Checkout_Checkout : global::System.IEquatable<CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Checkout_Checkout>, ICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Checkout_Checkout
    {
        public CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Checkout_Checkout(global::System.String id, global::System.Uri webUrl)
        {
            Id = id;
            WebUrl = webUrl;
        }

        /// <summary>
        /// A globally-unique identifier.
        /// </summary>
        public global::System.String Id { get; }
        /// <summary>
        /// The url pointing to the checkout accessible from the web.
        /// </summary>
        public global::System.Uri WebUrl { get; }

        public virtual global::System.Boolean Equals(CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Checkout_Checkout? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Id.Equals(other.Id)) && WebUrl.Equals(other.WebUrl);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Checkout_Checkout)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Id.GetHashCode();
                hash ^= 397 * WebUrl.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// A customer represents a customer account with the shop. Customer accounts store contact information for the customer, saving logged-in customers the trouble of having to provide it at every checkout.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Customer_Customer : global::System.IEquatable<CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Customer_Customer>, ICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Customer_Customer
    {
        public CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Customer_Customer(global::System.String id, global::System.String? email)
        {
            Id = id;
            Email = email;
        }

        /// <summary>
        /// A unique identifier for the customer.
        /// </summary>
        public global::System.String Id { get; }
        /// <summary>
        /// The customer’s email address.
        /// </summary>
        public global::System.String? Email { get; }

        public virtual global::System.Boolean Equals(CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Customer_Customer? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Id.Equals(other.Id)) && ((Email is null && other.Email is null) || Email != null && Email.Equals(other.Email));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Customer_Customer)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Id.GetHashCode();
                if (Email != null)
                {
                    hash ^= 397 * Email.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// Represents an error in the input of a mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_UserErrors_UserError : global::System.IEquatable<CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_UserErrors_UserError>, ICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_UserErrors_UserError
    {
        public CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_UserErrors_UserError(global::System.Collections.Generic.IReadOnlyList<global::System.String>? field, global::System.String message)
        {
            Field = field;
            Message = message;
        }

        /// <summary>
        /// The path to the input field that caused the error.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::System.String>? Field { get; }
        /// <summary>
        /// The error message.
        /// </summary>
        public global::System.String Message { get; }

        public virtual global::System.Boolean Equals(CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_UserErrors_UserError? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Field, other.Field)) && Message.Equals(other.Message);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_UserErrors_UserError)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (Field != null)
                {
                    foreach (var Field_elm in Field)
                    {
                        hash ^= 397 * Field_elm.GetHashCode();
                    }
                }

                hash ^= 397 * Message.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// The schema’s entry-point for mutations. This acts as the public, top-level API from which all mutation queries must start.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICheckoutCustomerAssociateV2Result
    {
        /// <summary>
        /// Associates a customer to the checkout.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2? CheckoutCustomerAssociateV2 { get; }
    }

    /// <summary>
    /// Return type for `checkoutCustomerAssociateV2` mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2
    {
        /// <summary>
        /// The updated checkout object.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Checkout? Checkout { get; }
        /// <summary>
        /// The associated customer object.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Customer? Customer { get; }
        /// <summary>
        /// The list of errors that occurred from executing the mutation.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_UserErrors> UserErrors { get; }
    }

    /// <summary>
    /// Return type for `checkoutCustomerAssociateV2` mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2Payload : ICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2
    {
    }

    /// <summary>
    /// A container for all the information required to checkout items and pay.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Checkout
    {
        /// <summary>
        /// A globally-unique identifier.
        /// </summary>
        public global::System.String Id { get; }
        /// <summary>
        /// The url pointing to the checkout accessible from the web.
        /// </summary>
        public global::System.Uri WebUrl { get; }
    }

    /// <summary>
    /// A container for all the information required to checkout items and pay.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Checkout_Checkout : ICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Checkout
    {
    }

    /// <summary>
    /// A customer represents a customer account with the shop. Customer accounts store contact information for the customer, saving logged-in customers the trouble of having to provide it at every checkout.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Customer
    {
        /// <summary>
        /// A unique identifier for the customer.
        /// </summary>
        public global::System.String Id { get; }
        /// <summary>
        /// The customer’s email address.
        /// </summary>
        public global::System.String? Email { get; }
    }

    /// <summary>
    /// A customer represents a customer account with the shop. Customer accounts store contact information for the customer, saving logged-in customers the trouble of having to provide it at every checkout.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Customer_Customer : ICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Customer
    {
    }

    /// <summary>
    /// Represents an error in the input of a mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_UserErrors
    {
        /// <summary>
        /// The path to the input field that caused the error.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::System.String>? Field { get; }
        /// <summary>
        /// The error message.
        /// </summary>
        public global::System.String Message { get; }
    }

    /// <summary>
    /// Represents an error in the input of a mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_UserErrors_UserError : ICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_UserErrors
    {
    }

    /// <summary>
    /// The schema’s entry-point for mutations. This acts as the public, top-level API from which all mutation queries must start.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class UpdateCustomerResult : global::System.IEquatable<UpdateCustomerResult>, IUpdateCustomerResult
    {
        public UpdateCustomerResult(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomer_CustomerUpdate? customerUpdate)
        {
            CustomerUpdate = customerUpdate;
        }

        /// <summary>
        /// Updates an existing customer.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomer_CustomerUpdate? CustomerUpdate { get; }

        public virtual global::System.Boolean Equals(UpdateCustomerResult? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((CustomerUpdate is null && other.CustomerUpdate is null) || CustomerUpdate != null && CustomerUpdate.Equals(other.CustomerUpdate)));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((UpdateCustomerResult)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (CustomerUpdate != null)
                {
                    hash ^= 397 * CustomerUpdate.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// Return type for `customerUpdate` mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class UpdateCustomer_CustomerUpdate_CustomerUpdatePayload : global::System.IEquatable<UpdateCustomer_CustomerUpdate_CustomerUpdatePayload>, IUpdateCustomer_CustomerUpdate_CustomerUpdatePayload
    {
        public UpdateCustomer_CustomerUpdate_CustomerUpdatePayload(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomer_CustomerUpdate_Customer? customer, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomer_CustomerUpdate_CustomerAccessToken? customerAccessToken, global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomer_CustomerUpdate_CustomerUserErrors> customerUserErrors)
        {
            Customer = customer;
            CustomerAccessToken = customerAccessToken;
            CustomerUserErrors = customerUserErrors;
        }

        /// <summary>
        /// The updated customer object.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomer_CustomerUpdate_Customer? Customer { get; }
        /// <summary>
        /// The newly created customer access token. If the customer's password is updated, all previous access tokens
        /// (including the one used to perform this mutation) become invalid, and a new token is generated.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomer_CustomerUpdate_CustomerAccessToken? CustomerAccessToken { get; }
        /// <summary>
        /// The list of errors that occurred from executing the mutation.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomer_CustomerUpdate_CustomerUserErrors> CustomerUserErrors { get; }

        public virtual global::System.Boolean Equals(UpdateCustomer_CustomerUpdate_CustomerUpdatePayload? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((Customer is null && other.Customer is null) || Customer != null && Customer.Equals(other.Customer))) && ((CustomerAccessToken is null && other.CustomerAccessToken is null) || CustomerAccessToken != null && CustomerAccessToken.Equals(other.CustomerAccessToken)) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(CustomerUserErrors, other.CustomerUserErrors);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((UpdateCustomer_CustomerUpdate_CustomerUpdatePayload)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (Customer != null)
                {
                    hash ^= 397 * Customer.GetHashCode();
                }

                if (CustomerAccessToken != null)
                {
                    hash ^= 397 * CustomerAccessToken.GetHashCode();
                }

                foreach (var CustomerUserErrors_elm in CustomerUserErrors)
                {
                    hash ^= 397 * CustomerUserErrors_elm.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// A customer represents a customer account with the shop. Customer accounts store contact information for the customer, saving logged-in customers the trouble of having to provide it at every checkout.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class UpdateCustomer_CustomerUpdate_Customer_Customer : global::System.IEquatable<UpdateCustomer_CustomerUpdate_Customer_Customer>, IUpdateCustomer_CustomerUpdate_Customer_Customer
    {
        public UpdateCustomer_CustomerUpdate_Customer_Customer(global::System.String id, global::System.String? firstName, global::System.String? lastName, global::System.Boolean acceptsMarketing, global::System.String? email, global::System.String? phone, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomer_CustomerUpdate_Customer_DefaultAddress? defaultAddress)
        {
            Id = id;
            FirstName = firstName;
            LastName = lastName;
            AcceptsMarketing = acceptsMarketing;
            Email = email;
            Phone = phone;
            DefaultAddress = defaultAddress;
        }

        /// <summary>
        /// A unique identifier for the customer.
        /// </summary>
        public global::System.String Id { get; }
        /// <summary>
        /// The customer’s first name.
        /// </summary>
        public global::System.String? FirstName { get; }
        /// <summary>
        /// The customer’s last name.
        /// </summary>
        public global::System.String? LastName { get; }
        /// <summary>
        /// Indicates whether the customer has consented to be sent marketing material via email.
        /// </summary>
        public global::System.Boolean AcceptsMarketing { get; }
        /// <summary>
        /// The customer’s email address.
        /// </summary>
        public global::System.String? Email { get; }
        /// <summary>
        /// The customer’s phone number.
        /// </summary>
        public global::System.String? Phone { get; }
        /// <summary>
        /// The customer’s default address.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomer_CustomerUpdate_Customer_DefaultAddress? DefaultAddress { get; }

        public virtual global::System.Boolean Equals(UpdateCustomer_CustomerUpdate_Customer_Customer? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Id.Equals(other.Id)) && ((FirstName is null && other.FirstName is null) || FirstName != null && FirstName.Equals(other.FirstName)) && ((LastName is null && other.LastName is null) || LastName != null && LastName.Equals(other.LastName)) && AcceptsMarketing == other.AcceptsMarketing && ((Email is null && other.Email is null) || Email != null && Email.Equals(other.Email)) && ((Phone is null && other.Phone is null) || Phone != null && Phone.Equals(other.Phone)) && ((DefaultAddress is null && other.DefaultAddress is null) || DefaultAddress != null && DefaultAddress.Equals(other.DefaultAddress));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((UpdateCustomer_CustomerUpdate_Customer_Customer)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Id.GetHashCode();
                if (FirstName != null)
                {
                    hash ^= 397 * FirstName.GetHashCode();
                }

                if (LastName != null)
                {
                    hash ^= 397 * LastName.GetHashCode();
                }

                hash ^= 397 * AcceptsMarketing.GetHashCode();
                if (Email != null)
                {
                    hash ^= 397 * Email.GetHashCode();
                }

                if (Phone != null)
                {
                    hash ^= 397 * Phone.GetHashCode();
                }

                if (DefaultAddress != null)
                {
                    hash ^= 397 * DefaultAddress.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// A CustomerAccessToken represents the unique token required to make modifications to the customer object.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class UpdateCustomer_CustomerUpdate_CustomerAccessToken_CustomerAccessToken : global::System.IEquatable<UpdateCustomer_CustomerUpdate_CustomerAccessToken_CustomerAccessToken>, IUpdateCustomer_CustomerUpdate_CustomerAccessToken_CustomerAccessToken
    {
        public UpdateCustomer_CustomerUpdate_CustomerAccessToken_CustomerAccessToken(global::System.String accessToken, global::System.DateTimeOffset expiresAt)
        {
            AccessToken = accessToken;
            ExpiresAt = expiresAt;
        }

        /// <summary>
        /// The customer’s access token.
        /// </summary>
        public global::System.String AccessToken { get; }
        /// <summary>
        /// The date and time when the customer access token expires.
        /// </summary>
        public global::System.DateTimeOffset ExpiresAt { get; }

        public virtual global::System.Boolean Equals(UpdateCustomer_CustomerUpdate_CustomerAccessToken_CustomerAccessToken? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (AccessToken.Equals(other.AccessToken)) && ExpiresAt.Equals(other.ExpiresAt);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((UpdateCustomer_CustomerUpdate_CustomerAccessToken_CustomerAccessToken)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * AccessToken.GetHashCode();
                hash ^= 397 * ExpiresAt.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// Represents an error that happens during execution of a customer mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class UpdateCustomer_CustomerUpdate_CustomerUserErrors_CustomerUserError : global::System.IEquatable<UpdateCustomer_CustomerUpdate_CustomerUserErrors_CustomerUserError>, IUpdateCustomer_CustomerUpdate_CustomerUserErrors_CustomerUserError
    {
        public UpdateCustomer_CustomerUpdate_CustomerUserErrors_CustomerUserError(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerErrorCode? code, global::System.Collections.Generic.IReadOnlyList<global::System.String>? field, global::System.String message)
        {
            Code = code;
            Field = field;
            Message = message;
        }

        /// <summary>
        /// The error code.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerErrorCode? Code { get; }
        /// <summary>
        /// The path to the input field that caused the error.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::System.String>? Field { get; }
        /// <summary>
        /// The error message.
        /// </summary>
        public global::System.String Message { get; }

        public virtual global::System.Boolean Equals(UpdateCustomer_CustomerUpdate_CustomerUserErrors_CustomerUserError? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((Code is null && other.Code is null) || Code != null && Code.Equals(other.Code))) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Field, other.Field) && Message.Equals(other.Message);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((UpdateCustomer_CustomerUpdate_CustomerUserErrors_CustomerUserError)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (Code != null)
                {
                    hash ^= 397 * Code.GetHashCode();
                }

                if (Field != null)
                {
                    foreach (var Field_elm in Field)
                    {
                        hash ^= 397 * Field_elm.GetHashCode();
                    }
                }

                hash ^= 397 * Message.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// Represents a mailing address for customers and shipping.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class UpdateCustomer_CustomerUpdate_Customer_DefaultAddress_MailingAddress : global::System.IEquatable<UpdateCustomer_CustomerUpdate_Customer_DefaultAddress_MailingAddress>, IUpdateCustomer_CustomerUpdate_Customer_DefaultAddress_MailingAddress
    {
        public UpdateCustomer_CustomerUpdate_Customer_DefaultAddress_MailingAddress(global::System.String id, global::System.String? address1, global::System.String? address2, global::System.String? city, global::System.String? company, global::System.String? country, global::System.String? firstName, global::System.String? lastName, global::System.String? phone, global::System.String? province, global::System.String? zip)
        {
            Id = id;
            Address1 = address1;
            Address2 = address2;
            City = city;
            Company = company;
            Country = country;
            FirstName = firstName;
            LastName = lastName;
            Phone = phone;
            Province = province;
            Zip = zip;
        }

        /// <summary>
        /// A globally-unique identifier.
        /// </summary>
        public global::System.String Id { get; }
        /// <summary>
        /// The first line of the address. Typically the street address or PO Box number.
        /// </summary>
        public global::System.String? Address1 { get; }
        /// <summary>
        /// The second line of the address. Typically the number of the apartment, suite, or unit.
        /// </summary>
        public global::System.String? Address2 { get; }
        /// <summary>
        /// The name of the city, district, village, or town.
        /// </summary>
        public global::System.String? City { get; }
        /// <summary>
        /// The name of the customer's company or organization.
        /// </summary>
        public global::System.String? Company { get; }
        /// <summary>
        /// The name of the country.
        /// </summary>
        public global::System.String? Country { get; }
        /// <summary>
        /// The first name of the customer.
        /// </summary>
        public global::System.String? FirstName { get; }
        /// <summary>
        /// The last name of the customer.
        /// </summary>
        public global::System.String? LastName { get; }
        /// <summary>
        /// A unique phone number for the customer.
        /// 
        /// Formatted using E.164 standard. For example, _+16135551111_.
        /// </summary>
        public global::System.String? Phone { get; }
        /// <summary>
        /// The region of the address, such as the province, state, or district.
        /// </summary>
        public global::System.String? Province { get; }
        /// <summary>
        /// The zip or postal code of the address.
        /// </summary>
        public global::System.String? Zip { get; }

        public virtual global::System.Boolean Equals(UpdateCustomer_CustomerUpdate_Customer_DefaultAddress_MailingAddress? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Id.Equals(other.Id)) && ((Address1 is null && other.Address1 is null) || Address1 != null && Address1.Equals(other.Address1)) && ((Address2 is null && other.Address2 is null) || Address2 != null && Address2.Equals(other.Address2)) && ((City is null && other.City is null) || City != null && City.Equals(other.City)) && ((Company is null && other.Company is null) || Company != null && Company.Equals(other.Company)) && ((Country is null && other.Country is null) || Country != null && Country.Equals(other.Country)) && ((FirstName is null && other.FirstName is null) || FirstName != null && FirstName.Equals(other.FirstName)) && ((LastName is null && other.LastName is null) || LastName != null && LastName.Equals(other.LastName)) && ((Phone is null && other.Phone is null) || Phone != null && Phone.Equals(other.Phone)) && ((Province is null && other.Province is null) || Province != null && Province.Equals(other.Province)) && ((Zip is null && other.Zip is null) || Zip != null && Zip.Equals(other.Zip));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((UpdateCustomer_CustomerUpdate_Customer_DefaultAddress_MailingAddress)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Id.GetHashCode();
                if (Address1 != null)
                {
                    hash ^= 397 * Address1.GetHashCode();
                }

                if (Address2 != null)
                {
                    hash ^= 397 * Address2.GetHashCode();
                }

                if (City != null)
                {
                    hash ^= 397 * City.GetHashCode();
                }

                if (Company != null)
                {
                    hash ^= 397 * Company.GetHashCode();
                }

                if (Country != null)
                {
                    hash ^= 397 * Country.GetHashCode();
                }

                if (FirstName != null)
                {
                    hash ^= 397 * FirstName.GetHashCode();
                }

                if (LastName != null)
                {
                    hash ^= 397 * LastName.GetHashCode();
                }

                if (Phone != null)
                {
                    hash ^= 397 * Phone.GetHashCode();
                }

                if (Province != null)
                {
                    hash ^= 397 * Province.GetHashCode();
                }

                if (Zip != null)
                {
                    hash ^= 397 * Zip.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// The schema’s entry-point for mutations. This acts as the public, top-level API from which all mutation queries must start.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IUpdateCustomerResult
    {
        /// <summary>
        /// Updates an existing customer.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomer_CustomerUpdate? CustomerUpdate { get; }
    }

    /// <summary>
    /// Return type for `customerUpdate` mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IUpdateCustomer_CustomerUpdate
    {
        /// <summary>
        /// The updated customer object.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomer_CustomerUpdate_Customer? Customer { get; }
        /// <summary>
        /// The newly created customer access token. If the customer's password is updated, all previous access tokens
        /// (including the one used to perform this mutation) become invalid, and a new token is generated.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomer_CustomerUpdate_CustomerAccessToken? CustomerAccessToken { get; }
        /// <summary>
        /// The list of errors that occurred from executing the mutation.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomer_CustomerUpdate_CustomerUserErrors> CustomerUserErrors { get; }
    }

    /// <summary>
    /// Return type for `customerUpdate` mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IUpdateCustomer_CustomerUpdate_CustomerUpdatePayload : IUpdateCustomer_CustomerUpdate
    {
    }

    /// <summary>
    /// A customer represents a customer account with the shop. Customer accounts store contact information for the customer, saving logged-in customers the trouble of having to provide it at every checkout.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IUpdateCustomer_CustomerUpdate_Customer
    {
        /// <summary>
        /// A unique identifier for the customer.
        /// </summary>
        public global::System.String Id { get; }
        /// <summary>
        /// The customer’s first name.
        /// </summary>
        public global::System.String? FirstName { get; }
        /// <summary>
        /// The customer’s last name.
        /// </summary>
        public global::System.String? LastName { get; }
        /// <summary>
        /// Indicates whether the customer has consented to be sent marketing material via email.
        /// </summary>
        public global::System.Boolean AcceptsMarketing { get; }
        /// <summary>
        /// The customer’s email address.
        /// </summary>
        public global::System.String? Email { get; }
        /// <summary>
        /// The customer’s phone number.
        /// </summary>
        public global::System.String? Phone { get; }
        /// <summary>
        /// The customer’s default address.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomer_CustomerUpdate_Customer_DefaultAddress? DefaultAddress { get; }
    }

    /// <summary>
    /// A customer represents a customer account with the shop. Customer accounts store contact information for the customer, saving logged-in customers the trouble of having to provide it at every checkout.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IUpdateCustomer_CustomerUpdate_Customer_Customer : IUpdateCustomer_CustomerUpdate_Customer
    {
    }

    /// <summary>
    /// A CustomerAccessToken represents the unique token required to make modifications to the customer object.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IUpdateCustomer_CustomerUpdate_CustomerAccessToken
    {
        /// <summary>
        /// The customer’s access token.
        /// </summary>
        public global::System.String AccessToken { get; }
        /// <summary>
        /// The date and time when the customer access token expires.
        /// </summary>
        public global::System.DateTimeOffset ExpiresAt { get; }
    }

    /// <summary>
    /// A CustomerAccessToken represents the unique token required to make modifications to the customer object.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IUpdateCustomer_CustomerUpdate_CustomerAccessToken_CustomerAccessToken : IUpdateCustomer_CustomerUpdate_CustomerAccessToken
    {
    }

    /// <summary>
    /// Represents an error that happens during execution of a customer mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IUpdateCustomer_CustomerUpdate_CustomerUserErrors
    {
        /// <summary>
        /// The error code.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerErrorCode? Code { get; }
        /// <summary>
        /// The path to the input field that caused the error.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::System.String>? Field { get; }
        /// <summary>
        /// The error message.
        /// </summary>
        public global::System.String Message { get; }
    }

    /// <summary>
    /// Represents an error that happens during execution of a customer mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IUpdateCustomer_CustomerUpdate_CustomerUserErrors_CustomerUserError : IUpdateCustomer_CustomerUpdate_CustomerUserErrors
    {
    }

    /// <summary>
    /// Represents a mailing address for customers and shipping.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IUpdateCustomer_CustomerUpdate_Customer_DefaultAddress
    {
        /// <summary>
        /// A globally-unique identifier.
        /// </summary>
        public global::System.String Id { get; }
        /// <summary>
        /// The first line of the address. Typically the street address or PO Box number.
        /// </summary>
        public global::System.String? Address1 { get; }
        /// <summary>
        /// The second line of the address. Typically the number of the apartment, suite, or unit.
        /// </summary>
        public global::System.String? Address2 { get; }
        /// <summary>
        /// The name of the city, district, village, or town.
        /// </summary>
        public global::System.String? City { get; }
        /// <summary>
        /// The name of the customer's company or organization.
        /// </summary>
        public global::System.String? Company { get; }
        /// <summary>
        /// The name of the country.
        /// </summary>
        public global::System.String? Country { get; }
        /// <summary>
        /// The first name of the customer.
        /// </summary>
        public global::System.String? FirstName { get; }
        /// <summary>
        /// The last name of the customer.
        /// </summary>
        public global::System.String? LastName { get; }
        /// <summary>
        /// A unique phone number for the customer.
        /// 
        /// Formatted using E.164 standard. For example, _+16135551111_.
        /// </summary>
        public global::System.String? Phone { get; }
        /// <summary>
        /// The region of the address, such as the province, state, or district.
        /// </summary>
        public global::System.String? Province { get; }
        /// <summary>
        /// The zip or postal code of the address.
        /// </summary>
        public global::System.String? Zip { get; }
    }

    /// <summary>
    /// Represents a mailing address for customers and shipping.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IUpdateCustomer_CustomerUpdate_Customer_DefaultAddress_MailingAddress : IUpdateCustomer_CustomerUpdate_Customer_DefaultAddress
    {
    }

    /// <summary>
    /// The schema’s entry-point for mutations. This acts as the public, top-level API from which all mutation queries must start.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCheckoutLoggedInResult : global::System.IEquatable<CreateCheckoutLoggedInResult>, ICreateCheckoutLoggedInResult
    {
        public CreateCheckoutLoggedInResult(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedIn_CheckoutCreate? checkoutCreate)
        {
            CheckoutCreate = checkoutCreate;
        }

        /// <summary>
        /// Creates a new checkout.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedIn_CheckoutCreate? CheckoutCreate { get; }

        public virtual global::System.Boolean Equals(CreateCheckoutLoggedInResult? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((CheckoutCreate is null && other.CheckoutCreate is null) || CheckoutCreate != null && CheckoutCreate.Equals(other.CheckoutCreate)));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CreateCheckoutLoggedInResult)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (CheckoutCreate != null)
                {
                    hash ^= 397 * CheckoutCreate.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// Return type for `checkoutCreate` mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCheckoutLoggedIn_CheckoutCreate_CheckoutCreatePayload : global::System.IEquatable<CreateCheckoutLoggedIn_CheckoutCreate_CheckoutCreatePayload>, ICreateCheckoutLoggedIn_CheckoutCreate_CheckoutCreatePayload
    {
        public CreateCheckoutLoggedIn_CheckoutCreate_CheckoutCreatePayload(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedIn_CheckoutCreate_Checkout? checkout, global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedIn_CheckoutCreate_CheckoutUserErrors> checkoutUserErrors)
        {
            Checkout = checkout;
            CheckoutUserErrors = checkoutUserErrors;
        }

        /// <summary>
        /// The new checkout object.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedIn_CheckoutCreate_Checkout? Checkout { get; }
        /// <summary>
        /// The list of errors that occurred from executing the mutation.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedIn_CheckoutCreate_CheckoutUserErrors> CheckoutUserErrors { get; }

        public virtual global::System.Boolean Equals(CreateCheckoutLoggedIn_CheckoutCreate_CheckoutCreatePayload? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((Checkout is null && other.Checkout is null) || Checkout != null && Checkout.Equals(other.Checkout))) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(CheckoutUserErrors, other.CheckoutUserErrors);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CreateCheckoutLoggedIn_CheckoutCreate_CheckoutCreatePayload)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (Checkout != null)
                {
                    hash ^= 397 * Checkout.GetHashCode();
                }

                foreach (var CheckoutUserErrors_elm in CheckoutUserErrors)
                {
                    hash ^= 397 * CheckoutUserErrors_elm.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// A container for all the information required to checkout items and pay.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCheckoutLoggedIn_CheckoutCreate_Checkout_Checkout : global::System.IEquatable<CreateCheckoutLoggedIn_CheckoutCreate_Checkout_Checkout>, ICreateCheckoutLoggedIn_CheckoutCreate_Checkout_Checkout
    {
        public CreateCheckoutLoggedIn_CheckoutCreate_Checkout_Checkout(global::System.String id, global::System.Uri webUrl)
        {
            Id = id;
            WebUrl = webUrl;
        }

        /// <summary>
        /// A globally-unique identifier.
        /// </summary>
        public global::System.String Id { get; }
        /// <summary>
        /// The url pointing to the checkout accessible from the web.
        /// </summary>
        public global::System.Uri WebUrl { get; }

        public virtual global::System.Boolean Equals(CreateCheckoutLoggedIn_CheckoutCreate_Checkout_Checkout? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Id.Equals(other.Id)) && WebUrl.Equals(other.WebUrl);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CreateCheckoutLoggedIn_CheckoutCreate_Checkout_Checkout)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Id.GetHashCode();
                hash ^= 397 * WebUrl.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// Represents an error that happens during execution of a checkout mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCheckoutLoggedIn_CheckoutCreate_CheckoutUserErrors_CheckoutUserError : global::System.IEquatable<CreateCheckoutLoggedIn_CheckoutCreate_CheckoutUserErrors_CheckoutUserError>, ICreateCheckoutLoggedIn_CheckoutCreate_CheckoutUserErrors_CheckoutUserError
    {
        public CreateCheckoutLoggedIn_CheckoutCreate_CheckoutUserErrors_CheckoutUserError(global::System.Collections.Generic.IReadOnlyList<global::System.String>? field, global::System.String message)
        {
            Field = field;
            Message = message;
        }

        /// <summary>
        /// The path to the input field that caused the error.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::System.String>? Field { get; }
        /// <summary>
        /// The error message.
        /// </summary>
        public global::System.String Message { get; }

        public virtual global::System.Boolean Equals(CreateCheckoutLoggedIn_CheckoutCreate_CheckoutUserErrors_CheckoutUserError? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Field, other.Field)) && Message.Equals(other.Message);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CreateCheckoutLoggedIn_CheckoutCreate_CheckoutUserErrors_CheckoutUserError)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (Field != null)
                {
                    foreach (var Field_elm in Field)
                    {
                        hash ^= 397 * Field_elm.GetHashCode();
                    }
                }

                hash ^= 397 * Message.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// The schema’s entry-point for mutations. This acts as the public, top-level API from which all mutation queries must start.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCheckoutLoggedInResult
    {
        /// <summary>
        /// Creates a new checkout.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedIn_CheckoutCreate? CheckoutCreate { get; }
    }

    /// <summary>
    /// Return type for `checkoutCreate` mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCheckoutLoggedIn_CheckoutCreate
    {
        /// <summary>
        /// The new checkout object.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedIn_CheckoutCreate_Checkout? Checkout { get; }
        /// <summary>
        /// The list of errors that occurred from executing the mutation.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedIn_CheckoutCreate_CheckoutUserErrors> CheckoutUserErrors { get; }
    }

    /// <summary>
    /// Return type for `checkoutCreate` mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCheckoutLoggedIn_CheckoutCreate_CheckoutCreatePayload : ICreateCheckoutLoggedIn_CheckoutCreate
    {
    }

    /// <summary>
    /// A container for all the information required to checkout items and pay.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCheckoutLoggedIn_CheckoutCreate_Checkout
    {
        /// <summary>
        /// A globally-unique identifier.
        /// </summary>
        public global::System.String Id { get; }
        /// <summary>
        /// The url pointing to the checkout accessible from the web.
        /// </summary>
        public global::System.Uri WebUrl { get; }
    }

    /// <summary>
    /// A container for all the information required to checkout items and pay.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCheckoutLoggedIn_CheckoutCreate_Checkout_Checkout : ICreateCheckoutLoggedIn_CheckoutCreate_Checkout
    {
    }

    /// <summary>
    /// Represents an error that happens during execution of a checkout mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCheckoutLoggedIn_CheckoutCreate_CheckoutUserErrors
    {
        /// <summary>
        /// The path to the input field that caused the error.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::System.String>? Field { get; }
        /// <summary>
        /// The error message.
        /// </summary>
        public global::System.String Message { get; }
    }

    /// <summary>
    /// Represents an error that happens during execution of a checkout mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCheckoutLoggedIn_CheckoutCreate_CheckoutUserErrors_CheckoutUserError : ICreateCheckoutLoggedIn_CheckoutCreate_CheckoutUserErrors
    {
    }

    /// <summary>
    /// The schema’s entry-point for mutations. This acts as the public, top-level API from which all mutation queries must start.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class UpdateCustomerAddressResult : global::System.IEquatable<UpdateCustomerAddressResult>, IUpdateCustomerAddressResult
    {
        public UpdateCustomerAddressResult(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerAddress_CustomerAddressUpdate? customerAddressUpdate)
        {
            CustomerAddressUpdate = customerAddressUpdate;
        }

        /// <summary>
        /// Updates the address of an existing customer.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerAddress_CustomerAddressUpdate? CustomerAddressUpdate { get; }

        public virtual global::System.Boolean Equals(UpdateCustomerAddressResult? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((CustomerAddressUpdate is null && other.CustomerAddressUpdate is null) || CustomerAddressUpdate != null && CustomerAddressUpdate.Equals(other.CustomerAddressUpdate)));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((UpdateCustomerAddressResult)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (CustomerAddressUpdate != null)
                {
                    hash ^= 397 * CustomerAddressUpdate.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// Return type for `customerAddressUpdate` mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class UpdateCustomerAddress_CustomerAddressUpdate_CustomerAddressUpdatePayload : global::System.IEquatable<UpdateCustomerAddress_CustomerAddressUpdate_CustomerAddressUpdatePayload>, IUpdateCustomerAddress_CustomerAddressUpdate_CustomerAddressUpdatePayload
    {
        public UpdateCustomerAddress_CustomerAddressUpdate_CustomerAddressUpdatePayload(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerAddress_CustomerAddressUpdate_CustomerAddress? customerAddress, global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerAddress_CustomerAddressUpdate_CustomerUserErrors> customerUserErrors)
        {
            CustomerAddress = customerAddress;
            CustomerUserErrors = customerUserErrors;
        }

        /// <summary>
        /// The customer’s updated mailing address.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerAddress_CustomerAddressUpdate_CustomerAddress? CustomerAddress { get; }
        /// <summary>
        /// The list of errors that occurred from executing the mutation.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerAddress_CustomerAddressUpdate_CustomerUserErrors> CustomerUserErrors { get; }

        public virtual global::System.Boolean Equals(UpdateCustomerAddress_CustomerAddressUpdate_CustomerAddressUpdatePayload? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((CustomerAddress is null && other.CustomerAddress is null) || CustomerAddress != null && CustomerAddress.Equals(other.CustomerAddress))) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(CustomerUserErrors, other.CustomerUserErrors);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((UpdateCustomerAddress_CustomerAddressUpdate_CustomerAddressUpdatePayload)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (CustomerAddress != null)
                {
                    hash ^= 397 * CustomerAddress.GetHashCode();
                }

                foreach (var CustomerUserErrors_elm in CustomerUserErrors)
                {
                    hash ^= 397 * CustomerUserErrors_elm.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// Represents a mailing address for customers and shipping.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class UpdateCustomerAddress_CustomerAddressUpdate_CustomerAddress_MailingAddress : global::System.IEquatable<UpdateCustomerAddress_CustomerAddressUpdate_CustomerAddress_MailingAddress>, IUpdateCustomerAddress_CustomerAddressUpdate_CustomerAddress_MailingAddress
    {
        public UpdateCustomerAddress_CustomerAddressUpdate_CustomerAddress_MailingAddress(global::System.String id, global::System.String? address1, global::System.String? address2, global::System.String? city, global::System.String? company, global::System.String? country, global::System.String? firstName, global::System.String? lastName, global::System.String? phone, global::System.String? province, global::System.String? zip)
        {
            Id = id;
            Address1 = address1;
            Address2 = address2;
            City = city;
            Company = company;
            Country = country;
            FirstName = firstName;
            LastName = lastName;
            Phone = phone;
            Province = province;
            Zip = zip;
        }

        /// <summary>
        /// A globally-unique identifier.
        /// </summary>
        public global::System.String Id { get; }
        /// <summary>
        /// The first line of the address. Typically the street address or PO Box number.
        /// </summary>
        public global::System.String? Address1 { get; }
        /// <summary>
        /// The second line of the address. Typically the number of the apartment, suite, or unit.
        /// </summary>
        public global::System.String? Address2 { get; }
        /// <summary>
        /// The name of the city, district, village, or town.
        /// </summary>
        public global::System.String? City { get; }
        /// <summary>
        /// The name of the customer's company or organization.
        /// </summary>
        public global::System.String? Company { get; }
        /// <summary>
        /// The name of the country.
        /// </summary>
        public global::System.String? Country { get; }
        /// <summary>
        /// The first name of the customer.
        /// </summary>
        public global::System.String? FirstName { get; }
        /// <summary>
        /// The last name of the customer.
        /// </summary>
        public global::System.String? LastName { get; }
        /// <summary>
        /// A unique phone number for the customer.
        /// 
        /// Formatted using E.164 standard. For example, _+16135551111_.
        /// </summary>
        public global::System.String? Phone { get; }
        /// <summary>
        /// The region of the address, such as the province, state, or district.
        /// </summary>
        public global::System.String? Province { get; }
        /// <summary>
        /// The zip or postal code of the address.
        /// </summary>
        public global::System.String? Zip { get; }

        public virtual global::System.Boolean Equals(UpdateCustomerAddress_CustomerAddressUpdate_CustomerAddress_MailingAddress? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Id.Equals(other.Id)) && ((Address1 is null && other.Address1 is null) || Address1 != null && Address1.Equals(other.Address1)) && ((Address2 is null && other.Address2 is null) || Address2 != null && Address2.Equals(other.Address2)) && ((City is null && other.City is null) || City != null && City.Equals(other.City)) && ((Company is null && other.Company is null) || Company != null && Company.Equals(other.Company)) && ((Country is null && other.Country is null) || Country != null && Country.Equals(other.Country)) && ((FirstName is null && other.FirstName is null) || FirstName != null && FirstName.Equals(other.FirstName)) && ((LastName is null && other.LastName is null) || LastName != null && LastName.Equals(other.LastName)) && ((Phone is null && other.Phone is null) || Phone != null && Phone.Equals(other.Phone)) && ((Province is null && other.Province is null) || Province != null && Province.Equals(other.Province)) && ((Zip is null && other.Zip is null) || Zip != null && Zip.Equals(other.Zip));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((UpdateCustomerAddress_CustomerAddressUpdate_CustomerAddress_MailingAddress)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Id.GetHashCode();
                if (Address1 != null)
                {
                    hash ^= 397 * Address1.GetHashCode();
                }

                if (Address2 != null)
                {
                    hash ^= 397 * Address2.GetHashCode();
                }

                if (City != null)
                {
                    hash ^= 397 * City.GetHashCode();
                }

                if (Company != null)
                {
                    hash ^= 397 * Company.GetHashCode();
                }

                if (Country != null)
                {
                    hash ^= 397 * Country.GetHashCode();
                }

                if (FirstName != null)
                {
                    hash ^= 397 * FirstName.GetHashCode();
                }

                if (LastName != null)
                {
                    hash ^= 397 * LastName.GetHashCode();
                }

                if (Phone != null)
                {
                    hash ^= 397 * Phone.GetHashCode();
                }

                if (Province != null)
                {
                    hash ^= 397 * Province.GetHashCode();
                }

                if (Zip != null)
                {
                    hash ^= 397 * Zip.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// Represents an error that happens during execution of a customer mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class UpdateCustomerAddress_CustomerAddressUpdate_CustomerUserErrors_CustomerUserError : global::System.IEquatable<UpdateCustomerAddress_CustomerAddressUpdate_CustomerUserErrors_CustomerUserError>, IUpdateCustomerAddress_CustomerAddressUpdate_CustomerUserErrors_CustomerUserError
    {
        public UpdateCustomerAddress_CustomerAddressUpdate_CustomerUserErrors_CustomerUserError(global::System.Collections.Generic.IReadOnlyList<global::System.String>? field, global::System.String message)
        {
            Field = field;
            Message = message;
        }

        /// <summary>
        /// The path to the input field that caused the error.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::System.String>? Field { get; }
        /// <summary>
        /// The error message.
        /// </summary>
        public global::System.String Message { get; }

        public virtual global::System.Boolean Equals(UpdateCustomerAddress_CustomerAddressUpdate_CustomerUserErrors_CustomerUserError? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Field, other.Field)) && Message.Equals(other.Message);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((UpdateCustomerAddress_CustomerAddressUpdate_CustomerUserErrors_CustomerUserError)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (Field != null)
                {
                    foreach (var Field_elm in Field)
                    {
                        hash ^= 397 * Field_elm.GetHashCode();
                    }
                }

                hash ^= 397 * Message.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// The schema’s entry-point for mutations. This acts as the public, top-level API from which all mutation queries must start.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IUpdateCustomerAddressResult
    {
        /// <summary>
        /// Updates the address of an existing customer.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerAddress_CustomerAddressUpdate? CustomerAddressUpdate { get; }
    }

    /// <summary>
    /// Return type for `customerAddressUpdate` mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IUpdateCustomerAddress_CustomerAddressUpdate
    {
        /// <summary>
        /// The customer’s updated mailing address.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerAddress_CustomerAddressUpdate_CustomerAddress? CustomerAddress { get; }
        /// <summary>
        /// The list of errors that occurred from executing the mutation.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerAddress_CustomerAddressUpdate_CustomerUserErrors> CustomerUserErrors { get; }
    }

    /// <summary>
    /// Return type for `customerAddressUpdate` mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IUpdateCustomerAddress_CustomerAddressUpdate_CustomerAddressUpdatePayload : IUpdateCustomerAddress_CustomerAddressUpdate
    {
    }

    /// <summary>
    /// Represents a mailing address for customers and shipping.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IUpdateCustomerAddress_CustomerAddressUpdate_CustomerAddress
    {
        /// <summary>
        /// A globally-unique identifier.
        /// </summary>
        public global::System.String Id { get; }
        /// <summary>
        /// The first line of the address. Typically the street address or PO Box number.
        /// </summary>
        public global::System.String? Address1 { get; }
        /// <summary>
        /// The second line of the address. Typically the number of the apartment, suite, or unit.
        /// </summary>
        public global::System.String? Address2 { get; }
        /// <summary>
        /// The name of the city, district, village, or town.
        /// </summary>
        public global::System.String? City { get; }
        /// <summary>
        /// The name of the customer's company or organization.
        /// </summary>
        public global::System.String? Company { get; }
        /// <summary>
        /// The name of the country.
        /// </summary>
        public global::System.String? Country { get; }
        /// <summary>
        /// The first name of the customer.
        /// </summary>
        public global::System.String? FirstName { get; }
        /// <summary>
        /// The last name of the customer.
        /// </summary>
        public global::System.String? LastName { get; }
        /// <summary>
        /// A unique phone number for the customer.
        /// 
        /// Formatted using E.164 standard. For example, _+16135551111_.
        /// </summary>
        public global::System.String? Phone { get; }
        /// <summary>
        /// The region of the address, such as the province, state, or district.
        /// </summary>
        public global::System.String? Province { get; }
        /// <summary>
        /// The zip or postal code of the address.
        /// </summary>
        public global::System.String? Zip { get; }
    }

    /// <summary>
    /// Represents a mailing address for customers and shipping.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IUpdateCustomerAddress_CustomerAddressUpdate_CustomerAddress_MailingAddress : IUpdateCustomerAddress_CustomerAddressUpdate_CustomerAddress
    {
    }

    /// <summary>
    /// Represents an error that happens during execution of a customer mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IUpdateCustomerAddress_CustomerAddressUpdate_CustomerUserErrors
    {
        /// <summary>
        /// The path to the input field that caused the error.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::System.String>? Field { get; }
        /// <summary>
        /// The error message.
        /// </summary>
        public global::System.String Message { get; }
    }

    /// <summary>
    /// Represents an error that happens during execution of a customer mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IUpdateCustomerAddress_CustomerAddressUpdate_CustomerUserErrors_CustomerUserError : IUpdateCustomerAddress_CustomerAddressUpdate_CustomerUserErrors
    {
    }

    /// <summary>
    /// The schema’s entry-point for mutations. This acts as the public, top-level API from which all mutation queries must start.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCustomerAddressResult : global::System.IEquatable<CreateCustomerAddressResult>, ICreateCustomerAddressResult
    {
        public CreateCustomerAddressResult(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAddress_CustomerAddressCreate? customerAddressCreate)
        {
            CustomerAddressCreate = customerAddressCreate;
        }

        /// <summary>
        /// Creates a new address for a customer.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAddress_CustomerAddressCreate? CustomerAddressCreate { get; }

        public virtual global::System.Boolean Equals(CreateCustomerAddressResult? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((CustomerAddressCreate is null && other.CustomerAddressCreate is null) || CustomerAddressCreate != null && CustomerAddressCreate.Equals(other.CustomerAddressCreate)));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CreateCustomerAddressResult)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (CustomerAddressCreate != null)
                {
                    hash ^= 397 * CustomerAddressCreate.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// Return type for `customerAddressCreate` mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCustomerAddress_CustomerAddressCreate_CustomerAddressCreatePayload : global::System.IEquatable<CreateCustomerAddress_CustomerAddressCreate_CustomerAddressCreatePayload>, ICreateCustomerAddress_CustomerAddressCreate_CustomerAddressCreatePayload
    {
        public CreateCustomerAddress_CustomerAddressCreate_CustomerAddressCreatePayload(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAddress_CustomerAddressCreate_CustomerAddress? customerAddress, global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAddress_CustomerAddressCreate_CustomerUserErrors> customerUserErrors)
        {
            CustomerAddress = customerAddress;
            CustomerUserErrors = customerUserErrors;
        }

        /// <summary>
        /// The new customer address object.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAddress_CustomerAddressCreate_CustomerAddress? CustomerAddress { get; }
        /// <summary>
        /// The list of errors that occurred from executing the mutation.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAddress_CustomerAddressCreate_CustomerUserErrors> CustomerUserErrors { get; }

        public virtual global::System.Boolean Equals(CreateCustomerAddress_CustomerAddressCreate_CustomerAddressCreatePayload? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((CustomerAddress is null && other.CustomerAddress is null) || CustomerAddress != null && CustomerAddress.Equals(other.CustomerAddress))) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(CustomerUserErrors, other.CustomerUserErrors);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CreateCustomerAddress_CustomerAddressCreate_CustomerAddressCreatePayload)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (CustomerAddress != null)
                {
                    hash ^= 397 * CustomerAddress.GetHashCode();
                }

                foreach (var CustomerUserErrors_elm in CustomerUserErrors)
                {
                    hash ^= 397 * CustomerUserErrors_elm.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// Represents a mailing address for customers and shipping.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCustomerAddress_CustomerAddressCreate_CustomerAddress_MailingAddress : global::System.IEquatable<CreateCustomerAddress_CustomerAddressCreate_CustomerAddress_MailingAddress>, ICreateCustomerAddress_CustomerAddressCreate_CustomerAddress_MailingAddress
    {
        public CreateCustomerAddress_CustomerAddressCreate_CustomerAddress_MailingAddress(global::System.String id, global::System.String? address1, global::System.String? address2, global::System.String? city, global::System.String? company, global::System.String? country, global::System.String? firstName, global::System.String? lastName, global::System.String? phone, global::System.String? province, global::System.String? zip)
        {
            Id = id;
            Address1 = address1;
            Address2 = address2;
            City = city;
            Company = company;
            Country = country;
            FirstName = firstName;
            LastName = lastName;
            Phone = phone;
            Province = province;
            Zip = zip;
        }

        /// <summary>
        /// A globally-unique identifier.
        /// </summary>
        public global::System.String Id { get; }
        /// <summary>
        /// The first line of the address. Typically the street address or PO Box number.
        /// </summary>
        public global::System.String? Address1 { get; }
        /// <summary>
        /// The second line of the address. Typically the number of the apartment, suite, or unit.
        /// </summary>
        public global::System.String? Address2 { get; }
        /// <summary>
        /// The name of the city, district, village, or town.
        /// </summary>
        public global::System.String? City { get; }
        /// <summary>
        /// The name of the customer's company or organization.
        /// </summary>
        public global::System.String? Company { get; }
        /// <summary>
        /// The name of the country.
        /// </summary>
        public global::System.String? Country { get; }
        /// <summary>
        /// The first name of the customer.
        /// </summary>
        public global::System.String? FirstName { get; }
        /// <summary>
        /// The last name of the customer.
        /// </summary>
        public global::System.String? LastName { get; }
        /// <summary>
        /// A unique phone number for the customer.
        /// 
        /// Formatted using E.164 standard. For example, _+16135551111_.
        /// </summary>
        public global::System.String? Phone { get; }
        /// <summary>
        /// The region of the address, such as the province, state, or district.
        /// </summary>
        public global::System.String? Province { get; }
        /// <summary>
        /// The zip or postal code of the address.
        /// </summary>
        public global::System.String? Zip { get; }

        public virtual global::System.Boolean Equals(CreateCustomerAddress_CustomerAddressCreate_CustomerAddress_MailingAddress? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Id.Equals(other.Id)) && ((Address1 is null && other.Address1 is null) || Address1 != null && Address1.Equals(other.Address1)) && ((Address2 is null && other.Address2 is null) || Address2 != null && Address2.Equals(other.Address2)) && ((City is null && other.City is null) || City != null && City.Equals(other.City)) && ((Company is null && other.Company is null) || Company != null && Company.Equals(other.Company)) && ((Country is null && other.Country is null) || Country != null && Country.Equals(other.Country)) && ((FirstName is null && other.FirstName is null) || FirstName != null && FirstName.Equals(other.FirstName)) && ((LastName is null && other.LastName is null) || LastName != null && LastName.Equals(other.LastName)) && ((Phone is null && other.Phone is null) || Phone != null && Phone.Equals(other.Phone)) && ((Province is null && other.Province is null) || Province != null && Province.Equals(other.Province)) && ((Zip is null && other.Zip is null) || Zip != null && Zip.Equals(other.Zip));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CreateCustomerAddress_CustomerAddressCreate_CustomerAddress_MailingAddress)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Id.GetHashCode();
                if (Address1 != null)
                {
                    hash ^= 397 * Address1.GetHashCode();
                }

                if (Address2 != null)
                {
                    hash ^= 397 * Address2.GetHashCode();
                }

                if (City != null)
                {
                    hash ^= 397 * City.GetHashCode();
                }

                if (Company != null)
                {
                    hash ^= 397 * Company.GetHashCode();
                }

                if (Country != null)
                {
                    hash ^= 397 * Country.GetHashCode();
                }

                if (FirstName != null)
                {
                    hash ^= 397 * FirstName.GetHashCode();
                }

                if (LastName != null)
                {
                    hash ^= 397 * LastName.GetHashCode();
                }

                if (Phone != null)
                {
                    hash ^= 397 * Phone.GetHashCode();
                }

                if (Province != null)
                {
                    hash ^= 397 * Province.GetHashCode();
                }

                if (Zip != null)
                {
                    hash ^= 397 * Zip.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// Represents an error that happens during execution of a customer mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCustomerAddress_CustomerAddressCreate_CustomerUserErrors_CustomerUserError : global::System.IEquatable<CreateCustomerAddress_CustomerAddressCreate_CustomerUserErrors_CustomerUserError>, ICreateCustomerAddress_CustomerAddressCreate_CustomerUserErrors_CustomerUserError
    {
        public CreateCustomerAddress_CustomerAddressCreate_CustomerUserErrors_CustomerUserError(global::System.Collections.Generic.IReadOnlyList<global::System.String>? field, global::System.String message)
        {
            Field = field;
            Message = message;
        }

        /// <summary>
        /// The path to the input field that caused the error.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::System.String>? Field { get; }
        /// <summary>
        /// The error message.
        /// </summary>
        public global::System.String Message { get; }

        public virtual global::System.Boolean Equals(CreateCustomerAddress_CustomerAddressCreate_CustomerUserErrors_CustomerUserError? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Field, other.Field)) && Message.Equals(other.Message);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CreateCustomerAddress_CustomerAddressCreate_CustomerUserErrors_CustomerUserError)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (Field != null)
                {
                    foreach (var Field_elm in Field)
                    {
                        hash ^= 397 * Field_elm.GetHashCode();
                    }
                }

                hash ^= 397 * Message.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// The schema’s entry-point for mutations. This acts as the public, top-level API from which all mutation queries must start.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCustomerAddressResult
    {
        /// <summary>
        /// Creates a new address for a customer.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAddress_CustomerAddressCreate? CustomerAddressCreate { get; }
    }

    /// <summary>
    /// Return type for `customerAddressCreate` mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCustomerAddress_CustomerAddressCreate
    {
        /// <summary>
        /// The new customer address object.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAddress_CustomerAddressCreate_CustomerAddress? CustomerAddress { get; }
        /// <summary>
        /// The list of errors that occurred from executing the mutation.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAddress_CustomerAddressCreate_CustomerUserErrors> CustomerUserErrors { get; }
    }

    /// <summary>
    /// Return type for `customerAddressCreate` mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCustomerAddress_CustomerAddressCreate_CustomerAddressCreatePayload : ICreateCustomerAddress_CustomerAddressCreate
    {
    }

    /// <summary>
    /// Represents a mailing address for customers and shipping.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCustomerAddress_CustomerAddressCreate_CustomerAddress
    {
        /// <summary>
        /// A globally-unique identifier.
        /// </summary>
        public global::System.String Id { get; }
        /// <summary>
        /// The first line of the address. Typically the street address or PO Box number.
        /// </summary>
        public global::System.String? Address1 { get; }
        /// <summary>
        /// The second line of the address. Typically the number of the apartment, suite, or unit.
        /// </summary>
        public global::System.String? Address2 { get; }
        /// <summary>
        /// The name of the city, district, village, or town.
        /// </summary>
        public global::System.String? City { get; }
        /// <summary>
        /// The name of the customer's company or organization.
        /// </summary>
        public global::System.String? Company { get; }
        /// <summary>
        /// The name of the country.
        /// </summary>
        public global::System.String? Country { get; }
        /// <summary>
        /// The first name of the customer.
        /// </summary>
        public global::System.String? FirstName { get; }
        /// <summary>
        /// The last name of the customer.
        /// </summary>
        public global::System.String? LastName { get; }
        /// <summary>
        /// A unique phone number for the customer.
        /// 
        /// Formatted using E.164 standard. For example, _+16135551111_.
        /// </summary>
        public global::System.String? Phone { get; }
        /// <summary>
        /// The region of the address, such as the province, state, or district.
        /// </summary>
        public global::System.String? Province { get; }
        /// <summary>
        /// The zip or postal code of the address.
        /// </summary>
        public global::System.String? Zip { get; }
    }

    /// <summary>
    /// Represents a mailing address for customers and shipping.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCustomerAddress_CustomerAddressCreate_CustomerAddress_MailingAddress : ICreateCustomerAddress_CustomerAddressCreate_CustomerAddress
    {
    }

    /// <summary>
    /// Represents an error that happens during execution of a customer mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCustomerAddress_CustomerAddressCreate_CustomerUserErrors
    {
        /// <summary>
        /// The path to the input field that caused the error.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::System.String>? Field { get; }
        /// <summary>
        /// The error message.
        /// </summary>
        public global::System.String Message { get; }
    }

    /// <summary>
    /// Represents an error that happens during execution of a customer mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCustomerAddress_CustomerAddressCreate_CustomerUserErrors_CustomerUserError : ICreateCustomerAddress_CustomerAddressCreate_CustomerUserErrors
    {
    }

    /// <summary>
    /// The schema’s entry-point for mutations. This acts as the public, top-level API from which all mutation queries must start.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCustomerResult : global::System.IEquatable<CreateCustomerResult>, ICreateCustomerResult
    {
        public CreateCustomerResult(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomer_CustomerCreate? customerCreate)
        {
            CustomerCreate = customerCreate;
        }

        /// <summary>
        /// Creates a new customer.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomer_CustomerCreate? CustomerCreate { get; }

        public virtual global::System.Boolean Equals(CreateCustomerResult? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((CustomerCreate is null && other.CustomerCreate is null) || CustomerCreate != null && CustomerCreate.Equals(other.CustomerCreate)));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CreateCustomerResult)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (CustomerCreate != null)
                {
                    hash ^= 397 * CustomerCreate.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// Return type for `customerCreate` mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCustomer_CustomerCreate_CustomerCreatePayload : global::System.IEquatable<CreateCustomer_CustomerCreate_CustomerCreatePayload>, ICreateCustomer_CustomerCreate_CustomerCreatePayload
    {
        public CreateCustomer_CustomerCreate_CustomerCreatePayload(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomer_CustomerCreate_Customer? customer, global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomer_CustomerCreate_CustomerUserErrors> customerUserErrors)
        {
            Customer = customer;
            CustomerUserErrors = customerUserErrors;
        }

        /// <summary>
        /// The created customer object.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomer_CustomerCreate_Customer? Customer { get; }
        /// <summary>
        /// The list of errors that occurred from executing the mutation.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomer_CustomerCreate_CustomerUserErrors> CustomerUserErrors { get; }

        public virtual global::System.Boolean Equals(CreateCustomer_CustomerCreate_CustomerCreatePayload? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((Customer is null && other.Customer is null) || Customer != null && Customer.Equals(other.Customer))) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(CustomerUserErrors, other.CustomerUserErrors);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CreateCustomer_CustomerCreate_CustomerCreatePayload)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (Customer != null)
                {
                    hash ^= 397 * Customer.GetHashCode();
                }

                foreach (var CustomerUserErrors_elm in CustomerUserErrors)
                {
                    hash ^= 397 * CustomerUserErrors_elm.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// A customer represents a customer account with the shop. Customer accounts store contact information for the customer, saving logged-in customers the trouble of having to provide it at every checkout.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCustomer_CustomerCreate_Customer_Customer : global::System.IEquatable<CreateCustomer_CustomerCreate_Customer_Customer>, ICreateCustomer_CustomerCreate_Customer_Customer
    {
        public CreateCustomer_CustomerCreate_Customer_Customer(global::System.String? firstName, global::System.String? lastName, global::System.String? email, global::System.String? phone, global::System.Boolean acceptsMarketing)
        {
            FirstName = firstName;
            LastName = lastName;
            Email = email;
            Phone = phone;
            AcceptsMarketing = acceptsMarketing;
        }

        /// <summary>
        /// The customer’s first name.
        /// </summary>
        public global::System.String? FirstName { get; }
        /// <summary>
        /// The customer’s last name.
        /// </summary>
        public global::System.String? LastName { get; }
        /// <summary>
        /// The customer’s email address.
        /// </summary>
        public global::System.String? Email { get; }
        /// <summary>
        /// The customer’s phone number.
        /// </summary>
        public global::System.String? Phone { get; }
        /// <summary>
        /// Indicates whether the customer has consented to be sent marketing material via email.
        /// </summary>
        public global::System.Boolean AcceptsMarketing { get; }

        public virtual global::System.Boolean Equals(CreateCustomer_CustomerCreate_Customer_Customer? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((FirstName is null && other.FirstName is null) || FirstName != null && FirstName.Equals(other.FirstName))) && ((LastName is null && other.LastName is null) || LastName != null && LastName.Equals(other.LastName)) && ((Email is null && other.Email is null) || Email != null && Email.Equals(other.Email)) && ((Phone is null && other.Phone is null) || Phone != null && Phone.Equals(other.Phone)) && AcceptsMarketing == other.AcceptsMarketing;
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CreateCustomer_CustomerCreate_Customer_Customer)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (FirstName != null)
                {
                    hash ^= 397 * FirstName.GetHashCode();
                }

                if (LastName != null)
                {
                    hash ^= 397 * LastName.GetHashCode();
                }

                if (Email != null)
                {
                    hash ^= 397 * Email.GetHashCode();
                }

                if (Phone != null)
                {
                    hash ^= 397 * Phone.GetHashCode();
                }

                hash ^= 397 * AcceptsMarketing.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// Represents an error that happens during execution of a customer mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCustomer_CustomerCreate_CustomerUserErrors_CustomerUserError : global::System.IEquatable<CreateCustomer_CustomerCreate_CustomerUserErrors_CustomerUserError>, ICreateCustomer_CustomerCreate_CustomerUserErrors_CustomerUserError
    {
        public CreateCustomer_CustomerCreate_CustomerUserErrors_CustomerUserError(global::System.Collections.Generic.IReadOnlyList<global::System.String>? field, global::System.String message, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerErrorCode? code)
        {
            Field = field;
            Message = message;
            Code = code;
        }

        /// <summary>
        /// The path to the input field that caused the error.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::System.String>? Field { get; }
        /// <summary>
        /// The error message.
        /// </summary>
        public global::System.String Message { get; }
        /// <summary>
        /// The error code.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerErrorCode? Code { get; }

        public virtual global::System.Boolean Equals(CreateCustomer_CustomerCreate_CustomerUserErrors_CustomerUserError? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Field, other.Field)) && Message.Equals(other.Message) && ((Code is null && other.Code is null) || Code != null && Code.Equals(other.Code));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CreateCustomer_CustomerCreate_CustomerUserErrors_CustomerUserError)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (Field != null)
                {
                    foreach (var Field_elm in Field)
                    {
                        hash ^= 397 * Field_elm.GetHashCode();
                    }
                }

                hash ^= 397 * Message.GetHashCode();
                if (Code != null)
                {
                    hash ^= 397 * Code.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// The schema’s entry-point for mutations. This acts as the public, top-level API from which all mutation queries must start.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCustomerResult
    {
        /// <summary>
        /// Creates a new customer.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomer_CustomerCreate? CustomerCreate { get; }
    }

    /// <summary>
    /// Return type for `customerCreate` mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCustomer_CustomerCreate
    {
        /// <summary>
        /// The created customer object.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomer_CustomerCreate_Customer? Customer { get; }
        /// <summary>
        /// The list of errors that occurred from executing the mutation.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomer_CustomerCreate_CustomerUserErrors> CustomerUserErrors { get; }
    }

    /// <summary>
    /// Return type for `customerCreate` mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCustomer_CustomerCreate_CustomerCreatePayload : ICreateCustomer_CustomerCreate
    {
    }

    /// <summary>
    /// A customer represents a customer account with the shop. Customer accounts store contact information for the customer, saving logged-in customers the trouble of having to provide it at every checkout.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCustomer_CustomerCreate_Customer
    {
        /// <summary>
        /// The customer’s first name.
        /// </summary>
        public global::System.String? FirstName { get; }
        /// <summary>
        /// The customer’s last name.
        /// </summary>
        public global::System.String? LastName { get; }
        /// <summary>
        /// The customer’s email address.
        /// </summary>
        public global::System.String? Email { get; }
        /// <summary>
        /// The customer’s phone number.
        /// </summary>
        public global::System.String? Phone { get; }
        /// <summary>
        /// Indicates whether the customer has consented to be sent marketing material via email.
        /// </summary>
        public global::System.Boolean AcceptsMarketing { get; }
    }

    /// <summary>
    /// A customer represents a customer account with the shop. Customer accounts store contact information for the customer, saving logged-in customers the trouble of having to provide it at every checkout.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCustomer_CustomerCreate_Customer_Customer : ICreateCustomer_CustomerCreate_Customer
    {
    }

    /// <summary>
    /// Represents an error that happens during execution of a customer mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCustomer_CustomerCreate_CustomerUserErrors
    {
        /// <summary>
        /// The path to the input field that caused the error.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::System.String>? Field { get; }
        /// <summary>
        /// The error message.
        /// </summary>
        public global::System.String Message { get; }
        /// <summary>
        /// The error code.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerErrorCode? Code { get; }
    }

    /// <summary>
    /// Represents an error that happens during execution of a customer mutation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCustomer_CustomerCreate_CustomerUserErrors_CustomerUserError : ICreateCustomer_CustomerCreate_CustomerUserErrors
    {
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CustomerAccessTokenCreateInputInputValueFormatter : global::StrawberryShake.Serialization.IInputObjectFormatter
    {
        private global::StrawberryShake.Serialization.IInputValueFormatter _stringFormatter = default !;
        public global::System.String TypeName => "CustomerAccessTokenCreateInput";

        public void Initialize(global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _stringFormatter = serializerResolver.GetInputValueFormatter("String");
        }

        public global::System.Object? Format(global::System.Object? runtimeValue)
        {
            if (runtimeValue is null)
            {
                return null;
            }

            var input = runtimeValue as global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerAccessTokenCreateInput;
            var inputInfo = runtimeValue as global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ICustomerAccessTokenCreateInputInfo;
            if (input is null || inputInfo is null)
            {
                throw new global::System.ArgumentException(nameof(runtimeValue));
            }

            var fields = new global::System.Collections.Generic.List<global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>>();
            if (inputInfo.IsEmailSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("email", FormatEmail(input.Email)));
            }

            if (inputInfo.IsPasswordSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("password", FormatPassword(input.Password)));
            }

            return fields;
        }

        private global::System.Object? FormatEmail(global::System.String input)
        {
            if (input is null)
            {
                throw new global::System.ArgumentNullException(nameof(input));
            }

            return _stringFormatter.Format(input);
        }

        private global::System.Object? FormatPassword(global::System.String input)
        {
            if (input is null)
            {
                throw new global::System.ArgumentNullException(nameof(input));
            }

            return _stringFormatter.Format(input);
        }
    }

    ///<summary>Specifies the input fields required to create a customer access token.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CustomerAccessTokenCreateInput : global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ICustomerAccessTokenCreateInputInfo, global::System.IEquatable<CustomerAccessTokenCreateInput>
    {
        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CustomerAccessTokenCreateInput)obj);
        }

        public virtual global::System.Boolean Equals(CustomerAccessTokenCreateInput? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Email.Equals(other.Email)) && Password.Equals(other.Password);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Email.GetHashCode();
                hash ^= 397 * Password.GetHashCode();
                return hash;
            }
        }

        private global::System.String _value_email = default !;
        private global::System.Boolean _set_email;
        private global::System.String _value_password = default !;
        private global::System.Boolean _set_password;
        ///<summary>The email associated to the customer.</summary>
        public global::System.String Email
        {
            get => _value_email;
            set
            {
                _set_email = true;
                _value_email = value;
            }
        }

        global::System.Boolean global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ICustomerAccessTokenCreateInputInfo.IsEmailSet => _set_email;

        ///<summary>The login password to be used by the customer.</summary>
        public global::System.String Password
        {
            get => _value_password;
            set
            {
                _set_password = true;
                _value_password = value;
            }
        }

        global::System.Boolean global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ICustomerAccessTokenCreateInputInfo.IsPasswordSet => _set_password;
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CheckoutLineItemInputInputValueFormatter : global::StrawberryShake.Serialization.IInputObjectFormatter
    {
        private global::StrawberryShake.Serialization.IInputValueFormatter _attributeInputFormatter = default !;
        private global::StrawberryShake.Serialization.IInputValueFormatter _intFormatter = default !;
        private global::StrawberryShake.Serialization.IInputValueFormatter _iDFormatter = default !;
        public global::System.String TypeName => "CheckoutLineItemInput";

        public void Initialize(global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _attributeInputFormatter = serializerResolver.GetInputValueFormatter("AttributeInput");
            _intFormatter = serializerResolver.GetInputValueFormatter("Int");
            _iDFormatter = serializerResolver.GetInputValueFormatter("ID");
        }

        public global::System.Object? Format(global::System.Object? runtimeValue)
        {
            if (runtimeValue is null)
            {
                return null;
            }

            var input = runtimeValue as global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CheckoutLineItemInput;
            var inputInfo = runtimeValue as global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ICheckoutLineItemInputInfo;
            if (input is null || inputInfo is null)
            {
                throw new global::System.ArgumentException(nameof(runtimeValue));
            }

            var fields = new global::System.Collections.Generic.List<global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>>();
            if (inputInfo.IsCustomAttributesSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("customAttributes", FormatCustomAttributes(input.CustomAttributes)));
            }

            if (inputInfo.IsQuantitySet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("quantity", FormatQuantity(input.Quantity)));
            }

            if (inputInfo.IsVariantIdSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("variantId", FormatVariantId(input.VariantId)));
            }

            return fields;
        }

        private global::System.Object? FormatCustomAttributes(global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.AttributeInput>? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                var input_list = new global::System.Collections.Generic.List<global::System.Object?>();
                foreach (var input_elm in input)
                {
                    if (input_elm is null)
                    {
                        throw new global::System.ArgumentNullException(nameof(input_elm));
                    }

                    input_list.Add(_attributeInputFormatter.Format(input_elm));
                }

                return input_list;
            }
        }

        private global::System.Object? FormatQuantity(global::System.Int32 input)
        {
            return _intFormatter.Format(input);
        }

        private global::System.Object? FormatVariantId(global::System.String input)
        {
            if (input is null)
            {
                throw new global::System.ArgumentNullException(nameof(input));
            }

            return _iDFormatter.Format(input);
        }
    }

    ///<summary>Specifies the input fields to create a line item on a checkout.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CheckoutLineItemInput : global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ICheckoutLineItemInputInfo, global::System.IEquatable<CheckoutLineItemInput>
    {
        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CheckoutLineItemInput)obj);
        }

        public virtual global::System.Boolean Equals(CheckoutLineItemInput? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(CustomAttributes, other.CustomAttributes)) && Quantity == other.Quantity && VariantId.Equals(other.VariantId);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (CustomAttributes != null)
                {
                    foreach (var CustomAttributes_elm in CustomAttributes)
                    {
                        hash ^= 397 * CustomAttributes_elm.GetHashCode();
                    }
                }

                hash ^= 397 * Quantity.GetHashCode();
                hash ^= 397 * VariantId.GetHashCode();
                return hash;
            }
        }

        private global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.AttributeInput>? _value_customAttributes;
        private global::System.Boolean _set_customAttributes;
        private global::System.Int32 _value_quantity;
        private global::System.Boolean _set_quantity;
        private global::System.String _value_variantId = default !;
        private global::System.Boolean _set_variantId;
        ///<summary>Extra information in the form of an array of Key-Value pairs about the line item.</summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.AttributeInput>? CustomAttributes
        {
            get => _value_customAttributes;
            set
            {
                _set_customAttributes = true;
                _value_customAttributes = value;
            }
        }

        global::System.Boolean global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ICheckoutLineItemInputInfo.IsCustomAttributesSet => _set_customAttributes;

        ///<summary>The quantity of the line item.</summary>
        public global::System.Int32 Quantity
        {
            get => _value_quantity;
            set
            {
                _set_quantity = true;
                _value_quantity = value;
            }
        }

        global::System.Boolean global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ICheckoutLineItemInputInfo.IsQuantitySet => _set_quantity;

        ///<summary>The identifier of the product variant for the line item.</summary>
        public global::System.String VariantId
        {
            get => _value_variantId;
            set
            {
                _set_variantId = true;
                _value_variantId = value;
            }
        }

        global::System.Boolean global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ICheckoutLineItemInputInfo.IsVariantIdSet => _set_variantId;
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class AttributeInputInputValueFormatter : global::StrawberryShake.Serialization.IInputObjectFormatter
    {
        private global::StrawberryShake.Serialization.IInputValueFormatter _stringFormatter = default !;
        public global::System.String TypeName => "AttributeInput";

        public void Initialize(global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _stringFormatter = serializerResolver.GetInputValueFormatter("String");
        }

        public global::System.Object? Format(global::System.Object? runtimeValue)
        {
            if (runtimeValue is null)
            {
                return null;
            }

            var input = runtimeValue as global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.AttributeInput;
            var inputInfo = runtimeValue as global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.IAttributeInputInfo;
            if (input is null || inputInfo is null)
            {
                throw new global::System.ArgumentException(nameof(runtimeValue));
            }

            var fields = new global::System.Collections.Generic.List<global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>>();
            if (inputInfo.IsKeySet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("key", FormatKey(input.Key)));
            }

            if (inputInfo.IsValueSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("value", FormatValue(input.Value)));
            }

            return fields;
        }

        private global::System.Object? FormatKey(global::System.String input)
        {
            if (input is null)
            {
                throw new global::System.ArgumentNullException(nameof(input));
            }

            return _stringFormatter.Format(input);
        }

        private global::System.Object? FormatValue(global::System.String input)
        {
            if (input is null)
            {
                throw new global::System.ArgumentNullException(nameof(input));
            }

            return _stringFormatter.Format(input);
        }
    }

    ///<summary>Specifies the input fields required for an attribute.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class AttributeInput : global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.IAttributeInputInfo, global::System.IEquatable<AttributeInput>
    {
        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((AttributeInput)obj);
        }

        public virtual global::System.Boolean Equals(AttributeInput? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Key.Equals(other.Key)) && Value.Equals(other.Value);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Key.GetHashCode();
                hash ^= 397 * Value.GetHashCode();
                return hash;
            }
        }

        private global::System.String _value_key = default !;
        private global::System.Boolean _set_key;
        private global::System.String _value_value = default !;
        private global::System.Boolean _set_value;
        ///<summary>Key or name of the attribute.</summary>
        public global::System.String Key
        {
            get => _value_key;
            set
            {
                _set_key = true;
                _value_key = value;
            }
        }

        global::System.Boolean global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.IAttributeInputInfo.IsKeySet => _set_key;

        ///<summary>Value of the attribute.</summary>
        public global::System.String Value
        {
            get => _value_value;
            set
            {
                _set_value = true;
                _value_value = value;
            }
        }

        global::System.Boolean global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.IAttributeInputInfo.IsValueSet => _set_value;
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CustomerUpdateInputInputValueFormatter : global::StrawberryShake.Serialization.IInputObjectFormatter
    {
        private global::StrawberryShake.Serialization.IInputValueFormatter _stringFormatter = default !;
        private global::StrawberryShake.Serialization.IInputValueFormatter _booleanFormatter = default !;
        public global::System.String TypeName => "CustomerUpdateInput";

        public void Initialize(global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _stringFormatter = serializerResolver.GetInputValueFormatter("String");
            _booleanFormatter = serializerResolver.GetInputValueFormatter("Boolean");
        }

        public global::System.Object? Format(global::System.Object? runtimeValue)
        {
            if (runtimeValue is null)
            {
                return null;
            }

            var input = runtimeValue as global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerUpdateInput;
            var inputInfo = runtimeValue as global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ICustomerUpdateInputInfo;
            if (input is null || inputInfo is null)
            {
                throw new global::System.ArgumentException(nameof(runtimeValue));
            }

            var fields = new global::System.Collections.Generic.List<global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>>();
            if (inputInfo.IsFirstNameSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("firstName", FormatFirstName(input.FirstName)));
            }

            if (inputInfo.IsLastNameSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("lastName", FormatLastName(input.LastName)));
            }

            if (inputInfo.IsEmailSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("email", FormatEmail(input.Email)));
            }

            if (inputInfo.IsPhoneSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("phone", FormatPhone(input.Phone)));
            }

            if (inputInfo.IsPasswordSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("password", FormatPassword(input.Password)));
            }

            if (inputInfo.IsAcceptsMarketingSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("acceptsMarketing", FormatAcceptsMarketing(input.AcceptsMarketing)));
            }

            return fields;
        }

        private global::System.Object? FormatFirstName(global::System.String? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _stringFormatter.Format(input);
            }
        }

        private global::System.Object? FormatLastName(global::System.String? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _stringFormatter.Format(input);
            }
        }

        private global::System.Object? FormatEmail(global::System.String? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _stringFormatter.Format(input);
            }
        }

        private global::System.Object? FormatPhone(global::System.String? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _stringFormatter.Format(input);
            }
        }

        private global::System.Object? FormatPassword(global::System.String? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _stringFormatter.Format(input);
            }
        }

        private global::System.Object? FormatAcceptsMarketing(global::System.Boolean? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _booleanFormatter.Format(input);
            }
        }
    }

    ///<summary>Specifies the fields required to update the Customer information.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CustomerUpdateInput : global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ICustomerUpdateInputInfo, global::System.IEquatable<CustomerUpdateInput>
    {
        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CustomerUpdateInput)obj);
        }

        public virtual global::System.Boolean Equals(CustomerUpdateInput? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((FirstName is null && other.FirstName is null) || FirstName != null && FirstName.Equals(other.FirstName))) && ((LastName is null && other.LastName is null) || LastName != null && LastName.Equals(other.LastName)) && ((Email is null && other.Email is null) || Email != null && Email.Equals(other.Email)) && ((Phone is null && other.Phone is null) || Phone != null && Phone.Equals(other.Phone)) && ((Password is null && other.Password is null) || Password != null && Password.Equals(other.Password)) && AcceptsMarketing == other.AcceptsMarketing;
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (FirstName != null)
                {
                    hash ^= 397 * FirstName.GetHashCode();
                }

                if (LastName != null)
                {
                    hash ^= 397 * LastName.GetHashCode();
                }

                if (Email != null)
                {
                    hash ^= 397 * Email.GetHashCode();
                }

                if (Phone != null)
                {
                    hash ^= 397 * Phone.GetHashCode();
                }

                if (Password != null)
                {
                    hash ^= 397 * Password.GetHashCode();
                }

                if (AcceptsMarketing != null)
                {
                    hash ^= 397 * AcceptsMarketing.GetHashCode();
                }

                return hash;
            }
        }

        private global::System.String? _value_firstName;
        private global::System.Boolean _set_firstName;
        private global::System.String? _value_lastName;
        private global::System.Boolean _set_lastName;
        private global::System.String? _value_email;
        private global::System.Boolean _set_email;
        private global::System.String? _value_phone;
        private global::System.Boolean _set_phone;
        private global::System.String? _value_password;
        private global::System.Boolean _set_password;
        private global::System.Boolean? _value_acceptsMarketing;
        private global::System.Boolean _set_acceptsMarketing;
        ///<summary>The customer’s first name.</summary>
        public global::System.String? FirstName
        {
            get => _value_firstName;
            set
            {
                _set_firstName = true;
                _value_firstName = value;
            }
        }

        global::System.Boolean global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ICustomerUpdateInputInfo.IsFirstNameSet => _set_firstName;

        ///<summary>The customer’s last name.</summary>
        public global::System.String? LastName
        {
            get => _value_lastName;
            set
            {
                _set_lastName = true;
                _value_lastName = value;
            }
        }

        global::System.Boolean global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ICustomerUpdateInputInfo.IsLastNameSet => _set_lastName;

        ///<summary>The customer’s email.</summary>
        public global::System.String? Email
        {
            get => _value_email;
            set
            {
                _set_email = true;
                _value_email = value;
            }
        }

        global::System.Boolean global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ICustomerUpdateInputInfo.IsEmailSet => _set_email;

        ///<summary>A unique phone number for the customer.Formatted using E.164 standard. For example, _+16135551111_. To remove the phone number, specify `null`.</summary>
        public global::System.String? Phone
        {
            get => _value_phone;
            set
            {
                _set_phone = true;
                _value_phone = value;
            }
        }

        global::System.Boolean global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ICustomerUpdateInputInfo.IsPhoneSet => _set_phone;

        ///<summary>The login password used by the customer.</summary>
        public global::System.String? Password
        {
            get => _value_password;
            set
            {
                _set_password = true;
                _value_password = value;
            }
        }

        global::System.Boolean global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ICustomerUpdateInputInfo.IsPasswordSet => _set_password;

        ///<summary>Indicates whether the customer has consented to be sent marketing material via email.</summary>
        public global::System.Boolean? AcceptsMarketing
        {
            get => _value_acceptsMarketing;
            set
            {
                _set_acceptsMarketing = true;
                _value_acceptsMarketing = value;
            }
        }

        global::System.Boolean global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ICustomerUpdateInputInfo.IsAcceptsMarketingSet => _set_acceptsMarketing;
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class MailingAddressInputInputValueFormatter : global::StrawberryShake.Serialization.IInputObjectFormatter
    {
        private global::StrawberryShake.Serialization.IInputValueFormatter _stringFormatter = default !;
        public global::System.String TypeName => "MailingAddressInput";

        public void Initialize(global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _stringFormatter = serializerResolver.GetInputValueFormatter("String");
        }

        public global::System.Object? Format(global::System.Object? runtimeValue)
        {
            if (runtimeValue is null)
            {
                return null;
            }

            var input = runtimeValue as global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.MailingAddressInput;
            var inputInfo = runtimeValue as global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.IMailingAddressInputInfo;
            if (input is null || inputInfo is null)
            {
                throw new global::System.ArgumentException(nameof(runtimeValue));
            }

            var fields = new global::System.Collections.Generic.List<global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>>();
            if (inputInfo.IsAddress1Set)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("address1", FormatAddress1(input.Address1)));
            }

            if (inputInfo.IsAddress2Set)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("address2", FormatAddress2(input.Address2)));
            }

            if (inputInfo.IsCitySet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("city", FormatCity(input.City)));
            }

            if (inputInfo.IsCompanySet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("company", FormatCompany(input.Company)));
            }

            if (inputInfo.IsCountrySet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("country", FormatCountry(input.Country)));
            }

            if (inputInfo.IsFirstNameSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("firstName", FormatFirstName(input.FirstName)));
            }

            if (inputInfo.IsLastNameSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("lastName", FormatLastName(input.LastName)));
            }

            if (inputInfo.IsPhoneSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("phone", FormatPhone(input.Phone)));
            }

            if (inputInfo.IsProvinceSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("province", FormatProvince(input.Province)));
            }

            if (inputInfo.IsZipSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("zip", FormatZip(input.Zip)));
            }

            return fields;
        }

        private global::System.Object? FormatAddress1(global::System.String? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _stringFormatter.Format(input);
            }
        }

        private global::System.Object? FormatAddress2(global::System.String? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _stringFormatter.Format(input);
            }
        }

        private global::System.Object? FormatCity(global::System.String? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _stringFormatter.Format(input);
            }
        }

        private global::System.Object? FormatCompany(global::System.String? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _stringFormatter.Format(input);
            }
        }

        private global::System.Object? FormatCountry(global::System.String? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _stringFormatter.Format(input);
            }
        }

        private global::System.Object? FormatFirstName(global::System.String? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _stringFormatter.Format(input);
            }
        }

        private global::System.Object? FormatLastName(global::System.String? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _stringFormatter.Format(input);
            }
        }

        private global::System.Object? FormatPhone(global::System.String? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _stringFormatter.Format(input);
            }
        }

        private global::System.Object? FormatProvince(global::System.String? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _stringFormatter.Format(input);
            }
        }

        private global::System.Object? FormatZip(global::System.String? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _stringFormatter.Format(input);
            }
        }
    }

    ///<summary>Specifies the fields accepted to create or update a mailing address.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class MailingAddressInput : global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.IMailingAddressInputInfo, global::System.IEquatable<MailingAddressInput>
    {
        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((MailingAddressInput)obj);
        }

        public virtual global::System.Boolean Equals(MailingAddressInput? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((Address1 is null && other.Address1 is null) || Address1 != null && Address1.Equals(other.Address1))) && ((Address2 is null && other.Address2 is null) || Address2 != null && Address2.Equals(other.Address2)) && ((City is null && other.City is null) || City != null && City.Equals(other.City)) && ((Company is null && other.Company is null) || Company != null && Company.Equals(other.Company)) && ((Country is null && other.Country is null) || Country != null && Country.Equals(other.Country)) && ((FirstName is null && other.FirstName is null) || FirstName != null && FirstName.Equals(other.FirstName)) && ((LastName is null && other.LastName is null) || LastName != null && LastName.Equals(other.LastName)) && ((Phone is null && other.Phone is null) || Phone != null && Phone.Equals(other.Phone)) && ((Province is null && other.Province is null) || Province != null && Province.Equals(other.Province)) && ((Zip is null && other.Zip is null) || Zip != null && Zip.Equals(other.Zip));
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (Address1 != null)
                {
                    hash ^= 397 * Address1.GetHashCode();
                }

                if (Address2 != null)
                {
                    hash ^= 397 * Address2.GetHashCode();
                }

                if (City != null)
                {
                    hash ^= 397 * City.GetHashCode();
                }

                if (Company != null)
                {
                    hash ^= 397 * Company.GetHashCode();
                }

                if (Country != null)
                {
                    hash ^= 397 * Country.GetHashCode();
                }

                if (FirstName != null)
                {
                    hash ^= 397 * FirstName.GetHashCode();
                }

                if (LastName != null)
                {
                    hash ^= 397 * LastName.GetHashCode();
                }

                if (Phone != null)
                {
                    hash ^= 397 * Phone.GetHashCode();
                }

                if (Province != null)
                {
                    hash ^= 397 * Province.GetHashCode();
                }

                if (Zip != null)
                {
                    hash ^= 397 * Zip.GetHashCode();
                }

                return hash;
            }
        }

        private global::System.String? _value_address1;
        private global::System.Boolean _set_address1;
        private global::System.String? _value_address2;
        private global::System.Boolean _set_address2;
        private global::System.String? _value_city;
        private global::System.Boolean _set_city;
        private global::System.String? _value_company;
        private global::System.Boolean _set_company;
        private global::System.String? _value_country;
        private global::System.Boolean _set_country;
        private global::System.String? _value_firstName;
        private global::System.Boolean _set_firstName;
        private global::System.String? _value_lastName;
        private global::System.Boolean _set_lastName;
        private global::System.String? _value_phone;
        private global::System.Boolean _set_phone;
        private global::System.String? _value_province;
        private global::System.Boolean _set_province;
        private global::System.String? _value_zip;
        private global::System.Boolean _set_zip;
        ///<summary>The first line of the address. Typically the street address or PO Box number.</summary>
        public global::System.String? Address1
        {
            get => _value_address1;
            set
            {
                _set_address1 = true;
                _value_address1 = value;
            }
        }

        global::System.Boolean global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.IMailingAddressInputInfo.IsAddress1Set => _set_address1;

        ///<summary>The second line of the address. Typically the number of the apartment, suite, or unit.</summary>
        public global::System.String? Address2
        {
            get => _value_address2;
            set
            {
                _set_address2 = true;
                _value_address2 = value;
            }
        }

        global::System.Boolean global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.IMailingAddressInputInfo.IsAddress2Set => _set_address2;

        ///<summary>The name of the city, district, village, or town.</summary>
        public global::System.String? City
        {
            get => _value_city;
            set
            {
                _set_city = true;
                _value_city = value;
            }
        }

        global::System.Boolean global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.IMailingAddressInputInfo.IsCitySet => _set_city;

        ///<summary>The name of the customer's company or organization.</summary>
        public global::System.String? Company
        {
            get => _value_company;
            set
            {
                _set_company = true;
                _value_company = value;
            }
        }

        global::System.Boolean global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.IMailingAddressInputInfo.IsCompanySet => _set_company;

        ///<summary>The name of the country.</summary>
        public global::System.String? Country
        {
            get => _value_country;
            set
            {
                _set_country = true;
                _value_country = value;
            }
        }

        global::System.Boolean global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.IMailingAddressInputInfo.IsCountrySet => _set_country;

        ///<summary>The first name of the customer.</summary>
        public global::System.String? FirstName
        {
            get => _value_firstName;
            set
            {
                _set_firstName = true;
                _value_firstName = value;
            }
        }

        global::System.Boolean global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.IMailingAddressInputInfo.IsFirstNameSet => _set_firstName;

        ///<summary>The last name of the customer.</summary>
        public global::System.String? LastName
        {
            get => _value_lastName;
            set
            {
                _set_lastName = true;
                _value_lastName = value;
            }
        }

        global::System.Boolean global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.IMailingAddressInputInfo.IsLastNameSet => _set_lastName;

        ///<summary>A unique phone number for the customer.Formatted using E.164 standard. For example, _+16135551111_.</summary>
        public global::System.String? Phone
        {
            get => _value_phone;
            set
            {
                _set_phone = true;
                _value_phone = value;
            }
        }

        global::System.Boolean global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.IMailingAddressInputInfo.IsPhoneSet => _set_phone;

        ///<summary>The region of the address, such as the province, state, or district.</summary>
        public global::System.String? Province
        {
            get => _value_province;
            set
            {
                _set_province = true;
                _value_province = value;
            }
        }

        global::System.Boolean global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.IMailingAddressInputInfo.IsProvinceSet => _set_province;

        ///<summary>The zip or postal code of the address.</summary>
        public global::System.String? Zip
        {
            get => _value_zip;
            set
            {
                _set_zip = true;
                _value_zip = value;
            }
        }

        global::System.Boolean global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.IMailingAddressInputInfo.IsZipSet => _set_zip;
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CustomerCreateInputInputValueFormatter : global::StrawberryShake.Serialization.IInputObjectFormatter
    {
        private global::StrawberryShake.Serialization.IInputValueFormatter _stringFormatter = default !;
        private global::StrawberryShake.Serialization.IInputValueFormatter _booleanFormatter = default !;
        public global::System.String TypeName => "CustomerCreateInput";

        public void Initialize(global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _stringFormatter = serializerResolver.GetInputValueFormatter("String");
            _booleanFormatter = serializerResolver.GetInputValueFormatter("Boolean");
        }

        public global::System.Object? Format(global::System.Object? runtimeValue)
        {
            if (runtimeValue is null)
            {
                return null;
            }

            var input = runtimeValue as global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerCreateInput;
            var inputInfo = runtimeValue as global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ICustomerCreateInputInfo;
            if (input is null || inputInfo is null)
            {
                throw new global::System.ArgumentException(nameof(runtimeValue));
            }

            var fields = new global::System.Collections.Generic.List<global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>>();
            if (inputInfo.IsFirstNameSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("firstName", FormatFirstName(input.FirstName)));
            }

            if (inputInfo.IsLastNameSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("lastName", FormatLastName(input.LastName)));
            }

            if (inputInfo.IsEmailSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("email", FormatEmail(input.Email)));
            }

            if (inputInfo.IsPhoneSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("phone", FormatPhone(input.Phone)));
            }

            if (inputInfo.IsPasswordSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("password", FormatPassword(input.Password)));
            }

            if (inputInfo.IsAcceptsMarketingSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("acceptsMarketing", FormatAcceptsMarketing(input.AcceptsMarketing)));
            }

            return fields;
        }

        private global::System.Object? FormatFirstName(global::System.String? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _stringFormatter.Format(input);
            }
        }

        private global::System.Object? FormatLastName(global::System.String? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _stringFormatter.Format(input);
            }
        }

        private global::System.Object? FormatEmail(global::System.String input)
        {
            if (input is null)
            {
                throw new global::System.ArgumentNullException(nameof(input));
            }

            return _stringFormatter.Format(input);
        }

        private global::System.Object? FormatPhone(global::System.String? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _stringFormatter.Format(input);
            }
        }

        private global::System.Object? FormatPassword(global::System.String input)
        {
            if (input is null)
            {
                throw new global::System.ArgumentNullException(nameof(input));
            }

            return _stringFormatter.Format(input);
        }

        private global::System.Object? FormatAcceptsMarketing(global::System.Boolean? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _booleanFormatter.Format(input);
            }
        }
    }

    ///<summary>The fields required to create a new customer.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CustomerCreateInput : global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ICustomerCreateInputInfo, global::System.IEquatable<CustomerCreateInput>
    {
        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CustomerCreateInput)obj);
        }

        public virtual global::System.Boolean Equals(CustomerCreateInput? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((FirstName is null && other.FirstName is null) || FirstName != null && FirstName.Equals(other.FirstName))) && ((LastName is null && other.LastName is null) || LastName != null && LastName.Equals(other.LastName)) && Email.Equals(other.Email) && ((Phone is null && other.Phone is null) || Phone != null && Phone.Equals(other.Phone)) && Password.Equals(other.Password) && AcceptsMarketing == other.AcceptsMarketing;
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (FirstName != null)
                {
                    hash ^= 397 * FirstName.GetHashCode();
                }

                if (LastName != null)
                {
                    hash ^= 397 * LastName.GetHashCode();
                }

                hash ^= 397 * Email.GetHashCode();
                if (Phone != null)
                {
                    hash ^= 397 * Phone.GetHashCode();
                }

                hash ^= 397 * Password.GetHashCode();
                if (AcceptsMarketing != null)
                {
                    hash ^= 397 * AcceptsMarketing.GetHashCode();
                }

                return hash;
            }
        }

        private global::System.String? _value_firstName;
        private global::System.Boolean _set_firstName;
        private global::System.String? _value_lastName;
        private global::System.Boolean _set_lastName;
        private global::System.String _value_email = default !;
        private global::System.Boolean _set_email;
        private global::System.String? _value_phone;
        private global::System.Boolean _set_phone;
        private global::System.String _value_password = default !;
        private global::System.Boolean _set_password;
        private global::System.Boolean? _value_acceptsMarketing;
        private global::System.Boolean _set_acceptsMarketing;
        ///<summary>The customer’s first name.</summary>
        public global::System.String? FirstName
        {
            get => _value_firstName;
            set
            {
                _set_firstName = true;
                _value_firstName = value;
            }
        }

        global::System.Boolean global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ICustomerCreateInputInfo.IsFirstNameSet => _set_firstName;

        ///<summary>The customer’s last name.</summary>
        public global::System.String? LastName
        {
            get => _value_lastName;
            set
            {
                _set_lastName = true;
                _value_lastName = value;
            }
        }

        global::System.Boolean global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ICustomerCreateInputInfo.IsLastNameSet => _set_lastName;

        ///<summary>The customer’s email.</summary>
        public global::System.String Email
        {
            get => _value_email;
            set
            {
                _set_email = true;
                _value_email = value;
            }
        }

        global::System.Boolean global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ICustomerCreateInputInfo.IsEmailSet => _set_email;

        ///<summary>A unique phone number for the customer.Formatted using E.164 standard. For example, _+16135551111_.</summary>
        public global::System.String? Phone
        {
            get => _value_phone;
            set
            {
                _set_phone = true;
                _value_phone = value;
            }
        }

        global::System.Boolean global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ICustomerCreateInputInfo.IsPhoneSet => _set_phone;

        ///<summary>The login password used by the customer.</summary>
        public global::System.String Password
        {
            get => _value_password;
            set
            {
                _set_password = true;
                _value_password = value;
            }
        }

        global::System.Boolean global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ICustomerCreateInputInfo.IsPasswordSet => _set_password;

        ///<summary>Indicates whether the customer has consented to be sent marketing material via email.</summary>
        public global::System.Boolean? AcceptsMarketing
        {
            get => _value_acceptsMarketing;
            set
            {
                _set_acceptsMarketing = true;
                _value_acceptsMarketing = value;
            }
        }

        global::System.Boolean global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ICustomerCreateInputInfo.IsAcceptsMarketingSet => _set_acceptsMarketing;
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public enum CustomerErrorCode
    {
        /// <summary>
        /// The input value is blank.
        /// </summary>
        Blank,
        /// <summary>
        /// The input value is invalid.
        /// </summary>
        Invalid,
        /// <summary>
        /// The input value is already taken.
        /// </summary>
        Taken,
        /// <summary>
        /// The input value is too long.
        /// </summary>
        TooLong,
        /// <summary>
        /// The input value is too short.
        /// </summary>
        TooShort,
        /// <summary>
        /// Unidentified customer.
        /// </summary>
        UnidentifiedCustomer,
        /// <summary>
        /// Customer is disabled.
        /// </summary>
        CustomerDisabled,
        /// <summary>
        /// Input password starts or ends with whitespace.
        /// </summary>
        PasswordStartsOrEndsWithWhitespace,
        /// <summary>
        /// Input contains HTML tags.
        /// </summary>
        ContainsHtmlTags,
        /// <summary>
        /// Input contains URL.
        /// </summary>
        ContainsUrl,
        /// <summary>
        /// Invalid activation token.
        /// </summary>
        TokenInvalid,
        /// <summary>
        /// Customer already enabled.
        /// </summary>
        AlreadyEnabled,
        /// <summary>
        /// Address does not exist.
        /// </summary>
        NotFound,
        /// <summary>
        /// Input email contains an invalid domain name.
        /// </summary>
        BadDomain,
        /// <summary>
        /// Multipass token is not valid.
        /// </summary>
        InvalidMultipassRequest
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CustomerErrorCodeSerializer : global::StrawberryShake.Serialization.IInputValueFormatter, global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, CustomerErrorCode>
    {
        public global::System.String TypeName => "CustomerErrorCode";

        public CustomerErrorCode Parse(global::System.String serializedValue)
        {
            return serializedValue switch
            {
                "BLANK" => CustomerErrorCode.Blank,
                "INVALID" => CustomerErrorCode.Invalid,
                "TAKEN" => CustomerErrorCode.Taken,
                "TOO_LONG" => CustomerErrorCode.TooLong,
                "TOO_SHORT" => CustomerErrorCode.TooShort,
                "UNIDENTIFIED_CUSTOMER" => CustomerErrorCode.UnidentifiedCustomer,
                "CUSTOMER_DISABLED" => CustomerErrorCode.CustomerDisabled,
                "PASSWORD_STARTS_OR_ENDS_WITH_WHITESPACE" => CustomerErrorCode.PasswordStartsOrEndsWithWhitespace,
                "CONTAINS_HTML_TAGS" => CustomerErrorCode.ContainsHtmlTags,
                "CONTAINS_URL" => CustomerErrorCode.ContainsUrl,
                "TOKEN_INVALID" => CustomerErrorCode.TokenInvalid,
                "ALREADY_ENABLED" => CustomerErrorCode.AlreadyEnabled,
                "NOT_FOUND" => CustomerErrorCode.NotFound,
                "BAD_DOMAIN" => CustomerErrorCode.BadDomain,
                "INVALID_MULTIPASS_REQUEST" => CustomerErrorCode.InvalidMultipassRequest,
                _ => throw new global::StrawberryShake.GraphQLClientException()};
        }

        public global::System.Object Format(global::System.Object? runtimeValue)
        {
            return runtimeValue switch
            {
                CustomerErrorCode.Blank => "BLANK",
                CustomerErrorCode.Invalid => "INVALID",
                CustomerErrorCode.Taken => "TAKEN",
                CustomerErrorCode.TooLong => "TOO_LONG",
                CustomerErrorCode.TooShort => "TOO_SHORT",
                CustomerErrorCode.UnidentifiedCustomer => "UNIDENTIFIED_CUSTOMER",
                CustomerErrorCode.CustomerDisabled => "CUSTOMER_DISABLED",
                CustomerErrorCode.PasswordStartsOrEndsWithWhitespace => "PASSWORD_STARTS_OR_ENDS_WITH_WHITESPACE",
                CustomerErrorCode.ContainsHtmlTags => "CONTAINS_HTML_TAGS",
                CustomerErrorCode.ContainsUrl => "CONTAINS_URL",
                CustomerErrorCode.TokenInvalid => "TOKEN_INVALID",
                CustomerErrorCode.AlreadyEnabled => "ALREADY_ENABLED",
                CustomerErrorCode.NotFound => "NOT_FOUND",
                CustomerErrorCode.BadDomain => "BAD_DOMAIN",
                CustomerErrorCode.InvalidMultipassRequest => "INVALID_MULTIPASS_REQUEST",
                _ => throw new global::StrawberryShake.GraphQLClientException()};
        }
    }

    /// <summary>
    /// Represents the operation service of the GetCustomer GraphQL operation
    /// <code>
    /// query GetCustomer($token: String!) {
    ///   customer(customerAccessToken: $token) {
    ///     __typename
    ///     id
    ///     firstName
    ///     lastName
    ///     acceptsMarketing
    ///     email
    ///     phone
    ///     defaultAddress {
    ///       __typename
    ///       id
    ///       address1
    ///       address2
    ///       city
    ///       company
    ///       country
    ///       firstName
    ///       lastName
    ///       phone
    ///       province
    ///       zip
    ///       ... on MailingAddress {
    ///         id
    ///       }
    ///     }
    ///     ... on Customer {
    ///       id
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetCustomerQueryDocument : global::StrawberryShake.IDocument
    {
        private GetCustomerQueryDocument()
        {
        }

        public static GetCustomerQueryDocument Instance { get; } = new GetCustomerQueryDocument();
        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Query;
        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]
        {
            0x71,
            0x75,
            0x65,
            0x72,
            0x79,
            0x20,
            0x47,
            0x65,
            0x74,
            0x43,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x28,
            0x24,
            0x74,
            0x6f,
            0x6b,
            0x65,
            0x6e,
            0x3a,
            0x20,
            0x53,
            0x74,
            0x72,
            0x69,
            0x6e,
            0x67,
            0x21,
            0x29,
            0x20,
            0x7b,
            0x20,
            0x63,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x28,
            0x63,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x41,
            0x63,
            0x63,
            0x65,
            0x73,
            0x73,
            0x54,
            0x6f,
            0x6b,
            0x65,
            0x6e,
            0x3a,
            0x20,
            0x24,
            0x74,
            0x6f,
            0x6b,
            0x65,
            0x6e,
            0x29,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x69,
            0x64,
            0x20,
            0x66,
            0x69,
            0x72,
            0x73,
            0x74,
            0x4e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x6c,
            0x61,
            0x73,
            0x74,
            0x4e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x61,
            0x63,
            0x63,
            0x65,
            0x70,
            0x74,
            0x73,
            0x4d,
            0x61,
            0x72,
            0x6b,
            0x65,
            0x74,
            0x69,
            0x6e,
            0x67,
            0x20,
            0x65,
            0x6d,
            0x61,
            0x69,
            0x6c,
            0x20,
            0x70,
            0x68,
            0x6f,
            0x6e,
            0x65,
            0x20,
            0x64,
            0x65,
            0x66,
            0x61,
            0x75,
            0x6c,
            0x74,
            0x41,
            0x64,
            0x64,
            0x72,
            0x65,
            0x73,
            0x73,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x69,
            0x64,
            0x20,
            0x61,
            0x64,
            0x64,
            0x72,
            0x65,
            0x73,
            0x73,
            0x31,
            0x20,
            0x61,
            0x64,
            0x64,
            0x72,
            0x65,
            0x73,
            0x73,
            0x32,
            0x20,
            0x63,
            0x69,
            0x74,
            0x79,
            0x20,
            0x63,
            0x6f,
            0x6d,
            0x70,
            0x61,
            0x6e,
            0x79,
            0x20,
            0x63,
            0x6f,
            0x75,
            0x6e,
            0x74,
            0x72,
            0x79,
            0x20,
            0x66,
            0x69,
            0x72,
            0x73,
            0x74,
            0x4e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x6c,
            0x61,
            0x73,
            0x74,
            0x4e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x70,
            0x68,
            0x6f,
            0x6e,
            0x65,
            0x20,
            0x70,
            0x72,
            0x6f,
            0x76,
            0x69,
            0x6e,
            0x63,
            0x65,
            0x20,
            0x7a,
            0x69,
            0x70,
            0x20,
            0x2e,
            0x2e,
            0x2e,
            0x20,
            0x6f,
            0x6e,
            0x20,
            0x4d,
            0x61,
            0x69,
            0x6c,
            0x69,
            0x6e,
            0x67,
            0x41,
            0x64,
            0x64,
            0x72,
            0x65,
            0x73,
            0x73,
            0x20,
            0x7b,
            0x20,
            0x69,
            0x64,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x2e,
            0x2e,
            0x2e,
            0x20,
            0x6f,
            0x6e,
            0x20,
            0x43,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x20,
            0x7b,
            0x20,
            0x69,
            0x64,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x7d
        };
        public global::StrawberryShake.DocumentHash Hash { get; } = new global::StrawberryShake.DocumentHash("md5Hash", "46d858e923629ad6f7bdec47b2467bb5");

        public override global::System.String ToString()
        {
#if NETSTANDARD2_0
        return global::System.Text.Encoding.UTF8.GetString(Body.ToArray());
#else
            return global::System.Text.Encoding.UTF8.GetString(Body);
#endif
        }
    }

    /// <summary>
    /// Represents the operation service of the GetCustomer GraphQL operation
    /// <code>
    /// query GetCustomer($token: String!) {
    ///   customer(customerAccessToken: $token) {
    ///     __typename
    ///     id
    ///     firstName
    ///     lastName
    ///     acceptsMarketing
    ///     email
    ///     phone
    ///     defaultAddress {
    ///       __typename
    ///       id
    ///       address1
    ///       address2
    ///       city
    ///       company
    ///       country
    ///       firstName
    ///       lastName
    ///       phone
    ///       province
    ///       zip
    ///       ... on MailingAddress {
    ///         id
    ///       }
    ///     }
    ///     ... on Customer {
    ///       id
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetCustomerQuery : global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetCustomerQuery
    {
        private readonly global::StrawberryShake.IOperationExecutor<IGetCustomerResult> _operationExecutor;
        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _stringFormatter;
        public GetCustomerQuery(global::StrawberryShake.IOperationExecutor<IGetCustomerResult> operationExecutor, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _operationExecutor = operationExecutor ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));
            _stringFormatter = serializerResolver.GetInputValueFormatter("String");
        }

        global::System.Type global::StrawberryShake.IOperationRequestFactory.ResultType => typeof(IGetCustomerResult);

        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IGetCustomerResult>> ExecuteAsync(global::System.String token, global::System.Threading.CancellationToken cancellationToken = default)
        {
            var request = CreateRequest(token);
            return await _operationExecutor.ExecuteAsync(request, cancellationToken).ConfigureAwait(false);
        }

        public global::System.IObservable<global::StrawberryShake.IOperationResult<IGetCustomerResult>> Watch(global::System.String token, global::StrawberryShake.ExecutionStrategy? strategy = null)
        {
            var request = CreateRequest(token);
            return _operationExecutor.Watch(request, strategy);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.String token)
        {
            var variables = new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>();
            variables.Add("token", FormatToken(token));
            return CreateRequest(variables);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return new global::StrawberryShake.OperationRequest(id: GetCustomerQueryDocument.Instance.Hash.Value, name: "GetCustomer", document: GetCustomerQueryDocument.Instance, strategy: global::StrawberryShake.RequestStrategy.Default, variables: variables);
        }

        private global::System.Object? FormatToken(global::System.String value)
        {
            if (value is null)
            {
                throw new global::System.ArgumentNullException(nameof(value));
            }

            return _stringFormatter.Format(value);
        }

        global::StrawberryShake.OperationRequest global::StrawberryShake.IOperationRequestFactory.Create(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return CreateRequest(variables!);
        }
    }

    /// <summary>
    /// Represents the operation service of the GetCustomer GraphQL operation
    /// <code>
    /// query GetCustomer($token: String!) {
    ///   customer(customerAccessToken: $token) {
    ///     __typename
    ///     id
    ///     firstName
    ///     lastName
    ///     acceptsMarketing
    ///     email
    ///     phone
    ///     defaultAddress {
    ///       __typename
    ///       id
    ///       address1
    ///       address2
    ///       city
    ///       company
    ///       country
    ///       firstName
    ///       lastName
    ///       phone
    ///       province
    ///       zip
    ///       ... on MailingAddress {
    ///         id
    ///       }
    ///     }
    ///     ... on Customer {
    ///       id
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetCustomerQuery : global::StrawberryShake.IOperationRequestFactory
    {
        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IGetCustomerResult>> ExecuteAsync(global::System.String token, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.IObservable<global::StrawberryShake.IOperationResult<IGetCustomerResult>> Watch(global::System.String token, global::StrawberryShake.ExecutionStrategy? strategy = null);
    }

    /// <summary>
    /// Represents the operation service of the GetProductByHandle GraphQL operation
    /// <code>
    /// query GetProductByHandle($handle: String) {
    ///   product(handle: $handle) {
    ///     __typename
    ///     variants(first: 50) {
    ///       __typename
    ///       edges {
    ///         __typename
    ///         node {
    ///           __typename
    ///           quantityAvailable
    ///           title
    ///           id
    ///           ... on ProductVariant {
    ///             id
    ///           }
    ///         }
    ///       }
    ///     }
    ///     handle
    ///     title
    ///     description
    ///     priceRange {
    ///       __typename
    ///       minVariantPrice {
    ///         __typename
    ///         amount
    ///       }
    ///     }
    ///     images(first: 50) {
    ///       __typename
    ///       edges {
    ///         __typename
    ///         node {
    ///           __typename
    ///           url
    ///           ... on Image {
    ///             id
    ///           }
    ///         }
    ///       }
    ///     }
    ///     options {
    ///       __typename
    ///       name
    ///       values
    ///       ... on ProductOption {
    ///         id
    ///       }
    ///     }
    ///     ... on Product {
    ///       id
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetProductByHandleQueryDocument : global::StrawberryShake.IDocument
    {
        private GetProductByHandleQueryDocument()
        {
        }

        public static GetProductByHandleQueryDocument Instance { get; } = new GetProductByHandleQueryDocument();
        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Query;
        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]
        {
            0x71,
            0x75,
            0x65,
            0x72,
            0x79,
            0x20,
            0x47,
            0x65,
            0x74,
            0x50,
            0x72,
            0x6f,
            0x64,
            0x75,
            0x63,
            0x74,
            0x42,
            0x79,
            0x48,
            0x61,
            0x6e,
            0x64,
            0x6c,
            0x65,
            0x28,
            0x24,
            0x68,
            0x61,
            0x6e,
            0x64,
            0x6c,
            0x65,
            0x3a,
            0x20,
            0x53,
            0x74,
            0x72,
            0x69,
            0x6e,
            0x67,
            0x29,
            0x20,
            0x7b,
            0x20,
            0x70,
            0x72,
            0x6f,
            0x64,
            0x75,
            0x63,
            0x74,
            0x28,
            0x68,
            0x61,
            0x6e,
            0x64,
            0x6c,
            0x65,
            0x3a,
            0x20,
            0x24,
            0x68,
            0x61,
            0x6e,
            0x64,
            0x6c,
            0x65,
            0x29,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x76,
            0x61,
            0x72,
            0x69,
            0x61,
            0x6e,
            0x74,
            0x73,
            0x28,
            0x66,
            0x69,
            0x72,
            0x73,
            0x74,
            0x3a,
            0x20,
            0x35,
            0x30,
            0x29,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x65,
            0x64,
            0x67,
            0x65,
            0x73,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x6e,
            0x6f,
            0x64,
            0x65,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x71,
            0x75,
            0x61,
            0x6e,
            0x74,
            0x69,
            0x74,
            0x79,
            0x41,
            0x76,
            0x61,
            0x69,
            0x6c,
            0x61,
            0x62,
            0x6c,
            0x65,
            0x20,
            0x74,
            0x69,
            0x74,
            0x6c,
            0x65,
            0x20,
            0x69,
            0x64,
            0x20,
            0x2e,
            0x2e,
            0x2e,
            0x20,
            0x6f,
            0x6e,
            0x20,
            0x50,
            0x72,
            0x6f,
            0x64,
            0x75,
            0x63,
            0x74,
            0x56,
            0x61,
            0x72,
            0x69,
            0x61,
            0x6e,
            0x74,
            0x20,
            0x7b,
            0x20,
            0x69,
            0x64,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x68,
            0x61,
            0x6e,
            0x64,
            0x6c,
            0x65,
            0x20,
            0x74,
            0x69,
            0x74,
            0x6c,
            0x65,
            0x20,
            0x64,
            0x65,
            0x73,
            0x63,
            0x72,
            0x69,
            0x70,
            0x74,
            0x69,
            0x6f,
            0x6e,
            0x20,
            0x70,
            0x72,
            0x69,
            0x63,
            0x65,
            0x52,
            0x61,
            0x6e,
            0x67,
            0x65,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x6d,
            0x69,
            0x6e,
            0x56,
            0x61,
            0x72,
            0x69,
            0x61,
            0x6e,
            0x74,
            0x50,
            0x72,
            0x69,
            0x63,
            0x65,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x61,
            0x6d,
            0x6f,
            0x75,
            0x6e,
            0x74,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x69,
            0x6d,
            0x61,
            0x67,
            0x65,
            0x73,
            0x28,
            0x66,
            0x69,
            0x72,
            0x73,
            0x74,
            0x3a,
            0x20,
            0x35,
            0x30,
            0x29,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x65,
            0x64,
            0x67,
            0x65,
            0x73,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x6e,
            0x6f,
            0x64,
            0x65,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x75,
            0x72,
            0x6c,
            0x20,
            0x2e,
            0x2e,
            0x2e,
            0x20,
            0x6f,
            0x6e,
            0x20,
            0x49,
            0x6d,
            0x61,
            0x67,
            0x65,
            0x20,
            0x7b,
            0x20,
            0x69,
            0x64,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x6f,
            0x70,
            0x74,
            0x69,
            0x6f,
            0x6e,
            0x73,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x76,
            0x61,
            0x6c,
            0x75,
            0x65,
            0x73,
            0x20,
            0x2e,
            0x2e,
            0x2e,
            0x20,
            0x6f,
            0x6e,
            0x20,
            0x50,
            0x72,
            0x6f,
            0x64,
            0x75,
            0x63,
            0x74,
            0x4f,
            0x70,
            0x74,
            0x69,
            0x6f,
            0x6e,
            0x20,
            0x7b,
            0x20,
            0x69,
            0x64,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x2e,
            0x2e,
            0x2e,
            0x20,
            0x6f,
            0x6e,
            0x20,
            0x50,
            0x72,
            0x6f,
            0x64,
            0x75,
            0x63,
            0x74,
            0x20,
            0x7b,
            0x20,
            0x69,
            0x64,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x7d
        };
        public global::StrawberryShake.DocumentHash Hash { get; } = new global::StrawberryShake.DocumentHash("md5Hash", "da897052ca5483728a772d41feb9af2e");

        public override global::System.String ToString()
        {
#if NETSTANDARD2_0
        return global::System.Text.Encoding.UTF8.GetString(Body.ToArray());
#else
            return global::System.Text.Encoding.UTF8.GetString(Body);
#endif
        }
    }

    /// <summary>
    /// Represents the operation service of the GetProductByHandle GraphQL operation
    /// <code>
    /// query GetProductByHandle($handle: String) {
    ///   product(handle: $handle) {
    ///     __typename
    ///     variants(first: 50) {
    ///       __typename
    ///       edges {
    ///         __typename
    ///         node {
    ///           __typename
    ///           quantityAvailable
    ///           title
    ///           id
    ///           ... on ProductVariant {
    ///             id
    ///           }
    ///         }
    ///       }
    ///     }
    ///     handle
    ///     title
    ///     description
    ///     priceRange {
    ///       __typename
    ///       minVariantPrice {
    ///         __typename
    ///         amount
    ///       }
    ///     }
    ///     images(first: 50) {
    ///       __typename
    ///       edges {
    ///         __typename
    ///         node {
    ///           __typename
    ///           url
    ///           ... on Image {
    ///             id
    ///           }
    ///         }
    ///       }
    ///     }
    ///     options {
    ///       __typename
    ///       name
    ///       values
    ///       ... on ProductOption {
    ///         id
    ///       }
    ///     }
    ///     ... on Product {
    ///       id
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetProductByHandleQuery : global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandleQuery
    {
        private readonly global::StrawberryShake.IOperationExecutor<IGetProductByHandleResult> _operationExecutor;
        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _stringFormatter;
        public GetProductByHandleQuery(global::StrawberryShake.IOperationExecutor<IGetProductByHandleResult> operationExecutor, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _operationExecutor = operationExecutor ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));
            _stringFormatter = serializerResolver.GetInputValueFormatter("String");
        }

        global::System.Type global::StrawberryShake.IOperationRequestFactory.ResultType => typeof(IGetProductByHandleResult);

        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IGetProductByHandleResult>> ExecuteAsync(global::System.String? handle, global::System.Threading.CancellationToken cancellationToken = default)
        {
            var request = CreateRequest(handle);
            return await _operationExecutor.ExecuteAsync(request, cancellationToken).ConfigureAwait(false);
        }

        public global::System.IObservable<global::StrawberryShake.IOperationResult<IGetProductByHandleResult>> Watch(global::System.String? handle, global::StrawberryShake.ExecutionStrategy? strategy = null)
        {
            var request = CreateRequest(handle);
            return _operationExecutor.Watch(request, strategy);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.String? handle)
        {
            var variables = new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>();
            variables.Add("handle", FormatHandle(handle));
            return CreateRequest(variables);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return new global::StrawberryShake.OperationRequest(id: GetProductByHandleQueryDocument.Instance.Hash.Value, name: "GetProductByHandle", document: GetProductByHandleQueryDocument.Instance, strategy: global::StrawberryShake.RequestStrategy.Default, variables: variables);
        }

        private global::System.Object? FormatHandle(global::System.String? value)
        {
            if (value is null)
            {
                return value;
            }
            else
            {
                return _stringFormatter.Format(value);
            }
        }

        global::StrawberryShake.OperationRequest global::StrawberryShake.IOperationRequestFactory.Create(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return CreateRequest(variables!);
        }
    }

    /// <summary>
    /// Represents the operation service of the GetProductByHandle GraphQL operation
    /// <code>
    /// query GetProductByHandle($handle: String) {
    ///   product(handle: $handle) {
    ///     __typename
    ///     variants(first: 50) {
    ///       __typename
    ///       edges {
    ///         __typename
    ///         node {
    ///           __typename
    ///           quantityAvailable
    ///           title
    ///           id
    ///           ... on ProductVariant {
    ///             id
    ///           }
    ///         }
    ///       }
    ///     }
    ///     handle
    ///     title
    ///     description
    ///     priceRange {
    ///       __typename
    ///       minVariantPrice {
    ///         __typename
    ///         amount
    ///       }
    ///     }
    ///     images(first: 50) {
    ///       __typename
    ///       edges {
    ///         __typename
    ///         node {
    ///           __typename
    ///           url
    ///           ... on Image {
    ///             id
    ///           }
    ///         }
    ///       }
    ///     }
    ///     options {
    ///       __typename
    ///       name
    ///       values
    ///       ... on ProductOption {
    ///         id
    ///       }
    ///     }
    ///     ... on Product {
    ///       id
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProductByHandleQuery : global::StrawberryShake.IOperationRequestFactory
    {
        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IGetProductByHandleResult>> ExecuteAsync(global::System.String? handle, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.IObservable<global::StrawberryShake.IOperationResult<IGetProductByHandleResult>> Watch(global::System.String? handle, global::StrawberryShake.ExecutionStrategy? strategy = null);
    }

    /// <summary>
    /// Represents the operation service of the GetProducts GraphQL operation
    /// <code>
    /// query GetProducts {
    ///   products(first: 200) {
    ///     __typename
    ///     edges {
    ///       __typename
    ///       node {
    ///         __typename
    ///         handle
    ///         title
    ///         priceRange {
    ///           __typename
    ///           minVariantPrice {
    ///             __typename
    ///             amount
    ///           }
    ///         }
    ///         images(first: 1) {
    ///           __typename
    ///           edges {
    ///             __typename
    ///             node {
    ///               __typename
    ///               url
    ///               ... on Image {
    ///                 id
    ///               }
    ///             }
    ///           }
    ///         }
    ///         ... on Product {
    ///           id
    ///         }
    ///       }
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetProductsQueryDocument : global::StrawberryShake.IDocument
    {
        private GetProductsQueryDocument()
        {
        }

        public static GetProductsQueryDocument Instance { get; } = new GetProductsQueryDocument();
        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Query;
        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]
        {
            0x71,
            0x75,
            0x65,
            0x72,
            0x79,
            0x20,
            0x47,
            0x65,
            0x74,
            0x50,
            0x72,
            0x6f,
            0x64,
            0x75,
            0x63,
            0x74,
            0x73,
            0x20,
            0x7b,
            0x20,
            0x70,
            0x72,
            0x6f,
            0x64,
            0x75,
            0x63,
            0x74,
            0x73,
            0x28,
            0x66,
            0x69,
            0x72,
            0x73,
            0x74,
            0x3a,
            0x20,
            0x32,
            0x30,
            0x30,
            0x29,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x65,
            0x64,
            0x67,
            0x65,
            0x73,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x6e,
            0x6f,
            0x64,
            0x65,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x68,
            0x61,
            0x6e,
            0x64,
            0x6c,
            0x65,
            0x20,
            0x74,
            0x69,
            0x74,
            0x6c,
            0x65,
            0x20,
            0x70,
            0x72,
            0x69,
            0x63,
            0x65,
            0x52,
            0x61,
            0x6e,
            0x67,
            0x65,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x6d,
            0x69,
            0x6e,
            0x56,
            0x61,
            0x72,
            0x69,
            0x61,
            0x6e,
            0x74,
            0x50,
            0x72,
            0x69,
            0x63,
            0x65,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x61,
            0x6d,
            0x6f,
            0x75,
            0x6e,
            0x74,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x69,
            0x6d,
            0x61,
            0x67,
            0x65,
            0x73,
            0x28,
            0x66,
            0x69,
            0x72,
            0x73,
            0x74,
            0x3a,
            0x20,
            0x31,
            0x29,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x65,
            0x64,
            0x67,
            0x65,
            0x73,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x6e,
            0x6f,
            0x64,
            0x65,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x75,
            0x72,
            0x6c,
            0x20,
            0x2e,
            0x2e,
            0x2e,
            0x20,
            0x6f,
            0x6e,
            0x20,
            0x49,
            0x6d,
            0x61,
            0x67,
            0x65,
            0x20,
            0x7b,
            0x20,
            0x69,
            0x64,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x2e,
            0x2e,
            0x2e,
            0x20,
            0x6f,
            0x6e,
            0x20,
            0x50,
            0x72,
            0x6f,
            0x64,
            0x75,
            0x63,
            0x74,
            0x20,
            0x7b,
            0x20,
            0x69,
            0x64,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x7d
        };
        public global::StrawberryShake.DocumentHash Hash { get; } = new global::StrawberryShake.DocumentHash("md5Hash", "a15f9dd160afa7879aee6c0153d79afa");

        public override global::System.String ToString()
        {
#if NETSTANDARD2_0
        return global::System.Text.Encoding.UTF8.GetString(Body.ToArray());
#else
            return global::System.Text.Encoding.UTF8.GetString(Body);
#endif
        }
    }

    /// <summary>
    /// Represents the operation service of the GetProducts GraphQL operation
    /// <code>
    /// query GetProducts {
    ///   products(first: 200) {
    ///     __typename
    ///     edges {
    ///       __typename
    ///       node {
    ///         __typename
    ///         handle
    ///         title
    ///         priceRange {
    ///           __typename
    ///           minVariantPrice {
    ///             __typename
    ///             amount
    ///           }
    ///         }
    ///         images(first: 1) {
    ///           __typename
    ///           edges {
    ///             __typename
    ///             node {
    ///               __typename
    ///               url
    ///               ... on Image {
    ///                 id
    ///               }
    ///             }
    ///           }
    ///         }
    ///         ... on Product {
    ///           id
    ///         }
    ///       }
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetProductsQuery : global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductsQuery
    {
        private readonly global::StrawberryShake.IOperationExecutor<IGetProductsResult> _operationExecutor;
        public GetProductsQuery(global::StrawberryShake.IOperationExecutor<IGetProductsResult> operationExecutor)
        {
            _operationExecutor = operationExecutor ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));
        }

        global::System.Type global::StrawberryShake.IOperationRequestFactory.ResultType => typeof(IGetProductsResult);

        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IGetProductsResult>> ExecuteAsync(global::System.Threading.CancellationToken cancellationToken = default)
        {
            var request = CreateRequest();
            return await _operationExecutor.ExecuteAsync(request, cancellationToken).ConfigureAwait(false);
        }

        public global::System.IObservable<global::StrawberryShake.IOperationResult<IGetProductsResult>> Watch(global::StrawberryShake.ExecutionStrategy? strategy = null)
        {
            var request = CreateRequest();
            return _operationExecutor.Watch(request, strategy);
        }

        private global::StrawberryShake.OperationRequest CreateRequest()
        {
            return CreateRequest(null);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return new global::StrawberryShake.OperationRequest(id: GetProductsQueryDocument.Instance.Hash.Value, name: "GetProducts", document: GetProductsQueryDocument.Instance, strategy: global::StrawberryShake.RequestStrategy.Default);
        }

        global::StrawberryShake.OperationRequest global::StrawberryShake.IOperationRequestFactory.Create(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return CreateRequest();
        }
    }

    /// <summary>
    /// Represents the operation service of the GetProducts GraphQL operation
    /// <code>
    /// query GetProducts {
    ///   products(first: 200) {
    ///     __typename
    ///     edges {
    ///       __typename
    ///       node {
    ///         __typename
    ///         handle
    ///         title
    ///         priceRange {
    ///           __typename
    ///           minVariantPrice {
    ///             __typename
    ///             amount
    ///           }
    ///         }
    ///         images(first: 1) {
    ///           __typename
    ///           edges {
    ///             __typename
    ///             node {
    ///               __typename
    ///               url
    ///               ... on Image {
    ///                 id
    ///               }
    ///             }
    ///           }
    ///         }
    ///         ... on Product {
    ///           id
    ///         }
    ///       }
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IGetProductsQuery : global::StrawberryShake.IOperationRequestFactory
    {
        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IGetProductsResult>> ExecuteAsync(global::System.Threading.CancellationToken cancellationToken = default);
        global::System.IObservable<global::StrawberryShake.IOperationResult<IGetProductsResult>> Watch(global::StrawberryShake.ExecutionStrategy? strategy = null);
    }

    /// <summary>
    /// Represents the operation service of the CreateCustomerAccessToken GraphQL operation
    /// <code>
    /// mutation CreateCustomerAccessToken($input: CustomerAccessTokenCreateInput!) {
    ///   customerAccessTokenCreate(input: $input) {
    ///     __typename
    ///     customerAccessToken {
    ///       __typename
    ///       accessToken
    ///       expiresAt
    ///     }
    ///     customerUserErrors {
    ///       __typename
    ///       code
    ///       field
    ///       message
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCustomerAccessTokenMutationDocument : global::StrawberryShake.IDocument
    {
        private CreateCustomerAccessTokenMutationDocument()
        {
        }

        public static CreateCustomerAccessTokenMutationDocument Instance { get; } = new CreateCustomerAccessTokenMutationDocument();
        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Mutation;
        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]
        {
            0x6d,
            0x75,
            0x74,
            0x61,
            0x74,
            0x69,
            0x6f,
            0x6e,
            0x20,
            0x43,
            0x72,
            0x65,
            0x61,
            0x74,
            0x65,
            0x43,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x41,
            0x63,
            0x63,
            0x65,
            0x73,
            0x73,
            0x54,
            0x6f,
            0x6b,
            0x65,
            0x6e,
            0x28,
            0x24,
            0x69,
            0x6e,
            0x70,
            0x75,
            0x74,
            0x3a,
            0x20,
            0x43,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x41,
            0x63,
            0x63,
            0x65,
            0x73,
            0x73,
            0x54,
            0x6f,
            0x6b,
            0x65,
            0x6e,
            0x43,
            0x72,
            0x65,
            0x61,
            0x74,
            0x65,
            0x49,
            0x6e,
            0x70,
            0x75,
            0x74,
            0x21,
            0x29,
            0x20,
            0x7b,
            0x20,
            0x63,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x41,
            0x63,
            0x63,
            0x65,
            0x73,
            0x73,
            0x54,
            0x6f,
            0x6b,
            0x65,
            0x6e,
            0x43,
            0x72,
            0x65,
            0x61,
            0x74,
            0x65,
            0x28,
            0x69,
            0x6e,
            0x70,
            0x75,
            0x74,
            0x3a,
            0x20,
            0x24,
            0x69,
            0x6e,
            0x70,
            0x75,
            0x74,
            0x29,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x63,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x41,
            0x63,
            0x63,
            0x65,
            0x73,
            0x73,
            0x54,
            0x6f,
            0x6b,
            0x65,
            0x6e,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x61,
            0x63,
            0x63,
            0x65,
            0x73,
            0x73,
            0x54,
            0x6f,
            0x6b,
            0x65,
            0x6e,
            0x20,
            0x65,
            0x78,
            0x70,
            0x69,
            0x72,
            0x65,
            0x73,
            0x41,
            0x74,
            0x20,
            0x7d,
            0x20,
            0x63,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x55,
            0x73,
            0x65,
            0x72,
            0x45,
            0x72,
            0x72,
            0x6f,
            0x72,
            0x73,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x63,
            0x6f,
            0x64,
            0x65,
            0x20,
            0x66,
            0x69,
            0x65,
            0x6c,
            0x64,
            0x20,
            0x6d,
            0x65,
            0x73,
            0x73,
            0x61,
            0x67,
            0x65,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x7d
        };
        public global::StrawberryShake.DocumentHash Hash { get; } = new global::StrawberryShake.DocumentHash("md5Hash", "b8f7ea558e4bda56c8be317df10df3be");

        public override global::System.String ToString()
        {
#if NETSTANDARD2_0
        return global::System.Text.Encoding.UTF8.GetString(Body.ToArray());
#else
            return global::System.Text.Encoding.UTF8.GetString(Body);
#endif
        }
    }

    /// <summary>
    /// Represents the operation service of the CreateCustomerAccessToken GraphQL operation
    /// <code>
    /// mutation CreateCustomerAccessToken($input: CustomerAccessTokenCreateInput!) {
    ///   customerAccessTokenCreate(input: $input) {
    ///     __typename
    ///     customerAccessToken {
    ///       __typename
    ///       accessToken
    ///       expiresAt
    ///     }
    ///     customerUserErrors {
    ///       __typename
    ///       code
    ///       field
    ///       message
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCustomerAccessTokenMutation : global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAccessTokenMutation
    {
        private readonly global::StrawberryShake.IOperationExecutor<ICreateCustomerAccessTokenResult> _operationExecutor;
        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _customerAccessTokenCreateInputFormatter;
        public CreateCustomerAccessTokenMutation(global::StrawberryShake.IOperationExecutor<ICreateCustomerAccessTokenResult> operationExecutor, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _operationExecutor = operationExecutor ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));
            _customerAccessTokenCreateInputFormatter = serializerResolver.GetInputValueFormatter("CustomerAccessTokenCreateInput");
        }

        global::System.Type global::StrawberryShake.IOperationRequestFactory.ResultType => typeof(ICreateCustomerAccessTokenResult);

        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<ICreateCustomerAccessTokenResult>> ExecuteAsync(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerAccessTokenCreateInput input, global::System.Threading.CancellationToken cancellationToken = default)
        {
            var request = CreateRequest(input);
            return await _operationExecutor.ExecuteAsync(request, cancellationToken).ConfigureAwait(false);
        }

        public global::System.IObservable<global::StrawberryShake.IOperationResult<ICreateCustomerAccessTokenResult>> Watch(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerAccessTokenCreateInput input, global::StrawberryShake.ExecutionStrategy? strategy = null)
        {
            var request = CreateRequest(input);
            return _operationExecutor.Watch(request, strategy);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerAccessTokenCreateInput input)
        {
            var variables = new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>();
            variables.Add("input", FormatInput(input));
            return CreateRequest(variables);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return new global::StrawberryShake.OperationRequest(id: CreateCustomerAccessTokenMutationDocument.Instance.Hash.Value, name: "CreateCustomerAccessToken", document: CreateCustomerAccessTokenMutationDocument.Instance, strategy: global::StrawberryShake.RequestStrategy.Default, variables: variables);
        }

        private global::System.Object? FormatInput(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerAccessTokenCreateInput value)
        {
            if (value is null)
            {
                throw new global::System.ArgumentNullException(nameof(value));
            }

            return _customerAccessTokenCreateInputFormatter.Format(value);
        }

        global::StrawberryShake.OperationRequest global::StrawberryShake.IOperationRequestFactory.Create(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return CreateRequest(variables!);
        }
    }

    /// <summary>
    /// Represents the operation service of the CreateCustomerAccessToken GraphQL operation
    /// <code>
    /// mutation CreateCustomerAccessToken($input: CustomerAccessTokenCreateInput!) {
    ///   customerAccessTokenCreate(input: $input) {
    ///     __typename
    ///     customerAccessToken {
    ///       __typename
    ///       accessToken
    ///       expiresAt
    ///     }
    ///     customerUserErrors {
    ///       __typename
    ///       code
    ///       field
    ///       message
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCustomerAccessTokenMutation : global::StrawberryShake.IOperationRequestFactory
    {
        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<ICreateCustomerAccessTokenResult>> ExecuteAsync(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerAccessTokenCreateInput input, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.IObservable<global::StrawberryShake.IOperationResult<ICreateCustomerAccessTokenResult>> Watch(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerAccessTokenCreateInput input, global::StrawberryShake.ExecutionStrategy? strategy = null);
    }

    /// <summary>
    /// Represents the operation service of the CreateCheckoutLoggedOut GraphQL operation
    /// <code>
    /// mutation CreateCheckoutLoggedOut($lineItems: [CheckoutLineItemInput!]) {
    ///   checkoutCreate(input: { lineItems: $lineItems }) {
    ///     __typename
    ///     checkout {
    ///       __typename
    ///       id
    ///       webUrl
    ///       ... on Checkout {
    ///         id
    ///       }
    ///     }
    ///     checkoutUserErrors {
    ///       __typename
    ///       field
    ///       message
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCheckoutLoggedOutMutationDocument : global::StrawberryShake.IDocument
    {
        private CreateCheckoutLoggedOutMutationDocument()
        {
        }

        public static CreateCheckoutLoggedOutMutationDocument Instance { get; } = new CreateCheckoutLoggedOutMutationDocument();
        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Mutation;
        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]
        {
            0x6d,
            0x75,
            0x74,
            0x61,
            0x74,
            0x69,
            0x6f,
            0x6e,
            0x20,
            0x43,
            0x72,
            0x65,
            0x61,
            0x74,
            0x65,
            0x43,
            0x68,
            0x65,
            0x63,
            0x6b,
            0x6f,
            0x75,
            0x74,
            0x4c,
            0x6f,
            0x67,
            0x67,
            0x65,
            0x64,
            0x4f,
            0x75,
            0x74,
            0x28,
            0x24,
            0x6c,
            0x69,
            0x6e,
            0x65,
            0x49,
            0x74,
            0x65,
            0x6d,
            0x73,
            0x3a,
            0x20,
            0x5b,
            0x43,
            0x68,
            0x65,
            0x63,
            0x6b,
            0x6f,
            0x75,
            0x74,
            0x4c,
            0x69,
            0x6e,
            0x65,
            0x49,
            0x74,
            0x65,
            0x6d,
            0x49,
            0x6e,
            0x70,
            0x75,
            0x74,
            0x21,
            0x5d,
            0x29,
            0x20,
            0x7b,
            0x20,
            0x63,
            0x68,
            0x65,
            0x63,
            0x6b,
            0x6f,
            0x75,
            0x74,
            0x43,
            0x72,
            0x65,
            0x61,
            0x74,
            0x65,
            0x28,
            0x69,
            0x6e,
            0x70,
            0x75,
            0x74,
            0x3a,
            0x20,
            0x7b,
            0x20,
            0x6c,
            0x69,
            0x6e,
            0x65,
            0x49,
            0x74,
            0x65,
            0x6d,
            0x73,
            0x3a,
            0x20,
            0x24,
            0x6c,
            0x69,
            0x6e,
            0x65,
            0x49,
            0x74,
            0x65,
            0x6d,
            0x73,
            0x20,
            0x7d,
            0x29,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x63,
            0x68,
            0x65,
            0x63,
            0x6b,
            0x6f,
            0x75,
            0x74,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x69,
            0x64,
            0x20,
            0x77,
            0x65,
            0x62,
            0x55,
            0x72,
            0x6c,
            0x20,
            0x2e,
            0x2e,
            0x2e,
            0x20,
            0x6f,
            0x6e,
            0x20,
            0x43,
            0x68,
            0x65,
            0x63,
            0x6b,
            0x6f,
            0x75,
            0x74,
            0x20,
            0x7b,
            0x20,
            0x69,
            0x64,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x63,
            0x68,
            0x65,
            0x63,
            0x6b,
            0x6f,
            0x75,
            0x74,
            0x55,
            0x73,
            0x65,
            0x72,
            0x45,
            0x72,
            0x72,
            0x6f,
            0x72,
            0x73,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x66,
            0x69,
            0x65,
            0x6c,
            0x64,
            0x20,
            0x6d,
            0x65,
            0x73,
            0x73,
            0x61,
            0x67,
            0x65,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x7d
        };
        public global::StrawberryShake.DocumentHash Hash { get; } = new global::StrawberryShake.DocumentHash("md5Hash", "c7730ec6f224877dfe4eef190301f78f");

        public override global::System.String ToString()
        {
#if NETSTANDARD2_0
        return global::System.Text.Encoding.UTF8.GetString(Body.ToArray());
#else
            return global::System.Text.Encoding.UTF8.GetString(Body);
#endif
        }
    }

    /// <summary>
    /// Represents the operation service of the CreateCheckoutLoggedOut GraphQL operation
    /// <code>
    /// mutation CreateCheckoutLoggedOut($lineItems: [CheckoutLineItemInput!]) {
    ///   checkoutCreate(input: { lineItems: $lineItems }) {
    ///     __typename
    ///     checkout {
    ///       __typename
    ///       id
    ///       webUrl
    ///       ... on Checkout {
    ///         id
    ///       }
    ///     }
    ///     checkoutUserErrors {
    ///       __typename
    ///       field
    ///       message
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCheckoutLoggedOutMutation : global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedOutMutation
    {
        private readonly global::StrawberryShake.IOperationExecutor<ICreateCheckoutLoggedOutResult> _operationExecutor;
        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _checkoutLineItemInputFormatter;
        public CreateCheckoutLoggedOutMutation(global::StrawberryShake.IOperationExecutor<ICreateCheckoutLoggedOutResult> operationExecutor, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _operationExecutor = operationExecutor ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));
            _checkoutLineItemInputFormatter = serializerResolver.GetInputValueFormatter("CheckoutLineItemInput");
        }

        global::System.Type global::StrawberryShake.IOperationRequestFactory.ResultType => typeof(ICreateCheckoutLoggedOutResult);

        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<ICreateCheckoutLoggedOutResult>> ExecuteAsync(global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CheckoutLineItemInput>? lineItems, global::System.Threading.CancellationToken cancellationToken = default)
        {
            var request = CreateRequest(lineItems);
            return await _operationExecutor.ExecuteAsync(request, cancellationToken).ConfigureAwait(false);
        }

        public global::System.IObservable<global::StrawberryShake.IOperationResult<ICreateCheckoutLoggedOutResult>> Watch(global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CheckoutLineItemInput>? lineItems, global::StrawberryShake.ExecutionStrategy? strategy = null)
        {
            var request = CreateRequest(lineItems);
            return _operationExecutor.Watch(request, strategy);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CheckoutLineItemInput>? lineItems)
        {
            var variables = new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>();
            variables.Add("lineItems", FormatLineItems(lineItems));
            return CreateRequest(variables);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return new global::StrawberryShake.OperationRequest(id: CreateCheckoutLoggedOutMutationDocument.Instance.Hash.Value, name: "CreateCheckoutLoggedOut", document: CreateCheckoutLoggedOutMutationDocument.Instance, strategy: global::StrawberryShake.RequestStrategy.Default, variables: variables);
        }

        private global::System.Object? FormatLineItems(global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CheckoutLineItemInput>? value)
        {
            if (value is null)
            {
                return value;
            }
            else
            {
                var value_list = new global::System.Collections.Generic.List<global::System.Object?>();
                foreach (var value_elm in value)
                {
                    if (value_elm is null)
                    {
                        throw new global::System.ArgumentNullException(nameof(value_elm));
                    }

                    value_list.Add(_checkoutLineItemInputFormatter.Format(value_elm));
                }

                return value_list;
            }
        }

        global::StrawberryShake.OperationRequest global::StrawberryShake.IOperationRequestFactory.Create(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return CreateRequest(variables!);
        }
    }

    /// <summary>
    /// Represents the operation service of the CreateCheckoutLoggedOut GraphQL operation
    /// <code>
    /// mutation CreateCheckoutLoggedOut($lineItems: [CheckoutLineItemInput!]) {
    ///   checkoutCreate(input: { lineItems: $lineItems }) {
    ///     __typename
    ///     checkout {
    ///       __typename
    ///       id
    ///       webUrl
    ///       ... on Checkout {
    ///         id
    ///       }
    ///     }
    ///     checkoutUserErrors {
    ///       __typename
    ///       field
    ///       message
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCheckoutLoggedOutMutation : global::StrawberryShake.IOperationRequestFactory
    {
        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<ICreateCheckoutLoggedOutResult>> ExecuteAsync(global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CheckoutLineItemInput>? lineItems, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.IObservable<global::StrawberryShake.IOperationResult<ICreateCheckoutLoggedOutResult>> Watch(global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CheckoutLineItemInput>? lineItems, global::StrawberryShake.ExecutionStrategy? strategy = null);
    }

    /// <summary>
    /// Represents the operation service of the CheckoutCustomerAssociateV2 GraphQL operation
    /// <code>
    /// mutation CheckoutCustomerAssociateV2($checkoutId: ID!, $customerAccessToken: String!) {
    ///   checkoutCustomerAssociateV2(checkoutId: $checkoutId, customerAccessToken: $customerAccessToken) {
    ///     __typename
    ///     checkout {
    ///       __typename
    ///       id
    ///       webUrl
    ///       ... on Checkout {
    ///         id
    ///       }
    ///     }
    ///     customer {
    ///       __typename
    ///       id
    ///       email
    ///       ... on Customer {
    ///         id
    ///       }
    ///     }
    ///     userErrors {
    ///       __typename
    ///       field
    ///       message
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CheckoutCustomerAssociateV2MutationDocument : global::StrawberryShake.IDocument
    {
        private CheckoutCustomerAssociateV2MutationDocument()
        {
        }

        public static CheckoutCustomerAssociateV2MutationDocument Instance { get; } = new CheckoutCustomerAssociateV2MutationDocument();
        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Mutation;
        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]
        {
            0x6d,
            0x75,
            0x74,
            0x61,
            0x74,
            0x69,
            0x6f,
            0x6e,
            0x20,
            0x43,
            0x68,
            0x65,
            0x63,
            0x6b,
            0x6f,
            0x75,
            0x74,
            0x43,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x41,
            0x73,
            0x73,
            0x6f,
            0x63,
            0x69,
            0x61,
            0x74,
            0x65,
            0x56,
            0x32,
            0x28,
            0x24,
            0x63,
            0x68,
            0x65,
            0x63,
            0x6b,
            0x6f,
            0x75,
            0x74,
            0x49,
            0x64,
            0x3a,
            0x20,
            0x49,
            0x44,
            0x21,
            0x2c,
            0x20,
            0x24,
            0x63,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x41,
            0x63,
            0x63,
            0x65,
            0x73,
            0x73,
            0x54,
            0x6f,
            0x6b,
            0x65,
            0x6e,
            0x3a,
            0x20,
            0x53,
            0x74,
            0x72,
            0x69,
            0x6e,
            0x67,
            0x21,
            0x29,
            0x20,
            0x7b,
            0x20,
            0x63,
            0x68,
            0x65,
            0x63,
            0x6b,
            0x6f,
            0x75,
            0x74,
            0x43,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x41,
            0x73,
            0x73,
            0x6f,
            0x63,
            0x69,
            0x61,
            0x74,
            0x65,
            0x56,
            0x32,
            0x28,
            0x63,
            0x68,
            0x65,
            0x63,
            0x6b,
            0x6f,
            0x75,
            0x74,
            0x49,
            0x64,
            0x3a,
            0x20,
            0x24,
            0x63,
            0x68,
            0x65,
            0x63,
            0x6b,
            0x6f,
            0x75,
            0x74,
            0x49,
            0x64,
            0x2c,
            0x20,
            0x63,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x41,
            0x63,
            0x63,
            0x65,
            0x73,
            0x73,
            0x54,
            0x6f,
            0x6b,
            0x65,
            0x6e,
            0x3a,
            0x20,
            0x24,
            0x63,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x41,
            0x63,
            0x63,
            0x65,
            0x73,
            0x73,
            0x54,
            0x6f,
            0x6b,
            0x65,
            0x6e,
            0x29,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x63,
            0x68,
            0x65,
            0x63,
            0x6b,
            0x6f,
            0x75,
            0x74,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x69,
            0x64,
            0x20,
            0x77,
            0x65,
            0x62,
            0x55,
            0x72,
            0x6c,
            0x20,
            0x2e,
            0x2e,
            0x2e,
            0x20,
            0x6f,
            0x6e,
            0x20,
            0x43,
            0x68,
            0x65,
            0x63,
            0x6b,
            0x6f,
            0x75,
            0x74,
            0x20,
            0x7b,
            0x20,
            0x69,
            0x64,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x63,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x69,
            0x64,
            0x20,
            0x65,
            0x6d,
            0x61,
            0x69,
            0x6c,
            0x20,
            0x2e,
            0x2e,
            0x2e,
            0x20,
            0x6f,
            0x6e,
            0x20,
            0x43,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x20,
            0x7b,
            0x20,
            0x69,
            0x64,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x75,
            0x73,
            0x65,
            0x72,
            0x45,
            0x72,
            0x72,
            0x6f,
            0x72,
            0x73,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x66,
            0x69,
            0x65,
            0x6c,
            0x64,
            0x20,
            0x6d,
            0x65,
            0x73,
            0x73,
            0x61,
            0x67,
            0x65,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x7d
        };
        public global::StrawberryShake.DocumentHash Hash { get; } = new global::StrawberryShake.DocumentHash("md5Hash", "10b10ece1882dc0e0fafeb3e4ade7c83");

        public override global::System.String ToString()
        {
#if NETSTANDARD2_0
        return global::System.Text.Encoding.UTF8.GetString(Body.ToArray());
#else
            return global::System.Text.Encoding.UTF8.GetString(Body);
#endif
        }
    }

    /// <summary>
    /// Represents the operation service of the CheckoutCustomerAssociateV2 GraphQL operation
    /// <code>
    /// mutation CheckoutCustomerAssociateV2($checkoutId: ID!, $customerAccessToken: String!) {
    ///   checkoutCustomerAssociateV2(checkoutId: $checkoutId, customerAccessToken: $customerAccessToken) {
    ///     __typename
    ///     checkout {
    ///       __typename
    ///       id
    ///       webUrl
    ///       ... on Checkout {
    ///         id
    ///       }
    ///     }
    ///     customer {
    ///       __typename
    ///       id
    ///       email
    ///       ... on Customer {
    ///         id
    ///       }
    ///     }
    ///     userErrors {
    ///       __typename
    ///       field
    ///       message
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CheckoutCustomerAssociateV2Mutation : global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICheckoutCustomerAssociateV2Mutation
    {
        private readonly global::StrawberryShake.IOperationExecutor<ICheckoutCustomerAssociateV2Result> _operationExecutor;
        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _iDFormatter;
        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _stringFormatter;
        public CheckoutCustomerAssociateV2Mutation(global::StrawberryShake.IOperationExecutor<ICheckoutCustomerAssociateV2Result> operationExecutor, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _operationExecutor = operationExecutor ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));
            _iDFormatter = serializerResolver.GetInputValueFormatter("ID");
            _stringFormatter = serializerResolver.GetInputValueFormatter("String");
        }

        global::System.Type global::StrawberryShake.IOperationRequestFactory.ResultType => typeof(ICheckoutCustomerAssociateV2Result);

        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<ICheckoutCustomerAssociateV2Result>> ExecuteAsync(global::System.String checkoutId, global::System.String customerAccessToken, global::System.Threading.CancellationToken cancellationToken = default)
        {
            var request = CreateRequest(checkoutId, customerAccessToken);
            return await _operationExecutor.ExecuteAsync(request, cancellationToken).ConfigureAwait(false);
        }

        public global::System.IObservable<global::StrawberryShake.IOperationResult<ICheckoutCustomerAssociateV2Result>> Watch(global::System.String checkoutId, global::System.String customerAccessToken, global::StrawberryShake.ExecutionStrategy? strategy = null)
        {
            var request = CreateRequest(checkoutId, customerAccessToken);
            return _operationExecutor.Watch(request, strategy);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.String checkoutId, global::System.String customerAccessToken)
        {
            var variables = new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>();
            variables.Add("checkoutId", FormatCheckoutId(checkoutId));
            variables.Add("customerAccessToken", FormatCustomerAccessToken(customerAccessToken));
            return CreateRequest(variables);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return new global::StrawberryShake.OperationRequest(id: CheckoutCustomerAssociateV2MutationDocument.Instance.Hash.Value, name: "CheckoutCustomerAssociateV2", document: CheckoutCustomerAssociateV2MutationDocument.Instance, strategy: global::StrawberryShake.RequestStrategy.Default, variables: variables);
        }

        private global::System.Object? FormatCheckoutId(global::System.String value)
        {
            if (value is null)
            {
                throw new global::System.ArgumentNullException(nameof(value));
            }

            return _iDFormatter.Format(value);
        }

        private global::System.Object? FormatCustomerAccessToken(global::System.String value)
        {
            if (value is null)
            {
                throw new global::System.ArgumentNullException(nameof(value));
            }

            return _stringFormatter.Format(value);
        }

        global::StrawberryShake.OperationRequest global::StrawberryShake.IOperationRequestFactory.Create(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return CreateRequest(variables!);
        }
    }

    /// <summary>
    /// Represents the operation service of the CheckoutCustomerAssociateV2 GraphQL operation
    /// <code>
    /// mutation CheckoutCustomerAssociateV2($checkoutId: ID!, $customerAccessToken: String!) {
    ///   checkoutCustomerAssociateV2(checkoutId: $checkoutId, customerAccessToken: $customerAccessToken) {
    ///     __typename
    ///     checkout {
    ///       __typename
    ///       id
    ///       webUrl
    ///       ... on Checkout {
    ///         id
    ///       }
    ///     }
    ///     customer {
    ///       __typename
    ///       id
    ///       email
    ///       ... on Customer {
    ///         id
    ///       }
    ///     }
    ///     userErrors {
    ///       __typename
    ///       field
    ///       message
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICheckoutCustomerAssociateV2Mutation : global::StrawberryShake.IOperationRequestFactory
    {
        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<ICheckoutCustomerAssociateV2Result>> ExecuteAsync(global::System.String checkoutId, global::System.String customerAccessToken, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.IObservable<global::StrawberryShake.IOperationResult<ICheckoutCustomerAssociateV2Result>> Watch(global::System.String checkoutId, global::System.String customerAccessToken, global::StrawberryShake.ExecutionStrategy? strategy = null);
    }

    /// <summary>
    /// Represents the operation service of the UpdateCustomer GraphQL operation
    /// <code>
    /// mutation UpdateCustomer($customer: CustomerUpdateInput!, $customerAccessToken: String!) {
    ///   customerUpdate(customer: $customer, customerAccessToken: $customerAccessToken) {
    ///     __typename
    ///     customer {
    ///       __typename
    ///       id
    ///       firstName
    ///       lastName
    ///       acceptsMarketing
    ///       email
    ///       phone
    ///       defaultAddress {
    ///         __typename
    ///         id
    ///         address1
    ///         address2
    ///         city
    ///         company
    ///         country
    ///         firstName
    ///         lastName
    ///         phone
    ///         province
    ///         zip
    ///         ... on MailingAddress {
    ///           id
    ///         }
    ///       }
    ///       ... on Customer {
    ///         id
    ///       }
    ///     }
    ///     customerAccessToken {
    ///       __typename
    ///       accessToken
    ///       expiresAt
    ///     }
    ///     customerUserErrors {
    ///       __typename
    ///       code
    ///       field
    ///       message
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class UpdateCustomerMutationDocument : global::StrawberryShake.IDocument
    {
        private UpdateCustomerMutationDocument()
        {
        }

        public static UpdateCustomerMutationDocument Instance { get; } = new UpdateCustomerMutationDocument();
        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Mutation;
        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]
        {
            0x6d,
            0x75,
            0x74,
            0x61,
            0x74,
            0x69,
            0x6f,
            0x6e,
            0x20,
            0x55,
            0x70,
            0x64,
            0x61,
            0x74,
            0x65,
            0x43,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x28,
            0x24,
            0x63,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x3a,
            0x20,
            0x43,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x55,
            0x70,
            0x64,
            0x61,
            0x74,
            0x65,
            0x49,
            0x6e,
            0x70,
            0x75,
            0x74,
            0x21,
            0x2c,
            0x20,
            0x24,
            0x63,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x41,
            0x63,
            0x63,
            0x65,
            0x73,
            0x73,
            0x54,
            0x6f,
            0x6b,
            0x65,
            0x6e,
            0x3a,
            0x20,
            0x53,
            0x74,
            0x72,
            0x69,
            0x6e,
            0x67,
            0x21,
            0x29,
            0x20,
            0x7b,
            0x20,
            0x63,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x55,
            0x70,
            0x64,
            0x61,
            0x74,
            0x65,
            0x28,
            0x63,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x3a,
            0x20,
            0x24,
            0x63,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x2c,
            0x20,
            0x63,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x41,
            0x63,
            0x63,
            0x65,
            0x73,
            0x73,
            0x54,
            0x6f,
            0x6b,
            0x65,
            0x6e,
            0x3a,
            0x20,
            0x24,
            0x63,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x41,
            0x63,
            0x63,
            0x65,
            0x73,
            0x73,
            0x54,
            0x6f,
            0x6b,
            0x65,
            0x6e,
            0x29,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x63,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x69,
            0x64,
            0x20,
            0x66,
            0x69,
            0x72,
            0x73,
            0x74,
            0x4e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x6c,
            0x61,
            0x73,
            0x74,
            0x4e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x61,
            0x63,
            0x63,
            0x65,
            0x70,
            0x74,
            0x73,
            0x4d,
            0x61,
            0x72,
            0x6b,
            0x65,
            0x74,
            0x69,
            0x6e,
            0x67,
            0x20,
            0x65,
            0x6d,
            0x61,
            0x69,
            0x6c,
            0x20,
            0x70,
            0x68,
            0x6f,
            0x6e,
            0x65,
            0x20,
            0x64,
            0x65,
            0x66,
            0x61,
            0x75,
            0x6c,
            0x74,
            0x41,
            0x64,
            0x64,
            0x72,
            0x65,
            0x73,
            0x73,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x69,
            0x64,
            0x20,
            0x61,
            0x64,
            0x64,
            0x72,
            0x65,
            0x73,
            0x73,
            0x31,
            0x20,
            0x61,
            0x64,
            0x64,
            0x72,
            0x65,
            0x73,
            0x73,
            0x32,
            0x20,
            0x63,
            0x69,
            0x74,
            0x79,
            0x20,
            0x63,
            0x6f,
            0x6d,
            0x70,
            0x61,
            0x6e,
            0x79,
            0x20,
            0x63,
            0x6f,
            0x75,
            0x6e,
            0x74,
            0x72,
            0x79,
            0x20,
            0x66,
            0x69,
            0x72,
            0x73,
            0x74,
            0x4e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x6c,
            0x61,
            0x73,
            0x74,
            0x4e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x70,
            0x68,
            0x6f,
            0x6e,
            0x65,
            0x20,
            0x70,
            0x72,
            0x6f,
            0x76,
            0x69,
            0x6e,
            0x63,
            0x65,
            0x20,
            0x7a,
            0x69,
            0x70,
            0x20,
            0x2e,
            0x2e,
            0x2e,
            0x20,
            0x6f,
            0x6e,
            0x20,
            0x4d,
            0x61,
            0x69,
            0x6c,
            0x69,
            0x6e,
            0x67,
            0x41,
            0x64,
            0x64,
            0x72,
            0x65,
            0x73,
            0x73,
            0x20,
            0x7b,
            0x20,
            0x69,
            0x64,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x2e,
            0x2e,
            0x2e,
            0x20,
            0x6f,
            0x6e,
            0x20,
            0x43,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x20,
            0x7b,
            0x20,
            0x69,
            0x64,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x63,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x41,
            0x63,
            0x63,
            0x65,
            0x73,
            0x73,
            0x54,
            0x6f,
            0x6b,
            0x65,
            0x6e,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x61,
            0x63,
            0x63,
            0x65,
            0x73,
            0x73,
            0x54,
            0x6f,
            0x6b,
            0x65,
            0x6e,
            0x20,
            0x65,
            0x78,
            0x70,
            0x69,
            0x72,
            0x65,
            0x73,
            0x41,
            0x74,
            0x20,
            0x7d,
            0x20,
            0x63,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x55,
            0x73,
            0x65,
            0x72,
            0x45,
            0x72,
            0x72,
            0x6f,
            0x72,
            0x73,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x63,
            0x6f,
            0x64,
            0x65,
            0x20,
            0x66,
            0x69,
            0x65,
            0x6c,
            0x64,
            0x20,
            0x6d,
            0x65,
            0x73,
            0x73,
            0x61,
            0x67,
            0x65,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x7d
        };
        public global::StrawberryShake.DocumentHash Hash { get; } = new global::StrawberryShake.DocumentHash("md5Hash", "2179443559f9c28350765ba29fa8d0fb");

        public override global::System.String ToString()
        {
#if NETSTANDARD2_0
        return global::System.Text.Encoding.UTF8.GetString(Body.ToArray());
#else
            return global::System.Text.Encoding.UTF8.GetString(Body);
#endif
        }
    }

    /// <summary>
    /// Represents the operation service of the UpdateCustomer GraphQL operation
    /// <code>
    /// mutation UpdateCustomer($customer: CustomerUpdateInput!, $customerAccessToken: String!) {
    ///   customerUpdate(customer: $customer, customerAccessToken: $customerAccessToken) {
    ///     __typename
    ///     customer {
    ///       __typename
    ///       id
    ///       firstName
    ///       lastName
    ///       acceptsMarketing
    ///       email
    ///       phone
    ///       defaultAddress {
    ///         __typename
    ///         id
    ///         address1
    ///         address2
    ///         city
    ///         company
    ///         country
    ///         firstName
    ///         lastName
    ///         phone
    ///         province
    ///         zip
    ///         ... on MailingAddress {
    ///           id
    ///         }
    ///       }
    ///       ... on Customer {
    ///         id
    ///       }
    ///     }
    ///     customerAccessToken {
    ///       __typename
    ///       accessToken
    ///       expiresAt
    ///     }
    ///     customerUserErrors {
    ///       __typename
    ///       code
    ///       field
    ///       message
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class UpdateCustomerMutation : global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerMutation
    {
        private readonly global::StrawberryShake.IOperationExecutor<IUpdateCustomerResult> _operationExecutor;
        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _customerUpdateInputFormatter;
        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _stringFormatter;
        public UpdateCustomerMutation(global::StrawberryShake.IOperationExecutor<IUpdateCustomerResult> operationExecutor, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _operationExecutor = operationExecutor ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));
            _customerUpdateInputFormatter = serializerResolver.GetInputValueFormatter("CustomerUpdateInput");
            _stringFormatter = serializerResolver.GetInputValueFormatter("String");
        }

        global::System.Type global::StrawberryShake.IOperationRequestFactory.ResultType => typeof(IUpdateCustomerResult);

        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IUpdateCustomerResult>> ExecuteAsync(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerUpdateInput customer, global::System.String customerAccessToken, global::System.Threading.CancellationToken cancellationToken = default)
        {
            var request = CreateRequest(customer, customerAccessToken);
            return await _operationExecutor.ExecuteAsync(request, cancellationToken).ConfigureAwait(false);
        }

        public global::System.IObservable<global::StrawberryShake.IOperationResult<IUpdateCustomerResult>> Watch(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerUpdateInput customer, global::System.String customerAccessToken, global::StrawberryShake.ExecutionStrategy? strategy = null)
        {
            var request = CreateRequest(customer, customerAccessToken);
            return _operationExecutor.Watch(request, strategy);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerUpdateInput customer, global::System.String customerAccessToken)
        {
            var variables = new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>();
            variables.Add("customer", FormatCustomer(customer));
            variables.Add("customerAccessToken", FormatCustomerAccessToken(customerAccessToken));
            return CreateRequest(variables);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return new global::StrawberryShake.OperationRequest(id: UpdateCustomerMutationDocument.Instance.Hash.Value, name: "UpdateCustomer", document: UpdateCustomerMutationDocument.Instance, strategy: global::StrawberryShake.RequestStrategy.Default, variables: variables);
        }

        private global::System.Object? FormatCustomer(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerUpdateInput value)
        {
            if (value is null)
            {
                throw new global::System.ArgumentNullException(nameof(value));
            }

            return _customerUpdateInputFormatter.Format(value);
        }

        private global::System.Object? FormatCustomerAccessToken(global::System.String value)
        {
            if (value is null)
            {
                throw new global::System.ArgumentNullException(nameof(value));
            }

            return _stringFormatter.Format(value);
        }

        global::StrawberryShake.OperationRequest global::StrawberryShake.IOperationRequestFactory.Create(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return CreateRequest(variables!);
        }
    }

    /// <summary>
    /// Represents the operation service of the UpdateCustomer GraphQL operation
    /// <code>
    /// mutation UpdateCustomer($customer: CustomerUpdateInput!, $customerAccessToken: String!) {
    ///   customerUpdate(customer: $customer, customerAccessToken: $customerAccessToken) {
    ///     __typename
    ///     customer {
    ///       __typename
    ///       id
    ///       firstName
    ///       lastName
    ///       acceptsMarketing
    ///       email
    ///       phone
    ///       defaultAddress {
    ///         __typename
    ///         id
    ///         address1
    ///         address2
    ///         city
    ///         company
    ///         country
    ///         firstName
    ///         lastName
    ///         phone
    ///         province
    ///         zip
    ///         ... on MailingAddress {
    ///           id
    ///         }
    ///       }
    ///       ... on Customer {
    ///         id
    ///       }
    ///     }
    ///     customerAccessToken {
    ///       __typename
    ///       accessToken
    ///       expiresAt
    ///     }
    ///     customerUserErrors {
    ///       __typename
    ///       code
    ///       field
    ///       message
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IUpdateCustomerMutation : global::StrawberryShake.IOperationRequestFactory
    {
        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IUpdateCustomerResult>> ExecuteAsync(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerUpdateInput customer, global::System.String customerAccessToken, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.IObservable<global::StrawberryShake.IOperationResult<IUpdateCustomerResult>> Watch(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerUpdateInput customer, global::System.String customerAccessToken, global::StrawberryShake.ExecutionStrategy? strategy = null);
    }

    /// <summary>
    /// Represents the operation service of the CreateCheckoutLoggedIn GraphQL operation
    /// <code>
    /// mutation CreateCheckoutLoggedIn($email: String, $lineItems: [CheckoutLineItemInput!], $shippingAddress: MailingAddressInput) {
    ///   checkoutCreate(input: { email: $email, lineItems: $lineItems, shippingAddress: $shippingAddress }) {
    ///     __typename
    ///     checkout {
    ///       __typename
    ///       id
    ///       webUrl
    ///       ... on Checkout {
    ///         id
    ///       }
    ///     }
    ///     checkoutUserErrors {
    ///       __typename
    ///       field
    ///       message
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCheckoutLoggedInMutationDocument : global::StrawberryShake.IDocument
    {
        private CreateCheckoutLoggedInMutationDocument()
        {
        }

        public static CreateCheckoutLoggedInMutationDocument Instance { get; } = new CreateCheckoutLoggedInMutationDocument();
        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Mutation;
        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]
        {
            0x6d,
            0x75,
            0x74,
            0x61,
            0x74,
            0x69,
            0x6f,
            0x6e,
            0x20,
            0x43,
            0x72,
            0x65,
            0x61,
            0x74,
            0x65,
            0x43,
            0x68,
            0x65,
            0x63,
            0x6b,
            0x6f,
            0x75,
            0x74,
            0x4c,
            0x6f,
            0x67,
            0x67,
            0x65,
            0x64,
            0x49,
            0x6e,
            0x28,
            0x24,
            0x65,
            0x6d,
            0x61,
            0x69,
            0x6c,
            0x3a,
            0x20,
            0x53,
            0x74,
            0x72,
            0x69,
            0x6e,
            0x67,
            0x2c,
            0x20,
            0x24,
            0x6c,
            0x69,
            0x6e,
            0x65,
            0x49,
            0x74,
            0x65,
            0x6d,
            0x73,
            0x3a,
            0x20,
            0x5b,
            0x43,
            0x68,
            0x65,
            0x63,
            0x6b,
            0x6f,
            0x75,
            0x74,
            0x4c,
            0x69,
            0x6e,
            0x65,
            0x49,
            0x74,
            0x65,
            0x6d,
            0x49,
            0x6e,
            0x70,
            0x75,
            0x74,
            0x21,
            0x5d,
            0x2c,
            0x20,
            0x24,
            0x73,
            0x68,
            0x69,
            0x70,
            0x70,
            0x69,
            0x6e,
            0x67,
            0x41,
            0x64,
            0x64,
            0x72,
            0x65,
            0x73,
            0x73,
            0x3a,
            0x20,
            0x4d,
            0x61,
            0x69,
            0x6c,
            0x69,
            0x6e,
            0x67,
            0x41,
            0x64,
            0x64,
            0x72,
            0x65,
            0x73,
            0x73,
            0x49,
            0x6e,
            0x70,
            0x75,
            0x74,
            0x29,
            0x20,
            0x7b,
            0x20,
            0x63,
            0x68,
            0x65,
            0x63,
            0x6b,
            0x6f,
            0x75,
            0x74,
            0x43,
            0x72,
            0x65,
            0x61,
            0x74,
            0x65,
            0x28,
            0x69,
            0x6e,
            0x70,
            0x75,
            0x74,
            0x3a,
            0x20,
            0x7b,
            0x20,
            0x65,
            0x6d,
            0x61,
            0x69,
            0x6c,
            0x3a,
            0x20,
            0x24,
            0x65,
            0x6d,
            0x61,
            0x69,
            0x6c,
            0x2c,
            0x20,
            0x6c,
            0x69,
            0x6e,
            0x65,
            0x49,
            0x74,
            0x65,
            0x6d,
            0x73,
            0x3a,
            0x20,
            0x24,
            0x6c,
            0x69,
            0x6e,
            0x65,
            0x49,
            0x74,
            0x65,
            0x6d,
            0x73,
            0x2c,
            0x20,
            0x73,
            0x68,
            0x69,
            0x70,
            0x70,
            0x69,
            0x6e,
            0x67,
            0x41,
            0x64,
            0x64,
            0x72,
            0x65,
            0x73,
            0x73,
            0x3a,
            0x20,
            0x24,
            0x73,
            0x68,
            0x69,
            0x70,
            0x70,
            0x69,
            0x6e,
            0x67,
            0x41,
            0x64,
            0x64,
            0x72,
            0x65,
            0x73,
            0x73,
            0x20,
            0x7d,
            0x29,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x63,
            0x68,
            0x65,
            0x63,
            0x6b,
            0x6f,
            0x75,
            0x74,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x69,
            0x64,
            0x20,
            0x77,
            0x65,
            0x62,
            0x55,
            0x72,
            0x6c,
            0x20,
            0x2e,
            0x2e,
            0x2e,
            0x20,
            0x6f,
            0x6e,
            0x20,
            0x43,
            0x68,
            0x65,
            0x63,
            0x6b,
            0x6f,
            0x75,
            0x74,
            0x20,
            0x7b,
            0x20,
            0x69,
            0x64,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x63,
            0x68,
            0x65,
            0x63,
            0x6b,
            0x6f,
            0x75,
            0x74,
            0x55,
            0x73,
            0x65,
            0x72,
            0x45,
            0x72,
            0x72,
            0x6f,
            0x72,
            0x73,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x66,
            0x69,
            0x65,
            0x6c,
            0x64,
            0x20,
            0x6d,
            0x65,
            0x73,
            0x73,
            0x61,
            0x67,
            0x65,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x7d
        };
        public global::StrawberryShake.DocumentHash Hash { get; } = new global::StrawberryShake.DocumentHash("md5Hash", "8277ce6bc1263e4420004d8e09d925a2");

        public override global::System.String ToString()
        {
#if NETSTANDARD2_0
        return global::System.Text.Encoding.UTF8.GetString(Body.ToArray());
#else
            return global::System.Text.Encoding.UTF8.GetString(Body);
#endif
        }
    }

    /// <summary>
    /// Represents the operation service of the CreateCheckoutLoggedIn GraphQL operation
    /// <code>
    /// mutation CreateCheckoutLoggedIn($email: String, $lineItems: [CheckoutLineItemInput!], $shippingAddress: MailingAddressInput) {
    ///   checkoutCreate(input: { email: $email, lineItems: $lineItems, shippingAddress: $shippingAddress }) {
    ///     __typename
    ///     checkout {
    ///       __typename
    ///       id
    ///       webUrl
    ///       ... on Checkout {
    ///         id
    ///       }
    ///     }
    ///     checkoutUserErrors {
    ///       __typename
    ///       field
    ///       message
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCheckoutLoggedInMutation : global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedInMutation
    {
        private readonly global::StrawberryShake.IOperationExecutor<ICreateCheckoutLoggedInResult> _operationExecutor;
        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _stringFormatter;
        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _checkoutLineItemInputFormatter;
        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _mailingAddressInputFormatter;
        public CreateCheckoutLoggedInMutation(global::StrawberryShake.IOperationExecutor<ICreateCheckoutLoggedInResult> operationExecutor, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _operationExecutor = operationExecutor ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));
            _stringFormatter = serializerResolver.GetInputValueFormatter("String");
            _checkoutLineItemInputFormatter = serializerResolver.GetInputValueFormatter("CheckoutLineItemInput");
            _mailingAddressInputFormatter = serializerResolver.GetInputValueFormatter("MailingAddressInput");
        }

        global::System.Type global::StrawberryShake.IOperationRequestFactory.ResultType => typeof(ICreateCheckoutLoggedInResult);

        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<ICreateCheckoutLoggedInResult>> ExecuteAsync(global::System.String? email, global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CheckoutLineItemInput>? lineItems, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.MailingAddressInput? shippingAddress, global::System.Threading.CancellationToken cancellationToken = default)
        {
            var request = CreateRequest(email, lineItems, shippingAddress);
            return await _operationExecutor.ExecuteAsync(request, cancellationToken).ConfigureAwait(false);
        }

        public global::System.IObservable<global::StrawberryShake.IOperationResult<ICreateCheckoutLoggedInResult>> Watch(global::System.String? email, global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CheckoutLineItemInput>? lineItems, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.MailingAddressInput? shippingAddress, global::StrawberryShake.ExecutionStrategy? strategy = null)
        {
            var request = CreateRequest(email, lineItems, shippingAddress);
            return _operationExecutor.Watch(request, strategy);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.String? email, global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CheckoutLineItemInput>? lineItems, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.MailingAddressInput? shippingAddress)
        {
            var variables = new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>();
            variables.Add("email", FormatEmail(email));
            variables.Add("lineItems", FormatLineItems(lineItems));
            variables.Add("shippingAddress", FormatShippingAddress(shippingAddress));
            return CreateRequest(variables);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return new global::StrawberryShake.OperationRequest(id: CreateCheckoutLoggedInMutationDocument.Instance.Hash.Value, name: "CreateCheckoutLoggedIn", document: CreateCheckoutLoggedInMutationDocument.Instance, strategy: global::StrawberryShake.RequestStrategy.Default, variables: variables);
        }

        private global::System.Object? FormatEmail(global::System.String? value)
        {
            if (value is null)
            {
                return value;
            }
            else
            {
                return _stringFormatter.Format(value);
            }
        }

        private global::System.Object? FormatLineItems(global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CheckoutLineItemInput>? value)
        {
            if (value is null)
            {
                return value;
            }
            else
            {
                var value_list = new global::System.Collections.Generic.List<global::System.Object?>();
                foreach (var value_elm in value)
                {
                    if (value_elm is null)
                    {
                        throw new global::System.ArgumentNullException(nameof(value_elm));
                    }

                    value_list.Add(_checkoutLineItemInputFormatter.Format(value_elm));
                }

                return value_list;
            }
        }

        private global::System.Object? FormatShippingAddress(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.MailingAddressInput? value)
        {
            if (value is null)
            {
                return value;
            }
            else
            {
                return _mailingAddressInputFormatter.Format(value);
            }
        }

        global::StrawberryShake.OperationRequest global::StrawberryShake.IOperationRequestFactory.Create(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return CreateRequest(variables!);
        }
    }

    /// <summary>
    /// Represents the operation service of the CreateCheckoutLoggedIn GraphQL operation
    /// <code>
    /// mutation CreateCheckoutLoggedIn($email: String, $lineItems: [CheckoutLineItemInput!], $shippingAddress: MailingAddressInput) {
    ///   checkoutCreate(input: { email: $email, lineItems: $lineItems, shippingAddress: $shippingAddress }) {
    ///     __typename
    ///     checkout {
    ///       __typename
    ///       id
    ///       webUrl
    ///       ... on Checkout {
    ///         id
    ///       }
    ///     }
    ///     checkoutUserErrors {
    ///       __typename
    ///       field
    ///       message
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCheckoutLoggedInMutation : global::StrawberryShake.IOperationRequestFactory
    {
        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<ICreateCheckoutLoggedInResult>> ExecuteAsync(global::System.String? email, global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CheckoutLineItemInput>? lineItems, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.MailingAddressInput? shippingAddress, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.IObservable<global::StrawberryShake.IOperationResult<ICreateCheckoutLoggedInResult>> Watch(global::System.String? email, global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CheckoutLineItemInput>? lineItems, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.MailingAddressInput? shippingAddress, global::StrawberryShake.ExecutionStrategy? strategy = null);
    }

    /// <summary>
    /// Represents the operation service of the UpdateCustomerAddress GraphQL operation
    /// <code>
    /// mutation UpdateCustomerAddress($address: MailingAddressInput!, $customerAccessToken: String!, $id: ID!) {
    ///   customerAddressUpdate(address: $address, customerAccessToken: $customerAccessToken, id: $id) {
    ///     __typename
    ///     customerAddress {
    ///       __typename
    ///       id
    ///       address1
    ///       address2
    ///       city
    ///       company
    ///       country
    ///       firstName
    ///       lastName
    ///       phone
    ///       province
    ///       zip
    ///       ... on MailingAddress {
    ///         id
    ///       }
    ///     }
    ///     customerUserErrors {
    ///       __typename
    ///       field
    ///       message
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class UpdateCustomerAddressMutationDocument : global::StrawberryShake.IDocument
    {
        private UpdateCustomerAddressMutationDocument()
        {
        }

        public static UpdateCustomerAddressMutationDocument Instance { get; } = new UpdateCustomerAddressMutationDocument();
        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Mutation;
        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]
        {
            0x6d,
            0x75,
            0x74,
            0x61,
            0x74,
            0x69,
            0x6f,
            0x6e,
            0x20,
            0x55,
            0x70,
            0x64,
            0x61,
            0x74,
            0x65,
            0x43,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x41,
            0x64,
            0x64,
            0x72,
            0x65,
            0x73,
            0x73,
            0x28,
            0x24,
            0x61,
            0x64,
            0x64,
            0x72,
            0x65,
            0x73,
            0x73,
            0x3a,
            0x20,
            0x4d,
            0x61,
            0x69,
            0x6c,
            0x69,
            0x6e,
            0x67,
            0x41,
            0x64,
            0x64,
            0x72,
            0x65,
            0x73,
            0x73,
            0x49,
            0x6e,
            0x70,
            0x75,
            0x74,
            0x21,
            0x2c,
            0x20,
            0x24,
            0x63,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x41,
            0x63,
            0x63,
            0x65,
            0x73,
            0x73,
            0x54,
            0x6f,
            0x6b,
            0x65,
            0x6e,
            0x3a,
            0x20,
            0x53,
            0x74,
            0x72,
            0x69,
            0x6e,
            0x67,
            0x21,
            0x2c,
            0x20,
            0x24,
            0x69,
            0x64,
            0x3a,
            0x20,
            0x49,
            0x44,
            0x21,
            0x29,
            0x20,
            0x7b,
            0x20,
            0x63,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x41,
            0x64,
            0x64,
            0x72,
            0x65,
            0x73,
            0x73,
            0x55,
            0x70,
            0x64,
            0x61,
            0x74,
            0x65,
            0x28,
            0x61,
            0x64,
            0x64,
            0x72,
            0x65,
            0x73,
            0x73,
            0x3a,
            0x20,
            0x24,
            0x61,
            0x64,
            0x64,
            0x72,
            0x65,
            0x73,
            0x73,
            0x2c,
            0x20,
            0x63,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x41,
            0x63,
            0x63,
            0x65,
            0x73,
            0x73,
            0x54,
            0x6f,
            0x6b,
            0x65,
            0x6e,
            0x3a,
            0x20,
            0x24,
            0x63,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x41,
            0x63,
            0x63,
            0x65,
            0x73,
            0x73,
            0x54,
            0x6f,
            0x6b,
            0x65,
            0x6e,
            0x2c,
            0x20,
            0x69,
            0x64,
            0x3a,
            0x20,
            0x24,
            0x69,
            0x64,
            0x29,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x63,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x41,
            0x64,
            0x64,
            0x72,
            0x65,
            0x73,
            0x73,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x69,
            0x64,
            0x20,
            0x61,
            0x64,
            0x64,
            0x72,
            0x65,
            0x73,
            0x73,
            0x31,
            0x20,
            0x61,
            0x64,
            0x64,
            0x72,
            0x65,
            0x73,
            0x73,
            0x32,
            0x20,
            0x63,
            0x69,
            0x74,
            0x79,
            0x20,
            0x63,
            0x6f,
            0x6d,
            0x70,
            0x61,
            0x6e,
            0x79,
            0x20,
            0x63,
            0x6f,
            0x75,
            0x6e,
            0x74,
            0x72,
            0x79,
            0x20,
            0x66,
            0x69,
            0x72,
            0x73,
            0x74,
            0x4e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x6c,
            0x61,
            0x73,
            0x74,
            0x4e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x70,
            0x68,
            0x6f,
            0x6e,
            0x65,
            0x20,
            0x70,
            0x72,
            0x6f,
            0x76,
            0x69,
            0x6e,
            0x63,
            0x65,
            0x20,
            0x7a,
            0x69,
            0x70,
            0x20,
            0x2e,
            0x2e,
            0x2e,
            0x20,
            0x6f,
            0x6e,
            0x20,
            0x4d,
            0x61,
            0x69,
            0x6c,
            0x69,
            0x6e,
            0x67,
            0x41,
            0x64,
            0x64,
            0x72,
            0x65,
            0x73,
            0x73,
            0x20,
            0x7b,
            0x20,
            0x69,
            0x64,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x63,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x55,
            0x73,
            0x65,
            0x72,
            0x45,
            0x72,
            0x72,
            0x6f,
            0x72,
            0x73,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x66,
            0x69,
            0x65,
            0x6c,
            0x64,
            0x20,
            0x6d,
            0x65,
            0x73,
            0x73,
            0x61,
            0x67,
            0x65,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x7d
        };
        public global::StrawberryShake.DocumentHash Hash { get; } = new global::StrawberryShake.DocumentHash("md5Hash", "6700a168fdd1d51910e95af5bb4aa97a");

        public override global::System.String ToString()
        {
#if NETSTANDARD2_0
        return global::System.Text.Encoding.UTF8.GetString(Body.ToArray());
#else
            return global::System.Text.Encoding.UTF8.GetString(Body);
#endif
        }
    }

    /// <summary>
    /// Represents the operation service of the UpdateCustomerAddress GraphQL operation
    /// <code>
    /// mutation UpdateCustomerAddress($address: MailingAddressInput!, $customerAccessToken: String!, $id: ID!) {
    ///   customerAddressUpdate(address: $address, customerAccessToken: $customerAccessToken, id: $id) {
    ///     __typename
    ///     customerAddress {
    ///       __typename
    ///       id
    ///       address1
    ///       address2
    ///       city
    ///       company
    ///       country
    ///       firstName
    ///       lastName
    ///       phone
    ///       province
    ///       zip
    ///       ... on MailingAddress {
    ///         id
    ///       }
    ///     }
    ///     customerUserErrors {
    ///       __typename
    ///       field
    ///       message
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class UpdateCustomerAddressMutation : global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerAddressMutation
    {
        private readonly global::StrawberryShake.IOperationExecutor<IUpdateCustomerAddressResult> _operationExecutor;
        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _mailingAddressInputFormatter;
        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _stringFormatter;
        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _iDFormatter;
        public UpdateCustomerAddressMutation(global::StrawberryShake.IOperationExecutor<IUpdateCustomerAddressResult> operationExecutor, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _operationExecutor = operationExecutor ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));
            _mailingAddressInputFormatter = serializerResolver.GetInputValueFormatter("MailingAddressInput");
            _stringFormatter = serializerResolver.GetInputValueFormatter("String");
            _iDFormatter = serializerResolver.GetInputValueFormatter("ID");
        }

        global::System.Type global::StrawberryShake.IOperationRequestFactory.ResultType => typeof(IUpdateCustomerAddressResult);

        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IUpdateCustomerAddressResult>> ExecuteAsync(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.MailingAddressInput address, global::System.String customerAccessToken, global::System.String id, global::System.Threading.CancellationToken cancellationToken = default)
        {
            var request = CreateRequest(address, customerAccessToken, id);
            return await _operationExecutor.ExecuteAsync(request, cancellationToken).ConfigureAwait(false);
        }

        public global::System.IObservable<global::StrawberryShake.IOperationResult<IUpdateCustomerAddressResult>> Watch(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.MailingAddressInput address, global::System.String customerAccessToken, global::System.String id, global::StrawberryShake.ExecutionStrategy? strategy = null)
        {
            var request = CreateRequest(address, customerAccessToken, id);
            return _operationExecutor.Watch(request, strategy);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.MailingAddressInput address, global::System.String customerAccessToken, global::System.String id)
        {
            var variables = new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>();
            variables.Add("address", FormatAddress(address));
            variables.Add("customerAccessToken", FormatCustomerAccessToken(customerAccessToken));
            variables.Add("id", FormatId(id));
            return CreateRequest(variables);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return new global::StrawberryShake.OperationRequest(id: UpdateCustomerAddressMutationDocument.Instance.Hash.Value, name: "UpdateCustomerAddress", document: UpdateCustomerAddressMutationDocument.Instance, strategy: global::StrawberryShake.RequestStrategy.Default, variables: variables);
        }

        private global::System.Object? FormatAddress(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.MailingAddressInput value)
        {
            if (value is null)
            {
                throw new global::System.ArgumentNullException(nameof(value));
            }

            return _mailingAddressInputFormatter.Format(value);
        }

        private global::System.Object? FormatCustomerAccessToken(global::System.String value)
        {
            if (value is null)
            {
                throw new global::System.ArgumentNullException(nameof(value));
            }

            return _stringFormatter.Format(value);
        }

        private global::System.Object? FormatId(global::System.String value)
        {
            if (value is null)
            {
                throw new global::System.ArgumentNullException(nameof(value));
            }

            return _iDFormatter.Format(value);
        }

        global::StrawberryShake.OperationRequest global::StrawberryShake.IOperationRequestFactory.Create(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return CreateRequest(variables!);
        }
    }

    /// <summary>
    /// Represents the operation service of the UpdateCustomerAddress GraphQL operation
    /// <code>
    /// mutation UpdateCustomerAddress($address: MailingAddressInput!, $customerAccessToken: String!, $id: ID!) {
    ///   customerAddressUpdate(address: $address, customerAccessToken: $customerAccessToken, id: $id) {
    ///     __typename
    ///     customerAddress {
    ///       __typename
    ///       id
    ///       address1
    ///       address2
    ///       city
    ///       company
    ///       country
    ///       firstName
    ///       lastName
    ///       phone
    ///       province
    ///       zip
    ///       ... on MailingAddress {
    ///         id
    ///       }
    ///     }
    ///     customerUserErrors {
    ///       __typename
    ///       field
    ///       message
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IUpdateCustomerAddressMutation : global::StrawberryShake.IOperationRequestFactory
    {
        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IUpdateCustomerAddressResult>> ExecuteAsync(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.MailingAddressInput address, global::System.String customerAccessToken, global::System.String id, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.IObservable<global::StrawberryShake.IOperationResult<IUpdateCustomerAddressResult>> Watch(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.MailingAddressInput address, global::System.String customerAccessToken, global::System.String id, global::StrawberryShake.ExecutionStrategy? strategy = null);
    }

    /// <summary>
    /// Represents the operation service of the CreateCustomerAddress GraphQL operation
    /// <code>
    /// mutation CreateCustomerAddress($address: MailingAddressInput!, $customerAccessToken: String!) {
    ///   customerAddressCreate(address: $address, customerAccessToken: $customerAccessToken) {
    ///     __typename
    ///     customerAddress {
    ///       __typename
    ///       id
    ///       address1
    ///       address2
    ///       city
    ///       company
    ///       country
    ///       firstName
    ///       lastName
    ///       phone
    ///       province
    ///       zip
    ///       ... on MailingAddress {
    ///         id
    ///       }
    ///     }
    ///     customerUserErrors {
    ///       __typename
    ///       field
    ///       message
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCustomerAddressMutationDocument : global::StrawberryShake.IDocument
    {
        private CreateCustomerAddressMutationDocument()
        {
        }

        public static CreateCustomerAddressMutationDocument Instance { get; } = new CreateCustomerAddressMutationDocument();
        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Mutation;
        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]
        {
            0x6d,
            0x75,
            0x74,
            0x61,
            0x74,
            0x69,
            0x6f,
            0x6e,
            0x20,
            0x43,
            0x72,
            0x65,
            0x61,
            0x74,
            0x65,
            0x43,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x41,
            0x64,
            0x64,
            0x72,
            0x65,
            0x73,
            0x73,
            0x28,
            0x24,
            0x61,
            0x64,
            0x64,
            0x72,
            0x65,
            0x73,
            0x73,
            0x3a,
            0x20,
            0x4d,
            0x61,
            0x69,
            0x6c,
            0x69,
            0x6e,
            0x67,
            0x41,
            0x64,
            0x64,
            0x72,
            0x65,
            0x73,
            0x73,
            0x49,
            0x6e,
            0x70,
            0x75,
            0x74,
            0x21,
            0x2c,
            0x20,
            0x24,
            0x63,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x41,
            0x63,
            0x63,
            0x65,
            0x73,
            0x73,
            0x54,
            0x6f,
            0x6b,
            0x65,
            0x6e,
            0x3a,
            0x20,
            0x53,
            0x74,
            0x72,
            0x69,
            0x6e,
            0x67,
            0x21,
            0x29,
            0x20,
            0x7b,
            0x20,
            0x63,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x41,
            0x64,
            0x64,
            0x72,
            0x65,
            0x73,
            0x73,
            0x43,
            0x72,
            0x65,
            0x61,
            0x74,
            0x65,
            0x28,
            0x61,
            0x64,
            0x64,
            0x72,
            0x65,
            0x73,
            0x73,
            0x3a,
            0x20,
            0x24,
            0x61,
            0x64,
            0x64,
            0x72,
            0x65,
            0x73,
            0x73,
            0x2c,
            0x20,
            0x63,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x41,
            0x63,
            0x63,
            0x65,
            0x73,
            0x73,
            0x54,
            0x6f,
            0x6b,
            0x65,
            0x6e,
            0x3a,
            0x20,
            0x24,
            0x63,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x41,
            0x63,
            0x63,
            0x65,
            0x73,
            0x73,
            0x54,
            0x6f,
            0x6b,
            0x65,
            0x6e,
            0x29,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x63,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x41,
            0x64,
            0x64,
            0x72,
            0x65,
            0x73,
            0x73,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x69,
            0x64,
            0x20,
            0x61,
            0x64,
            0x64,
            0x72,
            0x65,
            0x73,
            0x73,
            0x31,
            0x20,
            0x61,
            0x64,
            0x64,
            0x72,
            0x65,
            0x73,
            0x73,
            0x32,
            0x20,
            0x63,
            0x69,
            0x74,
            0x79,
            0x20,
            0x63,
            0x6f,
            0x6d,
            0x70,
            0x61,
            0x6e,
            0x79,
            0x20,
            0x63,
            0x6f,
            0x75,
            0x6e,
            0x74,
            0x72,
            0x79,
            0x20,
            0x66,
            0x69,
            0x72,
            0x73,
            0x74,
            0x4e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x6c,
            0x61,
            0x73,
            0x74,
            0x4e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x70,
            0x68,
            0x6f,
            0x6e,
            0x65,
            0x20,
            0x70,
            0x72,
            0x6f,
            0x76,
            0x69,
            0x6e,
            0x63,
            0x65,
            0x20,
            0x7a,
            0x69,
            0x70,
            0x20,
            0x2e,
            0x2e,
            0x2e,
            0x20,
            0x6f,
            0x6e,
            0x20,
            0x4d,
            0x61,
            0x69,
            0x6c,
            0x69,
            0x6e,
            0x67,
            0x41,
            0x64,
            0x64,
            0x72,
            0x65,
            0x73,
            0x73,
            0x20,
            0x7b,
            0x20,
            0x69,
            0x64,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x63,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x55,
            0x73,
            0x65,
            0x72,
            0x45,
            0x72,
            0x72,
            0x6f,
            0x72,
            0x73,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x66,
            0x69,
            0x65,
            0x6c,
            0x64,
            0x20,
            0x6d,
            0x65,
            0x73,
            0x73,
            0x61,
            0x67,
            0x65,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x7d
        };
        public global::StrawberryShake.DocumentHash Hash { get; } = new global::StrawberryShake.DocumentHash("md5Hash", "85c080a347135535ff9a4c142a41fbe0");

        public override global::System.String ToString()
        {
#if NETSTANDARD2_0
        return global::System.Text.Encoding.UTF8.GetString(Body.ToArray());
#else
            return global::System.Text.Encoding.UTF8.GetString(Body);
#endif
        }
    }

    /// <summary>
    /// Represents the operation service of the CreateCustomerAddress GraphQL operation
    /// <code>
    /// mutation CreateCustomerAddress($address: MailingAddressInput!, $customerAccessToken: String!) {
    ///   customerAddressCreate(address: $address, customerAccessToken: $customerAccessToken) {
    ///     __typename
    ///     customerAddress {
    ///       __typename
    ///       id
    ///       address1
    ///       address2
    ///       city
    ///       company
    ///       country
    ///       firstName
    ///       lastName
    ///       phone
    ///       province
    ///       zip
    ///       ... on MailingAddress {
    ///         id
    ///       }
    ///     }
    ///     customerUserErrors {
    ///       __typename
    ///       field
    ///       message
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCustomerAddressMutation : global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAddressMutation
    {
        private readonly global::StrawberryShake.IOperationExecutor<ICreateCustomerAddressResult> _operationExecutor;
        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _mailingAddressInputFormatter;
        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _stringFormatter;
        public CreateCustomerAddressMutation(global::StrawberryShake.IOperationExecutor<ICreateCustomerAddressResult> operationExecutor, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _operationExecutor = operationExecutor ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));
            _mailingAddressInputFormatter = serializerResolver.GetInputValueFormatter("MailingAddressInput");
            _stringFormatter = serializerResolver.GetInputValueFormatter("String");
        }

        global::System.Type global::StrawberryShake.IOperationRequestFactory.ResultType => typeof(ICreateCustomerAddressResult);

        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<ICreateCustomerAddressResult>> ExecuteAsync(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.MailingAddressInput address, global::System.String customerAccessToken, global::System.Threading.CancellationToken cancellationToken = default)
        {
            var request = CreateRequest(address, customerAccessToken);
            return await _operationExecutor.ExecuteAsync(request, cancellationToken).ConfigureAwait(false);
        }

        public global::System.IObservable<global::StrawberryShake.IOperationResult<ICreateCustomerAddressResult>> Watch(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.MailingAddressInput address, global::System.String customerAccessToken, global::StrawberryShake.ExecutionStrategy? strategy = null)
        {
            var request = CreateRequest(address, customerAccessToken);
            return _operationExecutor.Watch(request, strategy);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.MailingAddressInput address, global::System.String customerAccessToken)
        {
            var variables = new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>();
            variables.Add("address", FormatAddress(address));
            variables.Add("customerAccessToken", FormatCustomerAccessToken(customerAccessToken));
            return CreateRequest(variables);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return new global::StrawberryShake.OperationRequest(id: CreateCustomerAddressMutationDocument.Instance.Hash.Value, name: "CreateCustomerAddress", document: CreateCustomerAddressMutationDocument.Instance, strategy: global::StrawberryShake.RequestStrategy.Default, variables: variables);
        }

        private global::System.Object? FormatAddress(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.MailingAddressInput value)
        {
            if (value is null)
            {
                throw new global::System.ArgumentNullException(nameof(value));
            }

            return _mailingAddressInputFormatter.Format(value);
        }

        private global::System.Object? FormatCustomerAccessToken(global::System.String value)
        {
            if (value is null)
            {
                throw new global::System.ArgumentNullException(nameof(value));
            }

            return _stringFormatter.Format(value);
        }

        global::StrawberryShake.OperationRequest global::StrawberryShake.IOperationRequestFactory.Create(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return CreateRequest(variables!);
        }
    }

    /// <summary>
    /// Represents the operation service of the CreateCustomerAddress GraphQL operation
    /// <code>
    /// mutation CreateCustomerAddress($address: MailingAddressInput!, $customerAccessToken: String!) {
    ///   customerAddressCreate(address: $address, customerAccessToken: $customerAccessToken) {
    ///     __typename
    ///     customerAddress {
    ///       __typename
    ///       id
    ///       address1
    ///       address2
    ///       city
    ///       company
    ///       country
    ///       firstName
    ///       lastName
    ///       phone
    ///       province
    ///       zip
    ///       ... on MailingAddress {
    ///         id
    ///       }
    ///     }
    ///     customerUserErrors {
    ///       __typename
    ///       field
    ///       message
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCustomerAddressMutation : global::StrawberryShake.IOperationRequestFactory
    {
        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<ICreateCustomerAddressResult>> ExecuteAsync(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.MailingAddressInput address, global::System.String customerAccessToken, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.IObservable<global::StrawberryShake.IOperationResult<ICreateCustomerAddressResult>> Watch(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.MailingAddressInput address, global::System.String customerAccessToken, global::StrawberryShake.ExecutionStrategy? strategy = null);
    }

    /// <summary>
    /// Represents the operation service of the CreateCustomer GraphQL operation
    /// <code>
    /// mutation CreateCustomer($input: CustomerCreateInput!) {
    ///   customerCreate(input: $input) {
    ///     __typename
    ///     customer {
    ///       __typename
    ///       firstName
    ///       lastName
    ///       email
    ///       phone
    ///       acceptsMarketing
    ///       ... on Customer {
    ///         id
    ///       }
    ///     }
    ///     customerUserErrors {
    ///       __typename
    ///       field
    ///       message
    ///       code
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCustomerMutationDocument : global::StrawberryShake.IDocument
    {
        private CreateCustomerMutationDocument()
        {
        }

        public static CreateCustomerMutationDocument Instance { get; } = new CreateCustomerMutationDocument();
        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Mutation;
        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]
        {
            0x6d,
            0x75,
            0x74,
            0x61,
            0x74,
            0x69,
            0x6f,
            0x6e,
            0x20,
            0x43,
            0x72,
            0x65,
            0x61,
            0x74,
            0x65,
            0x43,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x28,
            0x24,
            0x69,
            0x6e,
            0x70,
            0x75,
            0x74,
            0x3a,
            0x20,
            0x43,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x43,
            0x72,
            0x65,
            0x61,
            0x74,
            0x65,
            0x49,
            0x6e,
            0x70,
            0x75,
            0x74,
            0x21,
            0x29,
            0x20,
            0x7b,
            0x20,
            0x63,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x43,
            0x72,
            0x65,
            0x61,
            0x74,
            0x65,
            0x28,
            0x69,
            0x6e,
            0x70,
            0x75,
            0x74,
            0x3a,
            0x20,
            0x24,
            0x69,
            0x6e,
            0x70,
            0x75,
            0x74,
            0x29,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x63,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x66,
            0x69,
            0x72,
            0x73,
            0x74,
            0x4e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x6c,
            0x61,
            0x73,
            0x74,
            0x4e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x65,
            0x6d,
            0x61,
            0x69,
            0x6c,
            0x20,
            0x70,
            0x68,
            0x6f,
            0x6e,
            0x65,
            0x20,
            0x61,
            0x63,
            0x63,
            0x65,
            0x70,
            0x74,
            0x73,
            0x4d,
            0x61,
            0x72,
            0x6b,
            0x65,
            0x74,
            0x69,
            0x6e,
            0x67,
            0x20,
            0x2e,
            0x2e,
            0x2e,
            0x20,
            0x6f,
            0x6e,
            0x20,
            0x43,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x20,
            0x7b,
            0x20,
            0x69,
            0x64,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x63,
            0x75,
            0x73,
            0x74,
            0x6f,
            0x6d,
            0x65,
            0x72,
            0x55,
            0x73,
            0x65,
            0x72,
            0x45,
            0x72,
            0x72,
            0x6f,
            0x72,
            0x73,
            0x20,
            0x7b,
            0x20,
            0x5f,
            0x5f,
            0x74,
            0x79,
            0x70,
            0x65,
            0x6e,
            0x61,
            0x6d,
            0x65,
            0x20,
            0x66,
            0x69,
            0x65,
            0x6c,
            0x64,
            0x20,
            0x6d,
            0x65,
            0x73,
            0x73,
            0x61,
            0x67,
            0x65,
            0x20,
            0x63,
            0x6f,
            0x64,
            0x65,
            0x20,
            0x7d,
            0x20,
            0x7d,
            0x20,
            0x7d
        };
        public global::StrawberryShake.DocumentHash Hash { get; } = new global::StrawberryShake.DocumentHash("md5Hash", "3d77bcffee1a146ff1b7fa335cd72ab1");

        public override global::System.String ToString()
        {
#if NETSTANDARD2_0
        return global::System.Text.Encoding.UTF8.GetString(Body.ToArray());
#else
            return global::System.Text.Encoding.UTF8.GetString(Body);
#endif
        }
    }

    /// <summary>
    /// Represents the operation service of the CreateCustomer GraphQL operation
    /// <code>
    /// mutation CreateCustomer($input: CustomerCreateInput!) {
    ///   customerCreate(input: $input) {
    ///     __typename
    ///     customer {
    ///       __typename
    ///       firstName
    ///       lastName
    ///       email
    ///       phone
    ///       acceptsMarketing
    ///       ... on Customer {
    ///         id
    ///       }
    ///     }
    ///     customerUserErrors {
    ///       __typename
    ///       field
    ///       message
    ///       code
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCustomerMutation : global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerMutation
    {
        private readonly global::StrawberryShake.IOperationExecutor<ICreateCustomerResult> _operationExecutor;
        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _customerCreateInputFormatter;
        public CreateCustomerMutation(global::StrawberryShake.IOperationExecutor<ICreateCustomerResult> operationExecutor, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _operationExecutor = operationExecutor ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));
            _customerCreateInputFormatter = serializerResolver.GetInputValueFormatter("CustomerCreateInput");
        }

        global::System.Type global::StrawberryShake.IOperationRequestFactory.ResultType => typeof(ICreateCustomerResult);

        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<ICreateCustomerResult>> ExecuteAsync(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerCreateInput input, global::System.Threading.CancellationToken cancellationToken = default)
        {
            var request = CreateRequest(input);
            return await _operationExecutor.ExecuteAsync(request, cancellationToken).ConfigureAwait(false);
        }

        public global::System.IObservable<global::StrawberryShake.IOperationResult<ICreateCustomerResult>> Watch(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerCreateInput input, global::StrawberryShake.ExecutionStrategy? strategy = null)
        {
            var request = CreateRequest(input);
            return _operationExecutor.Watch(request, strategy);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerCreateInput input)
        {
            var variables = new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>();
            variables.Add("input", FormatInput(input));
            return CreateRequest(variables);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return new global::StrawberryShake.OperationRequest(id: CreateCustomerMutationDocument.Instance.Hash.Value, name: "CreateCustomer", document: CreateCustomerMutationDocument.Instance, strategy: global::StrawberryShake.RequestStrategy.Default, variables: variables);
        }

        private global::System.Object? FormatInput(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerCreateInput value)
        {
            if (value is null)
            {
                throw new global::System.ArgumentNullException(nameof(value));
            }

            return _customerCreateInputFormatter.Format(value);
        }

        global::StrawberryShake.OperationRequest global::StrawberryShake.IOperationRequestFactory.Create(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return CreateRequest(variables!);
        }
    }

    /// <summary>
    /// Represents the operation service of the CreateCustomer GraphQL operation
    /// <code>
    /// mutation CreateCustomer($input: CustomerCreateInput!) {
    ///   customerCreate(input: $input) {
    ///     __typename
    ///     customer {
    ///       __typename
    ///       firstName
    ///       lastName
    ///       email
    ///       phone
    ///       acceptsMarketing
    ///       ... on Customer {
    ///         id
    ///       }
    ///     }
    ///     customerUserErrors {
    ///       __typename
    ///       field
    ///       message
    ///       code
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface ICreateCustomerMutation : global::StrawberryShake.IOperationRequestFactory
    {
        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<ICreateCustomerResult>> ExecuteAsync(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerCreateInput input, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.IObservable<global::StrawberryShake.IOperationResult<ICreateCustomerResult>> Watch(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerCreateInput input, global::StrawberryShake.ExecutionStrategy? strategy = null);
    }

    /// <summary>
    /// Represents the ShopifyClient GraphQL client
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class ShopifyClient : global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IShopifyClient
    {
        private readonly global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetCustomerQuery _getCustomer;
        private readonly global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandleQuery _getProductByHandle;
        private readonly global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductsQuery _getProducts;
        private readonly global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAccessTokenMutation _createCustomerAccessToken;
        private readonly global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedOutMutation _createCheckoutLoggedOut;
        private readonly global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICheckoutCustomerAssociateV2Mutation _checkoutCustomerAssociateV2;
        private readonly global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerMutation _updateCustomer;
        private readonly global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedInMutation _createCheckoutLoggedIn;
        private readonly global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerAddressMutation _updateCustomerAddress;
        private readonly global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAddressMutation _createCustomerAddress;
        private readonly global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerMutation _createCustomer;
        public ShopifyClient(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetCustomerQuery getCustomer, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandleQuery getProductByHandle, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductsQuery getProducts, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAccessTokenMutation createCustomerAccessToken, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedOutMutation createCheckoutLoggedOut, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICheckoutCustomerAssociateV2Mutation checkoutCustomerAssociateV2, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerMutation updateCustomer, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedInMutation createCheckoutLoggedIn, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerAddressMutation updateCustomerAddress, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAddressMutation createCustomerAddress, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerMutation createCustomer)
        {
            _getCustomer = getCustomer ?? throw new global::System.ArgumentNullException(nameof(getCustomer));
            _getProductByHandle = getProductByHandle ?? throw new global::System.ArgumentNullException(nameof(getProductByHandle));
            _getProducts = getProducts ?? throw new global::System.ArgumentNullException(nameof(getProducts));
            _createCustomerAccessToken = createCustomerAccessToken ?? throw new global::System.ArgumentNullException(nameof(createCustomerAccessToken));
            _createCheckoutLoggedOut = createCheckoutLoggedOut ?? throw new global::System.ArgumentNullException(nameof(createCheckoutLoggedOut));
            _checkoutCustomerAssociateV2 = checkoutCustomerAssociateV2 ?? throw new global::System.ArgumentNullException(nameof(checkoutCustomerAssociateV2));
            _updateCustomer = updateCustomer ?? throw new global::System.ArgumentNullException(nameof(updateCustomer));
            _createCheckoutLoggedIn = createCheckoutLoggedIn ?? throw new global::System.ArgumentNullException(nameof(createCheckoutLoggedIn));
            _updateCustomerAddress = updateCustomerAddress ?? throw new global::System.ArgumentNullException(nameof(updateCustomerAddress));
            _createCustomerAddress = createCustomerAddress ?? throw new global::System.ArgumentNullException(nameof(createCustomerAddress));
            _createCustomer = createCustomer ?? throw new global::System.ArgumentNullException(nameof(createCustomer));
        }

        public static global::System.String ClientName => "ShopifyClient";
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetCustomerQuery GetCustomer => _getCustomer;
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandleQuery GetProductByHandle => _getProductByHandle;
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductsQuery GetProducts => _getProducts;
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAccessTokenMutation CreateCustomerAccessToken => _createCustomerAccessToken;
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedOutMutation CreateCheckoutLoggedOut => _createCheckoutLoggedOut;
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICheckoutCustomerAssociateV2Mutation CheckoutCustomerAssociateV2 => _checkoutCustomerAssociateV2;
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerMutation UpdateCustomer => _updateCustomer;
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedInMutation CreateCheckoutLoggedIn => _createCheckoutLoggedIn;
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerAddressMutation UpdateCustomerAddress => _updateCustomerAddress;
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAddressMutation CreateCustomerAddress => _createCustomerAddress;
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerMutation CreateCustomer => _createCustomer;
    }

    /// <summary>
    /// Represents the ShopifyClient GraphQL client
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IShopifyClient
    {
        global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetCustomerQuery GetCustomer { get; }

        global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandleQuery GetProductByHandle { get; }

        global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductsQuery GetProducts { get; }

        global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAccessTokenMutation CreateCustomerAccessToken { get; }

        global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedOutMutation CreateCheckoutLoggedOut { get; }

        global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICheckoutCustomerAssociateV2Mutation CheckoutCustomerAssociateV2 { get; }

        global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerMutation UpdateCustomer { get; }

        global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedInMutation CreateCheckoutLoggedIn { get; }

        global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerAddressMutation UpdateCustomerAddress { get; }

        global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAddressMutation CreateCustomerAddress { get; }

        global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerMutation CreateCustomer { get; }
    }
}

namespace HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State
{
    ///<summary>A customer represents a customer account with the shop. Customer accounts store contact information for the customer, saving logged-in customers the trouble of having to provide it at every checkout.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CustomerEntity
    {
        public CustomerEntity(global::System.String id = default !, global::System.String? firstName = default !, global::System.String? lastName = default !, global::System.Boolean acceptsMarketing = default !, global::System.String? email = default !, global::System.String? phone = default !, global::StrawberryShake.EntityId? defaultAddress = default !)
        {
            Id = id;
            FirstName = firstName;
            LastName = lastName;
            AcceptsMarketing = acceptsMarketing;
            Email = email;
            Phone = phone;
            DefaultAddress = defaultAddress;
        }

        ///<summary>A unique identifier for the customer.</summary>
        public global::System.String Id { get; }
        ///<summary>The customer’s first name.</summary>
        public global::System.String? FirstName { get; }
        ///<summary>The customer’s last name.</summary>
        public global::System.String? LastName { get; }
        ///<summary>Indicates whether the customer has consented to be sent marketing material via email.</summary>
        public global::System.Boolean AcceptsMarketing { get; }
        ///<summary>The customer’s email address.</summary>
        public global::System.String? Email { get; }
        ///<summary>The customer’s phone number.</summary>
        public global::System.String? Phone { get; }
        ///<summary>The customer’s default address.</summary>
        public global::StrawberryShake.EntityId? DefaultAddress { get; }
    }

    ///<summary>Represents a mailing address for customers and shipping.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class MailingAddressEntity
    {
        public MailingAddressEntity(global::System.String id = default !, global::System.String? address1 = default !, global::System.String? address2 = default !, global::System.String? city = default !, global::System.String? company = default !, global::System.String? country = default !, global::System.String? firstName = default !, global::System.String? lastName = default !, global::System.String? phone = default !, global::System.String? province = default !, global::System.String? zip = default !)
        {
            Id = id;
            Address1 = address1;
            Address2 = address2;
            City = city;
            Company = company;
            Country = country;
            FirstName = firstName;
            LastName = lastName;
            Phone = phone;
            Province = province;
            Zip = zip;
        }

        ///<summary>A globally-unique identifier.</summary>
        public global::System.String Id { get; }
        ///<summary>The first line of the address. Typically the street address or PO Box number.</summary>
        public global::System.String? Address1 { get; }
        ///<summary>The second line of the address. Typically the number of the apartment, suite, or unit.</summary>
        public global::System.String? Address2 { get; }
        ///<summary>The name of the city, district, village, or town.</summary>
        public global::System.String? City { get; }
        ///<summary>The name of the customer's company or organization.</summary>
        public global::System.String? Company { get; }
        ///<summary>The name of the country.</summary>
        public global::System.String? Country { get; }
        ///<summary>The first name of the customer.</summary>
        public global::System.String? FirstName { get; }
        ///<summary>The last name of the customer.</summary>
        public global::System.String? LastName { get; }
        ///<summary>A unique phone number for the customer.Formatted using E.164 standard. For example, _+16135551111_.</summary>
        public global::System.String? Phone { get; }
        ///<summary>The region of the address, such as the province, state, or district.</summary>
        public global::System.String? Province { get; }
        ///<summary>The zip or postal code of the address.</summary>
        public global::System.String? Zip { get; }
    }

    ///<summary>A product represents an individual item for sale in a Shopify store. Products are often physical, but they don't have to be.For example, a digital download (such as a movie, music or ebook file) also qualifies as a product, as do services (such as equipment rental, work for hire, customization of another product or an extended warranty).</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class ProductEntity
    {
        public ProductEntity(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductVariantConnectionData variants = default !, global::System.String handle = default !, global::System.String title = default !, global::System.String description = default !, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductPriceRangeData priceRange = default !, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageConnectionData images = default !, global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId> options = default !)
        {
            Variants = variants;
            Handle = handle;
            Title = title;
            Description = description;
            PriceRange = priceRange;
            Images = images;
            Options = options;
        }

        ///<summary>List of the product’s variants.</summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductVariantConnectionData Variants { get; }
        ///<summary>A human-friendly unique string for the Product automatically generated from its title.They are used by the Liquid templating language to refer to objects.</summary>
        public global::System.String Handle { get; }
        ///<summary>The product’s title.</summary>
        public global::System.String Title { get; }
        ///<summary>Stripped description of the product, single line with HTML tags removed.</summary>
        public global::System.String Description { get; }
        ///<summary>The price range.</summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductPriceRangeData PriceRange { get; }
        ///<summary>List of images associated with the product.</summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageConnectionData Images { get; }
        ///<summary>List of product options.</summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId> Options { get; }
    }

    ///<summary>Product property names like "Size", "Color", and "Material" that the customers can select.Variants are selected based on permutations of these options.255 characters limit each.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class ProductOptionEntity
    {
        public ProductOptionEntity(global::System.String name = default !, global::System.Collections.Generic.IReadOnlyList<global::System.String> values = default !)
        {
            Name = name;
            Values = values;
        }

        ///<summary>The product option’s name.</summary>
        public global::System.String Name { get; }
        ///<summary>The corresponding value to the product option name.</summary>
        public global::System.Collections.Generic.IReadOnlyList<global::System.String> Values { get; }
    }

    ///<summary>A product variant represents a different version of a product, such as differing sizes or differing colors.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class ProductVariantEntity
    {
        public ProductVariantEntity(global::System.Int32? quantityAvailable = default !, global::System.String title = default !, global::System.String id = default !)
        {
            QuantityAvailable = quantityAvailable;
            Title = title;
            Id = id;
        }

        ///<summary>The total sellable quantity of the variant for online sales channels.</summary>
        public global::System.Int32? QuantityAvailable { get; }
        ///<summary>The product variant’s title.</summary>
        public global::System.String Title { get; }
        ///<summary>A globally-unique identifier.</summary>
        public global::System.String Id { get; }
    }

    ///<summary>Represents an image resource.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class ImageEntity
    {
        public ImageEntity(global::System.Uri url = default !)
        {
            Url = url;
        }

        ///<summary>The location of the image as a URL.If no transform options are specified, then the original image will be preserved including any pre-applied transforms.All transformation options are considered "best-effort". Any transformation that the original image type doesn't support will be ignored.If you need multiple variations of the same image, then you can use [GraphQL aliases](https://graphql.org/learn/queries/#aliases).</summary>
        public global::System.Uri Url { get; }
    }

    ///<summary>A container for all the information required to checkout items and pay.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CheckoutEntity
    {
        public CheckoutEntity(global::System.String id = default !, global::System.Uri webUrl = default !)
        {
            Id = id;
            WebUrl = webUrl;
        }

        ///<summary>A globally-unique identifier.</summary>
        public global::System.String Id { get; }
        ///<summary>The url pointing to the checkout accessible from the web.</summary>
        public global::System.Uri WebUrl { get; }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetCustomerResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.GetCustomerResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerEntity, GetCustomer_Customer_Customer> _getCustomer_Customer_CustomerFromCustomerEntityMapper;
        public GetCustomerResultFactory(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerEntity, GetCustomer_Customer_Customer> getCustomer_Customer_CustomerFromCustomerEntityMapper)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _getCustomer_Customer_CustomerFromCustomerEntityMapper = getCustomer_Customer_CustomerFromCustomerEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getCustomer_Customer_CustomerFromCustomerEntityMapper));
        }

        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetCustomerResult);

        public GetCustomerResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            if (dataInfo is GetCustomerResultInfo info)
            {
                return new GetCustomerResult(MapIGetCustomer_Customer(info.Customer, snapshot));
            }

            throw new global::System.ArgumentException("GetCustomerResultInfo expected.");
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetCustomer_Customer? MapIGetCustomer_Customer(global::StrawberryShake.EntityId? entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId is null)
            {
                return null;
            }

            if (entityId.Value.Name.Equals("Customer", global::System.StringComparison.Ordinal))
            {
                return _getCustomer_Customer_CustomerFromCustomerEntityMapper.Map(snapshot.GetEntity<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerEntity>(entityId.Value) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }

        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)
        {
            return Create(dataInfo, snapshot);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetCustomerResultInfo : global::StrawberryShake.IOperationResultDataInfo
    {
        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;
        private readonly global::System.UInt64 _version;
        public GetCustomerResultInfo(global::StrawberryShake.EntityId? customer, global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds, global::System.UInt64 version)
        {
            Customer = customer;
            _entityIds = entityIds ?? throw new global::System.ArgumentNullException(nameof(entityIds));
            _version = version;
        }

        /// <summary>
        /// Find a customer by its access token.
        /// </summary>
        public global::StrawberryShake.EntityId? Customer { get; }
        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;
        public global::System.UInt64 Version => _version;

        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)
        {
            return new GetCustomerResultInfo(Customer, _entityIds, version);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetCustomer_Customer_CustomerFromCustomerEntityMapper : global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerEntity, GetCustomer_Customer_Customer>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity, GetCustomer_Customer_DefaultAddress_MailingAddress> _getCustomer_Customer_DefaultAddress_MailingAddressFromMailingAddressEntityMapper;
        public GetCustomer_Customer_CustomerFromCustomerEntityMapper(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity, GetCustomer_Customer_DefaultAddress_MailingAddress> getCustomer_Customer_DefaultAddress_MailingAddressFromMailingAddressEntityMapper)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _getCustomer_Customer_DefaultAddress_MailingAddressFromMailingAddressEntityMapper = getCustomer_Customer_DefaultAddress_MailingAddressFromMailingAddressEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getCustomer_Customer_DefaultAddress_MailingAddressFromMailingAddressEntityMapper));
        }

        public GetCustomer_Customer_Customer Map(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new GetCustomer_Customer_Customer(entity.Id, entity.FirstName, entity.LastName, entity.AcceptsMarketing, entity.Email, entity.Phone, MapIGetCustomer_Customer_DefaultAddress(entity.DefaultAddress, snapshot));
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetCustomer_Customer_DefaultAddress? MapIGetCustomer_Customer_DefaultAddress(global::StrawberryShake.EntityId? entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId is null)
            {
                return null;
            }

            if (entityId.Value.Name.Equals("MailingAddress", global::System.StringComparison.Ordinal))
            {
                return _getCustomer_Customer_DefaultAddress_MailingAddressFromMailingAddressEntityMapper.Map(snapshot.GetEntity<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity>(entityId.Value) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetCustomer_Customer_DefaultAddress_MailingAddressFromMailingAddressEntityMapper : global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity, GetCustomer_Customer_DefaultAddress_MailingAddress>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public GetCustomer_Customer_DefaultAddress_MailingAddressFromMailingAddressEntityMapper(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        public GetCustomer_Customer_DefaultAddress_MailingAddress Map(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new GetCustomer_Customer_DefaultAddress_MailingAddress(entity.Id, entity.Address1, entity.Address2, entity.City, entity.Company, entity.Country, entity.FirstName, entity.LastName, entity.Phone, entity.Province, entity.Zip);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetProductByHandleResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.GetProductByHandleResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductEntity, GetProductByHandle_Product_Product> _getProductByHandle_Product_ProductFromProductEntityMapper;
        public GetProductByHandleResultFactory(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductEntity, GetProductByHandle_Product_Product> getProductByHandle_Product_ProductFromProductEntityMapper)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _getProductByHandle_Product_ProductFromProductEntityMapper = getProductByHandle_Product_ProductFromProductEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getProductByHandle_Product_ProductFromProductEntityMapper));
        }

        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandleResult);

        public GetProductByHandleResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            if (dataInfo is GetProductByHandleResultInfo info)
            {
                return new GetProductByHandleResult(MapIGetProductByHandle_Product(info.Product, snapshot));
            }

            throw new global::System.ArgumentException("GetProductByHandleResultInfo expected.");
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product? MapIGetProductByHandle_Product(global::StrawberryShake.EntityId? entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId is null)
            {
                return null;
            }

            if (entityId.Value.Name.Equals("Product", global::System.StringComparison.Ordinal))
            {
                return _getProductByHandle_Product_ProductFromProductEntityMapper.Map(snapshot.GetEntity<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductEntity>(entityId.Value) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }

        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)
        {
            return Create(dataInfo, snapshot);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetProductByHandleResultInfo : global::StrawberryShake.IOperationResultDataInfo
    {
        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;
        private readonly global::System.UInt64 _version;
        public GetProductByHandleResultInfo(global::StrawberryShake.EntityId? product, global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds, global::System.UInt64 version)
        {
            Product = product;
            _entityIds = entityIds ?? throw new global::System.ArgumentNullException(nameof(entityIds));
            _version = version;
        }

        /// <summary>
        /// Fetch a specific `Product` by one of its unique attributes.
        /// </summary>
        public global::StrawberryShake.EntityId? Product { get; }
        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;
        public global::System.UInt64 Version => _version;

        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)
        {
            return new GetProductByHandleResultInfo(Product, _entityIds, version);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetProductByHandle_Product_ProductFromProductEntityMapper : global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductEntity, GetProductByHandle_Product_Product>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductVariantEntity, GetProductByHandle_Product_Variants_Edges_Node_ProductVariant> _getProductByHandle_Product_Variants_Edges_Node_ProductVariantFromProductVariantEntityMapper;
        private readonly global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEntity, GetProductByHandle_Product_Images_Edges_Node_Image> _getProductByHandle_Product_Images_Edges_Node_ImageFromImageEntityMapper;
        private readonly global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductOptionEntity, GetProductByHandle_Product_Options_ProductOption> _getProductByHandle_Product_Options_ProductOptionFromProductOptionEntityMapper;
        public GetProductByHandle_Product_ProductFromProductEntityMapper(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductVariantEntity, GetProductByHandle_Product_Variants_Edges_Node_ProductVariant> getProductByHandle_Product_Variants_Edges_Node_ProductVariantFromProductVariantEntityMapper, global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEntity, GetProductByHandle_Product_Images_Edges_Node_Image> getProductByHandle_Product_Images_Edges_Node_ImageFromImageEntityMapper, global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductOptionEntity, GetProductByHandle_Product_Options_ProductOption> getProductByHandle_Product_Options_ProductOptionFromProductOptionEntityMapper)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _getProductByHandle_Product_Variants_Edges_Node_ProductVariantFromProductVariantEntityMapper = getProductByHandle_Product_Variants_Edges_Node_ProductVariantFromProductVariantEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getProductByHandle_Product_Variants_Edges_Node_ProductVariantFromProductVariantEntityMapper));
            _getProductByHandle_Product_Images_Edges_Node_ImageFromImageEntityMapper = getProductByHandle_Product_Images_Edges_Node_ImageFromImageEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getProductByHandle_Product_Images_Edges_Node_ImageFromImageEntityMapper));
            _getProductByHandle_Product_Options_ProductOptionFromProductOptionEntityMapper = getProductByHandle_Product_Options_ProductOptionFromProductOptionEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getProductByHandle_Product_Options_ProductOptionFromProductOptionEntityMapper));
        }

        public GetProductByHandle_Product_Product Map(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new GetProductByHandle_Product_Product(MapNonNullableIGetProductByHandle_Product_Variants(entity.Variants, snapshot), entity.Handle, entity.Title, entity.Description, MapNonNullableIGetProductByHandle_Product_PriceRange(entity.PriceRange, snapshot), MapNonNullableIGetProductByHandle_Product_Images(entity.Images, snapshot), MapNonNullableIGetProductByHandle_Product_OptionsNonNullableArray(entity.Options, snapshot));
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_Variants MapNonNullableIGetProductByHandle_Product_Variants(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductVariantConnectionData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetProductByHandle_Product_Variants returnValue = default !;
            if (data.__typename.Equals("ProductVariantConnection", global::System.StringComparison.Ordinal))
            {
                returnValue = new GetProductByHandle_Product_Variants_ProductVariantConnection(MapNonNullableIGetProductByHandle_Product_Variants_EdgesNonNullableArray(data.Edges ?? throw new global::System.ArgumentNullException(), snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_Variants_Edges> MapNonNullableIGetProductByHandle_Product_Variants_EdgesNonNullableArray(global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductVariantEdgeData>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (list is null)
            {
                throw new global::System.ArgumentNullException();
            }

            var productVariantEdges = new global::System.Collections.Generic.List<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_Variants_Edges>();
            foreach (global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductVariantEdgeData child in list)
            {
                productVariantEdges.Add(MapNonNullableIGetProductByHandle_Product_Variants_Edges(child, snapshot));
            }

            return productVariantEdges;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_Variants_Edges MapNonNullableIGetProductByHandle_Product_Variants_Edges(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductVariantEdgeData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetProductByHandle_Product_Variants_Edges returnValue = default !;
            if (data.__typename.Equals("ProductVariantEdge", global::System.StringComparison.Ordinal))
            {
                returnValue = new GetProductByHandle_Product_Variants_Edges_ProductVariantEdge(MapNonNullableIGetProductByHandle_Product_Variants_Edges_Node(data.Node ?? throw new global::System.ArgumentNullException(), snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_Variants_Edges_Node MapNonNullableIGetProductByHandle_Product_Variants_Edges_Node(global::StrawberryShake.EntityId entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId.Name.Equals("ProductVariant", global::System.StringComparison.Ordinal))
            {
                return _getProductByHandle_Product_Variants_Edges_Node_ProductVariantFromProductVariantEntityMapper.Map(snapshot.GetEntity<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductVariantEntity>(entityId) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_PriceRange MapNonNullableIGetProductByHandle_Product_PriceRange(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductPriceRangeData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetProductByHandle_Product_PriceRange returnValue = default !;
            if (data.__typename.Equals("ProductPriceRange", global::System.StringComparison.Ordinal))
            {
                returnValue = new GetProductByHandle_Product_PriceRange_ProductPriceRange(MapNonNullableIGetProductByHandle_Product_PriceRange_MinVariantPrice(data.MinVariantPrice ?? throw new global::System.ArgumentNullException(), snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_PriceRange_MinVariantPrice MapNonNullableIGetProductByHandle_Product_PriceRange_MinVariantPrice(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MoneyV2Data data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetProductByHandle_Product_PriceRange_MinVariantPrice returnValue = default !;
            if (data.__typename.Equals("MoneyV2", global::System.StringComparison.Ordinal))
            {
                returnValue = new GetProductByHandle_Product_PriceRange_MinVariantPrice_MoneyV2(data.Amount ?? throw new global::System.ArgumentNullException());
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_Images MapNonNullableIGetProductByHandle_Product_Images(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageConnectionData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetProductByHandle_Product_Images returnValue = default !;
            if (data.__typename.Equals("ImageConnection", global::System.StringComparison.Ordinal))
            {
                returnValue = new GetProductByHandle_Product_Images_ImageConnection(MapNonNullableIGetProductByHandle_Product_Images_EdgesNonNullableArray(data.Edges ?? throw new global::System.ArgumentNullException(), snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_Images_Edges> MapNonNullableIGetProductByHandle_Product_Images_EdgesNonNullableArray(global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEdgeData>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (list is null)
            {
                throw new global::System.ArgumentNullException();
            }

            var imageEdges = new global::System.Collections.Generic.List<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_Images_Edges>();
            foreach (global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEdgeData child in list)
            {
                imageEdges.Add(MapNonNullableIGetProductByHandle_Product_Images_Edges(child, snapshot));
            }

            return imageEdges;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_Images_Edges MapNonNullableIGetProductByHandle_Product_Images_Edges(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEdgeData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetProductByHandle_Product_Images_Edges returnValue = default !;
            if (data.__typename.Equals("ImageEdge", global::System.StringComparison.Ordinal))
            {
                returnValue = new GetProductByHandle_Product_Images_Edges_ImageEdge(MapNonNullableIGetProductByHandle_Product_Images_Edges_Node(data.Node ?? throw new global::System.ArgumentNullException(), snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_Images_Edges_Node MapNonNullableIGetProductByHandle_Product_Images_Edges_Node(global::StrawberryShake.EntityId entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId.Name.Equals("Image", global::System.StringComparison.Ordinal))
            {
                return _getProductByHandle_Product_Images_Edges_Node_ImageFromImageEntityMapper.Map(snapshot.GetEntity<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEntity>(entityId) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_Options> MapNonNullableIGetProductByHandle_Product_OptionsNonNullableArray(global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (list is null)
            {
                throw new global::System.ArgumentNullException();
            }

            var productOptions = new global::System.Collections.Generic.List<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_Options>();
            foreach (global::StrawberryShake.EntityId child in list)
            {
                productOptions.Add(MapNonNullableIGetProductByHandle_Product_Options(child, snapshot));
            }

            return productOptions;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandle_Product_Options MapNonNullableIGetProductByHandle_Product_Options(global::StrawberryShake.EntityId entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId.Name.Equals("ProductOption", global::System.StringComparison.Ordinal))
            {
                return _getProductByHandle_Product_Options_ProductOptionFromProductOptionEntityMapper.Map(snapshot.GetEntity<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductOptionEntity>(entityId) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetProductByHandle_Product_Options_ProductOptionFromProductOptionEntityMapper : global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductOptionEntity, GetProductByHandle_Product_Options_ProductOption>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public GetProductByHandle_Product_Options_ProductOptionFromProductOptionEntityMapper(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        public GetProductByHandle_Product_Options_ProductOption Map(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductOptionEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new GetProductByHandle_Product_Options_ProductOption(entity.Name, entity.Values);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetProductByHandle_Product_Variants_Edges_Node_ProductVariantFromProductVariantEntityMapper : global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductVariantEntity, GetProductByHandle_Product_Variants_Edges_Node_ProductVariant>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public GetProductByHandle_Product_Variants_Edges_Node_ProductVariantFromProductVariantEntityMapper(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        public GetProductByHandle_Product_Variants_Edges_Node_ProductVariant Map(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductVariantEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new GetProductByHandle_Product_Variants_Edges_Node_ProductVariant(entity.QuantityAvailable, entity.Title, entity.Id);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetProductByHandle_Product_Images_Edges_Node_ImageFromImageEntityMapper : global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEntity, GetProductByHandle_Product_Images_Edges_Node_Image>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public GetProductByHandle_Product_Images_Edges_Node_ImageFromImageEntityMapper(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        public GetProductByHandle_Product_Images_Edges_Node_Image Map(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new GetProductByHandle_Product_Images_Edges_Node_Image(entity.Url);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetProductsResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.GetProductsResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductEntity, GetProducts_Products_Edges_Node_Product> _getProducts_Products_Edges_Node_ProductFromProductEntityMapper;
        private readonly global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEntity, GetProducts_Products_Edges_Node_Images_Edges_Node_Image> _getProducts_Products_Edges_Node_Images_Edges_Node_ImageFromImageEntityMapper;
        public GetProductsResultFactory(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductEntity, GetProducts_Products_Edges_Node_Product> getProducts_Products_Edges_Node_ProductFromProductEntityMapper, global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEntity, GetProducts_Products_Edges_Node_Images_Edges_Node_Image> getProducts_Products_Edges_Node_Images_Edges_Node_ImageFromImageEntityMapper)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _getProducts_Products_Edges_Node_ProductFromProductEntityMapper = getProducts_Products_Edges_Node_ProductFromProductEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getProducts_Products_Edges_Node_ProductFromProductEntityMapper));
            _getProducts_Products_Edges_Node_Images_Edges_Node_ImageFromImageEntityMapper = getProducts_Products_Edges_Node_Images_Edges_Node_ImageFromImageEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getProducts_Products_Edges_Node_Images_Edges_Node_ImageFromImageEntityMapper));
        }

        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductsResult);

        public GetProductsResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            if (dataInfo is GetProductsResultInfo info)
            {
                return new GetProductsResult(MapNonNullableIGetProducts_Products(info.Products, snapshot));
            }

            throw new global::System.ArgumentException("GetProductsResultInfo expected.");
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products MapNonNullableIGetProducts_Products(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductConnectionData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetProducts_Products returnValue = default !;
            if (data.__typename.Equals("ProductConnection", global::System.StringComparison.Ordinal))
            {
                returnValue = new GetProducts_Products_ProductConnection(MapNonNullableIGetProducts_Products_EdgesNonNullableArray(data.Edges ?? throw new global::System.ArgumentNullException(), snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges> MapNonNullableIGetProducts_Products_EdgesNonNullableArray(global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductEdgeData>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (list is null)
            {
                throw new global::System.ArgumentNullException();
            }

            var productEdges = new global::System.Collections.Generic.List<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges>();
            foreach (global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductEdgeData child in list)
            {
                productEdges.Add(MapNonNullableIGetProducts_Products_Edges(child, snapshot));
            }

            return productEdges;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges MapNonNullableIGetProducts_Products_Edges(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductEdgeData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetProducts_Products_Edges returnValue = default !;
            if (data.__typename.Equals("ProductEdge", global::System.StringComparison.Ordinal))
            {
                returnValue = new GetProducts_Products_Edges_ProductEdge(MapNonNullableIGetProducts_Products_Edges_Node(data.Node ?? throw new global::System.ArgumentNullException(), snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges_Node MapNonNullableIGetProducts_Products_Edges_Node(global::StrawberryShake.EntityId entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId.Name.Equals("Product", global::System.StringComparison.Ordinal))
            {
                return _getProducts_Products_Edges_Node_ProductFromProductEntityMapper.Map(snapshot.GetEntity<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductEntity>(entityId) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges_Node_PriceRange MapNonNullableIGetProducts_Products_Edges_Node_PriceRange(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductPriceRangeData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetProducts_Products_Edges_Node_PriceRange returnValue = default !;
            if (data.__typename.Equals("ProductPriceRange", global::System.StringComparison.Ordinal))
            {
                returnValue = new GetProducts_Products_Edges_Node_PriceRange_ProductPriceRange(MapNonNullableIGetProducts_Products_Edges_Node_PriceRange_MinVariantPrice(data.MinVariantPrice ?? throw new global::System.ArgumentNullException(), snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges_Node_PriceRange_MinVariantPrice MapNonNullableIGetProducts_Products_Edges_Node_PriceRange_MinVariantPrice(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MoneyV2Data data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetProducts_Products_Edges_Node_PriceRange_MinVariantPrice returnValue = default !;
            if (data.__typename.Equals("MoneyV2", global::System.StringComparison.Ordinal))
            {
                returnValue = new GetProducts_Products_Edges_Node_PriceRange_MinVariantPrice_MoneyV2(data.Amount ?? throw new global::System.ArgumentNullException());
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges_Node_Images MapNonNullableIGetProducts_Products_Edges_Node_Images(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageConnectionData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetProducts_Products_Edges_Node_Images returnValue = default !;
            if (data.__typename.Equals("ImageConnection", global::System.StringComparison.Ordinal))
            {
                returnValue = new GetProducts_Products_Edges_Node_Images_ImageConnection(MapNonNullableIGetProducts_Products_Edges_Node_Images_EdgesNonNullableArray(data.Edges ?? throw new global::System.ArgumentNullException(), snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges_Node_Images_Edges> MapNonNullableIGetProducts_Products_Edges_Node_Images_EdgesNonNullableArray(global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEdgeData>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (list is null)
            {
                throw new global::System.ArgumentNullException();
            }

            var imageEdges = new global::System.Collections.Generic.List<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges_Node_Images_Edges>();
            foreach (global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEdgeData child in list)
            {
                imageEdges.Add(MapNonNullableIGetProducts_Products_Edges_Node_Images_Edges(child, snapshot));
            }

            return imageEdges;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges_Node_Images_Edges MapNonNullableIGetProducts_Products_Edges_Node_Images_Edges(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEdgeData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetProducts_Products_Edges_Node_Images_Edges returnValue = default !;
            if (data.__typename.Equals("ImageEdge", global::System.StringComparison.Ordinal))
            {
                returnValue = new GetProducts_Products_Edges_Node_Images_Edges_ImageEdge(MapNonNullableIGetProducts_Products_Edges_Node_Images_Edges_Node(data.Node ?? throw new global::System.ArgumentNullException(), snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges_Node_Images_Edges_Node MapNonNullableIGetProducts_Products_Edges_Node_Images_Edges_Node(global::StrawberryShake.EntityId entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId.Name.Equals("Image", global::System.StringComparison.Ordinal))
            {
                return _getProducts_Products_Edges_Node_Images_Edges_Node_ImageFromImageEntityMapper.Map(snapshot.GetEntity<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEntity>(entityId) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }

        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)
        {
            return Create(dataInfo, snapshot);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetProductsResultInfo : global::StrawberryShake.IOperationResultDataInfo
    {
        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;
        private readonly global::System.UInt64 _version;
        public GetProductsResultInfo(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductConnectionData products, global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds, global::System.UInt64 version)
        {
            Products = products;
            _entityIds = entityIds ?? throw new global::System.ArgumentNullException(nameof(entityIds));
            _version = version;
        }

        /// <summary>
        /// List of the shop’s products.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductConnectionData Products { get; }
        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;
        public global::System.UInt64 Version => _version;

        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)
        {
            return new GetProductsResultInfo(Products, _entityIds, version);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetProducts_Products_Edges_Node_ProductFromProductEntityMapper : global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductEntity, GetProducts_Products_Edges_Node_Product>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEntity, GetProducts_Products_Edges_Node_Images_Edges_Node_Image> _getProducts_Products_Edges_Node_Images_Edges_Node_ImageFromImageEntityMapper;
        public GetProducts_Products_Edges_Node_ProductFromProductEntityMapper(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEntity, GetProducts_Products_Edges_Node_Images_Edges_Node_Image> getProducts_Products_Edges_Node_Images_Edges_Node_ImageFromImageEntityMapper)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _getProducts_Products_Edges_Node_Images_Edges_Node_ImageFromImageEntityMapper = getProducts_Products_Edges_Node_Images_Edges_Node_ImageFromImageEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getProducts_Products_Edges_Node_Images_Edges_Node_ImageFromImageEntityMapper));
        }

        public GetProducts_Products_Edges_Node_Product Map(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new GetProducts_Products_Edges_Node_Product(entity.Handle, entity.Title, MapNonNullableIGetProducts_Products_Edges_Node_PriceRange(entity.PriceRange, snapshot), MapNonNullableIGetProducts_Products_Edges_Node_Images(entity.Images, snapshot));
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges_Node_PriceRange MapNonNullableIGetProducts_Products_Edges_Node_PriceRange(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductPriceRangeData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetProducts_Products_Edges_Node_PriceRange returnValue = default !;
            if (data.__typename.Equals("ProductPriceRange", global::System.StringComparison.Ordinal))
            {
                returnValue = new GetProducts_Products_Edges_Node_PriceRange_ProductPriceRange(MapNonNullableIGetProducts_Products_Edges_Node_PriceRange_MinVariantPrice(data.MinVariantPrice ?? throw new global::System.ArgumentNullException(), snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges_Node_PriceRange_MinVariantPrice MapNonNullableIGetProducts_Products_Edges_Node_PriceRange_MinVariantPrice(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MoneyV2Data data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetProducts_Products_Edges_Node_PriceRange_MinVariantPrice returnValue = default !;
            if (data.__typename.Equals("MoneyV2", global::System.StringComparison.Ordinal))
            {
                returnValue = new GetProducts_Products_Edges_Node_PriceRange_MinVariantPrice_MoneyV2(data.Amount ?? throw new global::System.ArgumentNullException());
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges_Node_Images MapNonNullableIGetProducts_Products_Edges_Node_Images(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageConnectionData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetProducts_Products_Edges_Node_Images returnValue = default !;
            if (data.__typename.Equals("ImageConnection", global::System.StringComparison.Ordinal))
            {
                returnValue = new GetProducts_Products_Edges_Node_Images_ImageConnection(MapNonNullableIGetProducts_Products_Edges_Node_Images_EdgesNonNullableArray(data.Edges ?? throw new global::System.ArgumentNullException(), snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges_Node_Images_Edges> MapNonNullableIGetProducts_Products_Edges_Node_Images_EdgesNonNullableArray(global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEdgeData>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (list is null)
            {
                throw new global::System.ArgumentNullException();
            }

            var imageEdges = new global::System.Collections.Generic.List<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges_Node_Images_Edges>();
            foreach (global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEdgeData child in list)
            {
                imageEdges.Add(MapNonNullableIGetProducts_Products_Edges_Node_Images_Edges(child, snapshot));
            }

            return imageEdges;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges_Node_Images_Edges MapNonNullableIGetProducts_Products_Edges_Node_Images_Edges(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEdgeData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetProducts_Products_Edges_Node_Images_Edges returnValue = default !;
            if (data.__typename.Equals("ImageEdge", global::System.StringComparison.Ordinal))
            {
                returnValue = new GetProducts_Products_Edges_Node_Images_Edges_ImageEdge(MapNonNullableIGetProducts_Products_Edges_Node_Images_Edges_Node(data.Node ?? throw new global::System.ArgumentNullException(), snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProducts_Products_Edges_Node_Images_Edges_Node MapNonNullableIGetProducts_Products_Edges_Node_Images_Edges_Node(global::StrawberryShake.EntityId entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId.Name.Equals("Image", global::System.StringComparison.Ordinal))
            {
                return _getProducts_Products_Edges_Node_Images_Edges_Node_ImageFromImageEntityMapper.Map(snapshot.GetEntity<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEntity>(entityId) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetProducts_Products_Edges_Node_Images_Edges_Node_ImageFromImageEntityMapper : global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEntity, GetProducts_Products_Edges_Node_Images_Edges_Node_Image>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public GetProducts_Products_Edges_Node_Images_Edges_Node_ImageFromImageEntityMapper(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        public GetProducts_Products_Edges_Node_Images_Edges_Node_Image Map(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new GetProducts_Products_Edges_Node_Images_Edges_Node_Image(entity.Url);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCustomerAccessTokenResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CreateCustomerAccessTokenResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public CreateCustomerAccessTokenResultFactory(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAccessTokenResult);

        public CreateCustomerAccessTokenResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            if (dataInfo is CreateCustomerAccessTokenResultInfo info)
            {
                return new CreateCustomerAccessTokenResult(MapICreateCustomerAccessToken_CustomerAccessTokenCreate(info.CustomerAccessTokenCreate, snapshot));
            }

            throw new global::System.ArgumentException("CreateCustomerAccessTokenResultInfo expected.");
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAccessToken_CustomerAccessTokenCreate? MapICreateCustomerAccessToken_CustomerAccessTokenCreate(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerAccessTokenCreatePayloadData? data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (data is null)
            {
                return null;
            }

            ICreateCustomerAccessToken_CustomerAccessTokenCreate returnValue = default !;
            if (data?.__typename.Equals("CustomerAccessTokenCreatePayload", global::System.StringComparison.Ordinal) ?? false)
            {
                returnValue = new CreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerAccessTokenCreatePayload(MapICreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerAccessToken(data.CustomerAccessToken, snapshot), MapNonNullableICreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerUserErrorsNonNullableArray(data.CustomerUserErrors ?? throw new global::System.ArgumentNullException(), snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerAccessToken? MapICreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerAccessToken(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerAccessTokenData? data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (data is null)
            {
                return null;
            }

            ICreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerAccessToken returnValue = default !;
            if (data?.__typename.Equals("CustomerAccessToken", global::System.StringComparison.Ordinal) ?? false)
            {
                returnValue = new CreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerAccessToken_CustomerAccessToken(data.AccessToken ?? throw new global::System.ArgumentNullException(), data.ExpiresAt ?? throw new global::System.ArgumentNullException());
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerUserErrors> MapNonNullableICreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerUserErrorsNonNullableArray(global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (list is null)
            {
                throw new global::System.ArgumentNullException();
            }

            var customerUserErrors = new global::System.Collections.Generic.List<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerUserErrors>();
            foreach (global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData child in list)
            {
                customerUserErrors.Add(MapNonNullableICreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerUserErrors(child, snapshot));
            }

            return customerUserErrors;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerUserErrors MapNonNullableICreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerUserErrors(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            ICreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerUserErrors returnValue = default !;
            if (data.__typename.Equals("CustomerUserError", global::System.StringComparison.Ordinal))
            {
                returnValue = new CreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerUserErrors_CustomerUserError(data.Code, data.Field, data.Message ?? throw new global::System.ArgumentNullException());
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)
        {
            return Create(dataInfo, snapshot);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCustomerAccessTokenResultInfo : global::StrawberryShake.IOperationResultDataInfo
    {
        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;
        private readonly global::System.UInt64 _version;
        public CreateCustomerAccessTokenResultInfo(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerAccessTokenCreatePayloadData? customerAccessTokenCreate, global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds, global::System.UInt64 version)
        {
            CustomerAccessTokenCreate = customerAccessTokenCreate;
            _entityIds = entityIds ?? throw new global::System.ArgumentNullException(nameof(entityIds));
            _version = version;
        }

        /// <summary>
        /// Creates a customer access token.
        /// The customer access token is required to modify the customer object in any way.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerAccessTokenCreatePayloadData? CustomerAccessTokenCreate { get; }
        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;
        public global::System.UInt64 Version => _version;

        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)
        {
            return new CreateCustomerAccessTokenResultInfo(CustomerAccessTokenCreate, _entityIds, version);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCheckoutLoggedOutResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CreateCheckoutLoggedOutResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutEntity, CreateCheckoutLoggedOut_CheckoutCreate_Checkout_Checkout> _createCheckoutLoggedOut_CheckoutCreate_Checkout_CheckoutFromCheckoutEntityMapper;
        public CreateCheckoutLoggedOutResultFactory(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutEntity, CreateCheckoutLoggedOut_CheckoutCreate_Checkout_Checkout> createCheckoutLoggedOut_CheckoutCreate_Checkout_CheckoutFromCheckoutEntityMapper)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _createCheckoutLoggedOut_CheckoutCreate_Checkout_CheckoutFromCheckoutEntityMapper = createCheckoutLoggedOut_CheckoutCreate_Checkout_CheckoutFromCheckoutEntityMapper ?? throw new global::System.ArgumentNullException(nameof(createCheckoutLoggedOut_CheckoutCreate_Checkout_CheckoutFromCheckoutEntityMapper));
        }

        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedOutResult);

        public CreateCheckoutLoggedOutResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            if (dataInfo is CreateCheckoutLoggedOutResultInfo info)
            {
                return new CreateCheckoutLoggedOutResult(MapICreateCheckoutLoggedOut_CheckoutCreate(info.CheckoutCreate, snapshot));
            }

            throw new global::System.ArgumentException("CreateCheckoutLoggedOutResultInfo expected.");
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedOut_CheckoutCreate? MapICreateCheckoutLoggedOut_CheckoutCreate(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutCreatePayloadData? data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (data is null)
            {
                return null;
            }

            ICreateCheckoutLoggedOut_CheckoutCreate returnValue = default !;
            if (data?.__typename.Equals("CheckoutCreatePayload", global::System.StringComparison.Ordinal) ?? false)
            {
                returnValue = new CreateCheckoutLoggedOut_CheckoutCreate_CheckoutCreatePayload(MapICreateCheckoutLoggedOut_CheckoutCreate_Checkout(data.Checkout, snapshot), MapNonNullableICreateCheckoutLoggedOut_CheckoutCreate_CheckoutUserErrorsNonNullableArray(data.CheckoutUserErrors ?? throw new global::System.ArgumentNullException(), snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedOut_CheckoutCreate_Checkout? MapICreateCheckoutLoggedOut_CheckoutCreate_Checkout(global::StrawberryShake.EntityId? entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId is null)
            {
                return null;
            }

            if (entityId.Value.Name.Equals("Checkout", global::System.StringComparison.Ordinal))
            {
                return _createCheckoutLoggedOut_CheckoutCreate_Checkout_CheckoutFromCheckoutEntityMapper.Map(snapshot.GetEntity<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutEntity>(entityId.Value) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedOut_CheckoutCreate_CheckoutUserErrors> MapNonNullableICreateCheckoutLoggedOut_CheckoutCreate_CheckoutUserErrorsNonNullableArray(global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutUserErrorData>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (list is null)
            {
                throw new global::System.ArgumentNullException();
            }

            var checkoutUserErrors = new global::System.Collections.Generic.List<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedOut_CheckoutCreate_CheckoutUserErrors>();
            foreach (global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutUserErrorData child in list)
            {
                checkoutUserErrors.Add(MapNonNullableICreateCheckoutLoggedOut_CheckoutCreate_CheckoutUserErrors(child, snapshot));
            }

            return checkoutUserErrors;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedOut_CheckoutCreate_CheckoutUserErrors MapNonNullableICreateCheckoutLoggedOut_CheckoutCreate_CheckoutUserErrors(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutUserErrorData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            ICreateCheckoutLoggedOut_CheckoutCreate_CheckoutUserErrors returnValue = default !;
            if (data.__typename.Equals("CheckoutUserError", global::System.StringComparison.Ordinal))
            {
                returnValue = new CreateCheckoutLoggedOut_CheckoutCreate_CheckoutUserErrors_CheckoutUserError(data.Field, data.Message ?? throw new global::System.ArgumentNullException());
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)
        {
            return Create(dataInfo, snapshot);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCheckoutLoggedOutResultInfo : global::StrawberryShake.IOperationResultDataInfo
    {
        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;
        private readonly global::System.UInt64 _version;
        public CreateCheckoutLoggedOutResultInfo(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutCreatePayloadData? checkoutCreate, global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds, global::System.UInt64 version)
        {
            CheckoutCreate = checkoutCreate;
            _entityIds = entityIds ?? throw new global::System.ArgumentNullException(nameof(entityIds));
            _version = version;
        }

        /// <summary>
        /// Creates a new checkout.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutCreatePayloadData? CheckoutCreate { get; }
        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;
        public global::System.UInt64 Version => _version;

        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)
        {
            return new CreateCheckoutLoggedOutResultInfo(CheckoutCreate, _entityIds, version);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCheckoutLoggedOut_CheckoutCreate_Checkout_CheckoutFromCheckoutEntityMapper : global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutEntity, CreateCheckoutLoggedOut_CheckoutCreate_Checkout_Checkout>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public CreateCheckoutLoggedOut_CheckoutCreate_Checkout_CheckoutFromCheckoutEntityMapper(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        public CreateCheckoutLoggedOut_CheckoutCreate_Checkout_Checkout Map(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new CreateCheckoutLoggedOut_CheckoutCreate_Checkout_Checkout(entity.Id, entity.WebUrl);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CheckoutCustomerAssociateV2ResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CheckoutCustomerAssociateV2Result>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutEntity, CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Checkout_Checkout> _checkoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Checkout_CheckoutFromCheckoutEntityMapper;
        private readonly global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerEntity, CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Customer_Customer> _checkoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Customer_CustomerFromCustomerEntityMapper;
        public CheckoutCustomerAssociateV2ResultFactory(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutEntity, CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Checkout_Checkout> checkoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Checkout_CheckoutFromCheckoutEntityMapper, global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerEntity, CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Customer_Customer> checkoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Customer_CustomerFromCustomerEntityMapper)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _checkoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Checkout_CheckoutFromCheckoutEntityMapper = checkoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Checkout_CheckoutFromCheckoutEntityMapper ?? throw new global::System.ArgumentNullException(nameof(checkoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Checkout_CheckoutFromCheckoutEntityMapper));
            _checkoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Customer_CustomerFromCustomerEntityMapper = checkoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Customer_CustomerFromCustomerEntityMapper ?? throw new global::System.ArgumentNullException(nameof(checkoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Customer_CustomerFromCustomerEntityMapper));
        }

        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICheckoutCustomerAssociateV2Result);

        public CheckoutCustomerAssociateV2Result Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            if (dataInfo is CheckoutCustomerAssociateV2ResultInfo info)
            {
                return new CheckoutCustomerAssociateV2Result(MapICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2(info.CheckoutCustomerAssociateV2, snapshot));
            }

            throw new global::System.ArgumentException("CheckoutCustomerAssociateV2ResultInfo expected.");
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2? MapICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutCustomerAssociateV2PayloadData? data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (data is null)
            {
                return null;
            }

            ICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2 returnValue = default !;
            if (data?.__typename.Equals("CheckoutCustomerAssociateV2Payload", global::System.StringComparison.Ordinal) ?? false)
            {
                returnValue = new CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2Payload(MapICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Checkout(data.Checkout, snapshot), MapICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Customer(data.Customer, snapshot), MapNonNullableICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_UserErrorsNonNullableArray(data.UserErrors ?? throw new global::System.ArgumentNullException(), snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Checkout? MapICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Checkout(global::StrawberryShake.EntityId? entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId is null)
            {
                return null;
            }

            if (entityId.Value.Name.Equals("Checkout", global::System.StringComparison.Ordinal))
            {
                return _checkoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Checkout_CheckoutFromCheckoutEntityMapper.Map(snapshot.GetEntity<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutEntity>(entityId.Value) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Customer? MapICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Customer(global::StrawberryShake.EntityId? entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId is null)
            {
                return null;
            }

            if (entityId.Value.Name.Equals("Customer", global::System.StringComparison.Ordinal))
            {
                return _checkoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Customer_CustomerFromCustomerEntityMapper.Map(snapshot.GetEntity<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerEntity>(entityId.Value) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_UserErrors> MapNonNullableICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_UserErrorsNonNullableArray(global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.UserErrorData>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (list is null)
            {
                throw new global::System.ArgumentNullException();
            }

            var userErrors = new global::System.Collections.Generic.List<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_UserErrors>();
            foreach (global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.UserErrorData child in list)
            {
                userErrors.Add(MapNonNullableICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_UserErrors(child, snapshot));
            }

            return userErrors;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_UserErrors MapNonNullableICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_UserErrors(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.UserErrorData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            ICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_UserErrors returnValue = default !;
            if (data.__typename.Equals("UserError", global::System.StringComparison.Ordinal))
            {
                returnValue = new CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_UserErrors_UserError(data.Field, data.Message ?? throw new global::System.ArgumentNullException());
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)
        {
            return Create(dataInfo, snapshot);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CheckoutCustomerAssociateV2ResultInfo : global::StrawberryShake.IOperationResultDataInfo
    {
        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;
        private readonly global::System.UInt64 _version;
        public CheckoutCustomerAssociateV2ResultInfo(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutCustomerAssociateV2PayloadData? checkoutCustomerAssociateV2, global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds, global::System.UInt64 version)
        {
            CheckoutCustomerAssociateV2 = checkoutCustomerAssociateV2;
            _entityIds = entityIds ?? throw new global::System.ArgumentNullException(nameof(entityIds));
            _version = version;
        }

        /// <summary>
        /// Associates a customer to the checkout.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutCustomerAssociateV2PayloadData? CheckoutCustomerAssociateV2 { get; }
        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;
        public global::System.UInt64 Version => _version;

        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)
        {
            return new CheckoutCustomerAssociateV2ResultInfo(CheckoutCustomerAssociateV2, _entityIds, version);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Checkout_CheckoutFromCheckoutEntityMapper : global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutEntity, CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Checkout_Checkout>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Checkout_CheckoutFromCheckoutEntityMapper(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        public CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Checkout_Checkout Map(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Checkout_Checkout(entity.Id, entity.WebUrl);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Customer_CustomerFromCustomerEntityMapper : global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerEntity, CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Customer_Customer>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Customer_CustomerFromCustomerEntityMapper(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        public CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Customer_Customer Map(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Customer_Customer(entity.Id, entity.Email);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class UpdateCustomerResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.UpdateCustomerResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerEntity, UpdateCustomer_CustomerUpdate_Customer_Customer> _updateCustomer_CustomerUpdate_Customer_CustomerFromCustomerEntityMapper;
        private readonly global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity, UpdateCustomer_CustomerUpdate_Customer_DefaultAddress_MailingAddress> _updateCustomer_CustomerUpdate_Customer_DefaultAddress_MailingAddressFromMailingAddressEntityMapper;
        public UpdateCustomerResultFactory(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerEntity, UpdateCustomer_CustomerUpdate_Customer_Customer> updateCustomer_CustomerUpdate_Customer_CustomerFromCustomerEntityMapper, global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity, UpdateCustomer_CustomerUpdate_Customer_DefaultAddress_MailingAddress> updateCustomer_CustomerUpdate_Customer_DefaultAddress_MailingAddressFromMailingAddressEntityMapper)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _updateCustomer_CustomerUpdate_Customer_CustomerFromCustomerEntityMapper = updateCustomer_CustomerUpdate_Customer_CustomerFromCustomerEntityMapper ?? throw new global::System.ArgumentNullException(nameof(updateCustomer_CustomerUpdate_Customer_CustomerFromCustomerEntityMapper));
            _updateCustomer_CustomerUpdate_Customer_DefaultAddress_MailingAddressFromMailingAddressEntityMapper = updateCustomer_CustomerUpdate_Customer_DefaultAddress_MailingAddressFromMailingAddressEntityMapper ?? throw new global::System.ArgumentNullException(nameof(updateCustomer_CustomerUpdate_Customer_DefaultAddress_MailingAddressFromMailingAddressEntityMapper));
        }

        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerResult);

        public UpdateCustomerResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            if (dataInfo is UpdateCustomerResultInfo info)
            {
                return new UpdateCustomerResult(MapIUpdateCustomer_CustomerUpdate(info.CustomerUpdate, snapshot));
            }

            throw new global::System.ArgumentException("UpdateCustomerResultInfo expected.");
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomer_CustomerUpdate? MapIUpdateCustomer_CustomerUpdate(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUpdatePayloadData? data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (data is null)
            {
                return null;
            }

            IUpdateCustomer_CustomerUpdate returnValue = default !;
            if (data?.__typename.Equals("CustomerUpdatePayload", global::System.StringComparison.Ordinal) ?? false)
            {
                returnValue = new UpdateCustomer_CustomerUpdate_CustomerUpdatePayload(MapIUpdateCustomer_CustomerUpdate_Customer(data.Customer, snapshot), MapIUpdateCustomer_CustomerUpdate_CustomerAccessToken(data.CustomerAccessToken, snapshot), MapNonNullableIUpdateCustomer_CustomerUpdate_CustomerUserErrorsNonNullableArray(data.CustomerUserErrors ?? throw new global::System.ArgumentNullException(), snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomer_CustomerUpdate_Customer? MapIUpdateCustomer_CustomerUpdate_Customer(global::StrawberryShake.EntityId? entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId is null)
            {
                return null;
            }

            if (entityId.Value.Name.Equals("Customer", global::System.StringComparison.Ordinal))
            {
                return _updateCustomer_CustomerUpdate_Customer_CustomerFromCustomerEntityMapper.Map(snapshot.GetEntity<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerEntity>(entityId.Value) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomer_CustomerUpdate_Customer_DefaultAddress? MapIUpdateCustomer_CustomerUpdate_Customer_DefaultAddress(global::StrawberryShake.EntityId? entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId is null)
            {
                return null;
            }

            if (entityId.Value.Name.Equals("MailingAddress", global::System.StringComparison.Ordinal))
            {
                return _updateCustomer_CustomerUpdate_Customer_DefaultAddress_MailingAddressFromMailingAddressEntityMapper.Map(snapshot.GetEntity<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity>(entityId.Value) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomer_CustomerUpdate_CustomerAccessToken? MapIUpdateCustomer_CustomerUpdate_CustomerAccessToken(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerAccessTokenData? data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (data is null)
            {
                return null;
            }

            IUpdateCustomer_CustomerUpdate_CustomerAccessToken returnValue = default !;
            if (data?.__typename.Equals("CustomerAccessToken", global::System.StringComparison.Ordinal) ?? false)
            {
                returnValue = new UpdateCustomer_CustomerUpdate_CustomerAccessToken_CustomerAccessToken(data.AccessToken ?? throw new global::System.ArgumentNullException(), data.ExpiresAt ?? throw new global::System.ArgumentNullException());
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomer_CustomerUpdate_CustomerUserErrors> MapNonNullableIUpdateCustomer_CustomerUpdate_CustomerUserErrorsNonNullableArray(global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (list is null)
            {
                throw new global::System.ArgumentNullException();
            }

            var customerUserErrors = new global::System.Collections.Generic.List<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomer_CustomerUpdate_CustomerUserErrors>();
            foreach (global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData child in list)
            {
                customerUserErrors.Add(MapNonNullableIUpdateCustomer_CustomerUpdate_CustomerUserErrors(child, snapshot));
            }

            return customerUserErrors;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomer_CustomerUpdate_CustomerUserErrors MapNonNullableIUpdateCustomer_CustomerUpdate_CustomerUserErrors(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IUpdateCustomer_CustomerUpdate_CustomerUserErrors returnValue = default !;
            if (data.__typename.Equals("CustomerUserError", global::System.StringComparison.Ordinal))
            {
                returnValue = new UpdateCustomer_CustomerUpdate_CustomerUserErrors_CustomerUserError(data.Code, data.Field, data.Message ?? throw new global::System.ArgumentNullException());
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)
        {
            return Create(dataInfo, snapshot);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class UpdateCustomerResultInfo : global::StrawberryShake.IOperationResultDataInfo
    {
        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;
        private readonly global::System.UInt64 _version;
        public UpdateCustomerResultInfo(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUpdatePayloadData? customerUpdate, global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds, global::System.UInt64 version)
        {
            CustomerUpdate = customerUpdate;
            _entityIds = entityIds ?? throw new global::System.ArgumentNullException(nameof(entityIds));
            _version = version;
        }

        /// <summary>
        /// Updates an existing customer.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUpdatePayloadData? CustomerUpdate { get; }
        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;
        public global::System.UInt64 Version => _version;

        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)
        {
            return new UpdateCustomerResultInfo(CustomerUpdate, _entityIds, version);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class UpdateCustomer_CustomerUpdate_Customer_CustomerFromCustomerEntityMapper : global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerEntity, UpdateCustomer_CustomerUpdate_Customer_Customer>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity, UpdateCustomer_CustomerUpdate_Customer_DefaultAddress_MailingAddress> _updateCustomer_CustomerUpdate_Customer_DefaultAddress_MailingAddressFromMailingAddressEntityMapper;
        public UpdateCustomer_CustomerUpdate_Customer_CustomerFromCustomerEntityMapper(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity, UpdateCustomer_CustomerUpdate_Customer_DefaultAddress_MailingAddress> updateCustomer_CustomerUpdate_Customer_DefaultAddress_MailingAddressFromMailingAddressEntityMapper)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _updateCustomer_CustomerUpdate_Customer_DefaultAddress_MailingAddressFromMailingAddressEntityMapper = updateCustomer_CustomerUpdate_Customer_DefaultAddress_MailingAddressFromMailingAddressEntityMapper ?? throw new global::System.ArgumentNullException(nameof(updateCustomer_CustomerUpdate_Customer_DefaultAddress_MailingAddressFromMailingAddressEntityMapper));
        }

        public UpdateCustomer_CustomerUpdate_Customer_Customer Map(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new UpdateCustomer_CustomerUpdate_Customer_Customer(entity.Id, entity.FirstName, entity.LastName, entity.AcceptsMarketing, entity.Email, entity.Phone, MapIUpdateCustomer_CustomerUpdate_Customer_DefaultAddress(entity.DefaultAddress, snapshot));
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomer_CustomerUpdate_Customer_DefaultAddress? MapIUpdateCustomer_CustomerUpdate_Customer_DefaultAddress(global::StrawberryShake.EntityId? entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId is null)
            {
                return null;
            }

            if (entityId.Value.Name.Equals("MailingAddress", global::System.StringComparison.Ordinal))
            {
                return _updateCustomer_CustomerUpdate_Customer_DefaultAddress_MailingAddressFromMailingAddressEntityMapper.Map(snapshot.GetEntity<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity>(entityId.Value) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class UpdateCustomer_CustomerUpdate_Customer_DefaultAddress_MailingAddressFromMailingAddressEntityMapper : global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity, UpdateCustomer_CustomerUpdate_Customer_DefaultAddress_MailingAddress>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public UpdateCustomer_CustomerUpdate_Customer_DefaultAddress_MailingAddressFromMailingAddressEntityMapper(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        public UpdateCustomer_CustomerUpdate_Customer_DefaultAddress_MailingAddress Map(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new UpdateCustomer_CustomerUpdate_Customer_DefaultAddress_MailingAddress(entity.Id, entity.Address1, entity.Address2, entity.City, entity.Company, entity.Country, entity.FirstName, entity.LastName, entity.Phone, entity.Province, entity.Zip);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCheckoutLoggedInResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CreateCheckoutLoggedInResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutEntity, CreateCheckoutLoggedIn_CheckoutCreate_Checkout_Checkout> _createCheckoutLoggedIn_CheckoutCreate_Checkout_CheckoutFromCheckoutEntityMapper;
        public CreateCheckoutLoggedInResultFactory(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutEntity, CreateCheckoutLoggedIn_CheckoutCreate_Checkout_Checkout> createCheckoutLoggedIn_CheckoutCreate_Checkout_CheckoutFromCheckoutEntityMapper)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _createCheckoutLoggedIn_CheckoutCreate_Checkout_CheckoutFromCheckoutEntityMapper = createCheckoutLoggedIn_CheckoutCreate_Checkout_CheckoutFromCheckoutEntityMapper ?? throw new global::System.ArgumentNullException(nameof(createCheckoutLoggedIn_CheckoutCreate_Checkout_CheckoutFromCheckoutEntityMapper));
        }

        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedInResult);

        public CreateCheckoutLoggedInResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            if (dataInfo is CreateCheckoutLoggedInResultInfo info)
            {
                return new CreateCheckoutLoggedInResult(MapICreateCheckoutLoggedIn_CheckoutCreate(info.CheckoutCreate, snapshot));
            }

            throw new global::System.ArgumentException("CreateCheckoutLoggedInResultInfo expected.");
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedIn_CheckoutCreate? MapICreateCheckoutLoggedIn_CheckoutCreate(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutCreatePayloadData? data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (data is null)
            {
                return null;
            }

            ICreateCheckoutLoggedIn_CheckoutCreate returnValue = default !;
            if (data?.__typename.Equals("CheckoutCreatePayload", global::System.StringComparison.Ordinal) ?? false)
            {
                returnValue = new CreateCheckoutLoggedIn_CheckoutCreate_CheckoutCreatePayload(MapICreateCheckoutLoggedIn_CheckoutCreate_Checkout(data.Checkout, snapshot), MapNonNullableICreateCheckoutLoggedIn_CheckoutCreate_CheckoutUserErrorsNonNullableArray(data.CheckoutUserErrors ?? throw new global::System.ArgumentNullException(), snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedIn_CheckoutCreate_Checkout? MapICreateCheckoutLoggedIn_CheckoutCreate_Checkout(global::StrawberryShake.EntityId? entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId is null)
            {
                return null;
            }

            if (entityId.Value.Name.Equals("Checkout", global::System.StringComparison.Ordinal))
            {
                return _createCheckoutLoggedIn_CheckoutCreate_Checkout_CheckoutFromCheckoutEntityMapper.Map(snapshot.GetEntity<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutEntity>(entityId.Value) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedIn_CheckoutCreate_CheckoutUserErrors> MapNonNullableICreateCheckoutLoggedIn_CheckoutCreate_CheckoutUserErrorsNonNullableArray(global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutUserErrorData>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (list is null)
            {
                throw new global::System.ArgumentNullException();
            }

            var checkoutUserErrors = new global::System.Collections.Generic.List<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedIn_CheckoutCreate_CheckoutUserErrors>();
            foreach (global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutUserErrorData child in list)
            {
                checkoutUserErrors.Add(MapNonNullableICreateCheckoutLoggedIn_CheckoutCreate_CheckoutUserErrors(child, snapshot));
            }

            return checkoutUserErrors;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedIn_CheckoutCreate_CheckoutUserErrors MapNonNullableICreateCheckoutLoggedIn_CheckoutCreate_CheckoutUserErrors(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutUserErrorData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            ICreateCheckoutLoggedIn_CheckoutCreate_CheckoutUserErrors returnValue = default !;
            if (data.__typename.Equals("CheckoutUserError", global::System.StringComparison.Ordinal))
            {
                returnValue = new CreateCheckoutLoggedIn_CheckoutCreate_CheckoutUserErrors_CheckoutUserError(data.Field, data.Message ?? throw new global::System.ArgumentNullException());
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)
        {
            return Create(dataInfo, snapshot);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCheckoutLoggedInResultInfo : global::StrawberryShake.IOperationResultDataInfo
    {
        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;
        private readonly global::System.UInt64 _version;
        public CreateCheckoutLoggedInResultInfo(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutCreatePayloadData? checkoutCreate, global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds, global::System.UInt64 version)
        {
            CheckoutCreate = checkoutCreate;
            _entityIds = entityIds ?? throw new global::System.ArgumentNullException(nameof(entityIds));
            _version = version;
        }

        /// <summary>
        /// Creates a new checkout.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutCreatePayloadData? CheckoutCreate { get; }
        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;
        public global::System.UInt64 Version => _version;

        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)
        {
            return new CreateCheckoutLoggedInResultInfo(CheckoutCreate, _entityIds, version);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCheckoutLoggedIn_CheckoutCreate_Checkout_CheckoutFromCheckoutEntityMapper : global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutEntity, CreateCheckoutLoggedIn_CheckoutCreate_Checkout_Checkout>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public CreateCheckoutLoggedIn_CheckoutCreate_Checkout_CheckoutFromCheckoutEntityMapper(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        public CreateCheckoutLoggedIn_CheckoutCreate_Checkout_Checkout Map(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new CreateCheckoutLoggedIn_CheckoutCreate_Checkout_Checkout(entity.Id, entity.WebUrl);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class UpdateCustomerAddressResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.UpdateCustomerAddressResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity, UpdateCustomerAddress_CustomerAddressUpdate_CustomerAddress_MailingAddress> _updateCustomerAddress_CustomerAddressUpdate_CustomerAddress_MailingAddressFromMailingAddressEntityMapper;
        public UpdateCustomerAddressResultFactory(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity, UpdateCustomerAddress_CustomerAddressUpdate_CustomerAddress_MailingAddress> updateCustomerAddress_CustomerAddressUpdate_CustomerAddress_MailingAddressFromMailingAddressEntityMapper)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _updateCustomerAddress_CustomerAddressUpdate_CustomerAddress_MailingAddressFromMailingAddressEntityMapper = updateCustomerAddress_CustomerAddressUpdate_CustomerAddress_MailingAddressFromMailingAddressEntityMapper ?? throw new global::System.ArgumentNullException(nameof(updateCustomerAddress_CustomerAddressUpdate_CustomerAddress_MailingAddressFromMailingAddressEntityMapper));
        }

        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerAddressResult);

        public UpdateCustomerAddressResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            if (dataInfo is UpdateCustomerAddressResultInfo info)
            {
                return new UpdateCustomerAddressResult(MapIUpdateCustomerAddress_CustomerAddressUpdate(info.CustomerAddressUpdate, snapshot));
            }

            throw new global::System.ArgumentException("UpdateCustomerAddressResultInfo expected.");
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerAddress_CustomerAddressUpdate? MapIUpdateCustomerAddress_CustomerAddressUpdate(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerAddressUpdatePayloadData? data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (data is null)
            {
                return null;
            }

            IUpdateCustomerAddress_CustomerAddressUpdate returnValue = default !;
            if (data?.__typename.Equals("CustomerAddressUpdatePayload", global::System.StringComparison.Ordinal) ?? false)
            {
                returnValue = new UpdateCustomerAddress_CustomerAddressUpdate_CustomerAddressUpdatePayload(MapIUpdateCustomerAddress_CustomerAddressUpdate_CustomerAddress(data.CustomerAddress, snapshot), MapNonNullableIUpdateCustomerAddress_CustomerAddressUpdate_CustomerUserErrorsNonNullableArray(data.CustomerUserErrors ?? throw new global::System.ArgumentNullException(), snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerAddress_CustomerAddressUpdate_CustomerAddress? MapIUpdateCustomerAddress_CustomerAddressUpdate_CustomerAddress(global::StrawberryShake.EntityId? entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId is null)
            {
                return null;
            }

            if (entityId.Value.Name.Equals("MailingAddress", global::System.StringComparison.Ordinal))
            {
                return _updateCustomerAddress_CustomerAddressUpdate_CustomerAddress_MailingAddressFromMailingAddressEntityMapper.Map(snapshot.GetEntity<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity>(entityId.Value) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerAddress_CustomerAddressUpdate_CustomerUserErrors> MapNonNullableIUpdateCustomerAddress_CustomerAddressUpdate_CustomerUserErrorsNonNullableArray(global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (list is null)
            {
                throw new global::System.ArgumentNullException();
            }

            var customerUserErrors = new global::System.Collections.Generic.List<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerAddress_CustomerAddressUpdate_CustomerUserErrors>();
            foreach (global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData child in list)
            {
                customerUserErrors.Add(MapNonNullableIUpdateCustomerAddress_CustomerAddressUpdate_CustomerUserErrors(child, snapshot));
            }

            return customerUserErrors;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerAddress_CustomerAddressUpdate_CustomerUserErrors MapNonNullableIUpdateCustomerAddress_CustomerAddressUpdate_CustomerUserErrors(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IUpdateCustomerAddress_CustomerAddressUpdate_CustomerUserErrors returnValue = default !;
            if (data.__typename.Equals("CustomerUserError", global::System.StringComparison.Ordinal))
            {
                returnValue = new UpdateCustomerAddress_CustomerAddressUpdate_CustomerUserErrors_CustomerUserError(data.Field, data.Message ?? throw new global::System.ArgumentNullException());
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)
        {
            return Create(dataInfo, snapshot);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class UpdateCustomerAddressResultInfo : global::StrawberryShake.IOperationResultDataInfo
    {
        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;
        private readonly global::System.UInt64 _version;
        public UpdateCustomerAddressResultInfo(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerAddressUpdatePayloadData? customerAddressUpdate, global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds, global::System.UInt64 version)
        {
            CustomerAddressUpdate = customerAddressUpdate;
            _entityIds = entityIds ?? throw new global::System.ArgumentNullException(nameof(entityIds));
            _version = version;
        }

        /// <summary>
        /// Updates the address of an existing customer.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerAddressUpdatePayloadData? CustomerAddressUpdate { get; }
        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;
        public global::System.UInt64 Version => _version;

        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)
        {
            return new UpdateCustomerAddressResultInfo(CustomerAddressUpdate, _entityIds, version);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class UpdateCustomerAddress_CustomerAddressUpdate_CustomerAddress_MailingAddressFromMailingAddressEntityMapper : global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity, UpdateCustomerAddress_CustomerAddressUpdate_CustomerAddress_MailingAddress>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public UpdateCustomerAddress_CustomerAddressUpdate_CustomerAddress_MailingAddressFromMailingAddressEntityMapper(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        public UpdateCustomerAddress_CustomerAddressUpdate_CustomerAddress_MailingAddress Map(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new UpdateCustomerAddress_CustomerAddressUpdate_CustomerAddress_MailingAddress(entity.Id, entity.Address1, entity.Address2, entity.City, entity.Company, entity.Country, entity.FirstName, entity.LastName, entity.Phone, entity.Province, entity.Zip);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCustomerAddressResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CreateCustomerAddressResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity, CreateCustomerAddress_CustomerAddressCreate_CustomerAddress_MailingAddress> _createCustomerAddress_CustomerAddressCreate_CustomerAddress_MailingAddressFromMailingAddressEntityMapper;
        public CreateCustomerAddressResultFactory(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity, CreateCustomerAddress_CustomerAddressCreate_CustomerAddress_MailingAddress> createCustomerAddress_CustomerAddressCreate_CustomerAddress_MailingAddressFromMailingAddressEntityMapper)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _createCustomerAddress_CustomerAddressCreate_CustomerAddress_MailingAddressFromMailingAddressEntityMapper = createCustomerAddress_CustomerAddressCreate_CustomerAddress_MailingAddressFromMailingAddressEntityMapper ?? throw new global::System.ArgumentNullException(nameof(createCustomerAddress_CustomerAddressCreate_CustomerAddress_MailingAddressFromMailingAddressEntityMapper));
        }

        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAddressResult);

        public CreateCustomerAddressResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            if (dataInfo is CreateCustomerAddressResultInfo info)
            {
                return new CreateCustomerAddressResult(MapICreateCustomerAddress_CustomerAddressCreate(info.CustomerAddressCreate, snapshot));
            }

            throw new global::System.ArgumentException("CreateCustomerAddressResultInfo expected.");
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAddress_CustomerAddressCreate? MapICreateCustomerAddress_CustomerAddressCreate(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerAddressCreatePayloadData? data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (data is null)
            {
                return null;
            }

            ICreateCustomerAddress_CustomerAddressCreate returnValue = default !;
            if (data?.__typename.Equals("CustomerAddressCreatePayload", global::System.StringComparison.Ordinal) ?? false)
            {
                returnValue = new CreateCustomerAddress_CustomerAddressCreate_CustomerAddressCreatePayload(MapICreateCustomerAddress_CustomerAddressCreate_CustomerAddress(data.CustomerAddress, snapshot), MapNonNullableICreateCustomerAddress_CustomerAddressCreate_CustomerUserErrorsNonNullableArray(data.CustomerUserErrors ?? throw new global::System.ArgumentNullException(), snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAddress_CustomerAddressCreate_CustomerAddress? MapICreateCustomerAddress_CustomerAddressCreate_CustomerAddress(global::StrawberryShake.EntityId? entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId is null)
            {
                return null;
            }

            if (entityId.Value.Name.Equals("MailingAddress", global::System.StringComparison.Ordinal))
            {
                return _createCustomerAddress_CustomerAddressCreate_CustomerAddress_MailingAddressFromMailingAddressEntityMapper.Map(snapshot.GetEntity<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity>(entityId.Value) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAddress_CustomerAddressCreate_CustomerUserErrors> MapNonNullableICreateCustomerAddress_CustomerAddressCreate_CustomerUserErrorsNonNullableArray(global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (list is null)
            {
                throw new global::System.ArgumentNullException();
            }

            var customerUserErrors = new global::System.Collections.Generic.List<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAddress_CustomerAddressCreate_CustomerUserErrors>();
            foreach (global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData child in list)
            {
                customerUserErrors.Add(MapNonNullableICreateCustomerAddress_CustomerAddressCreate_CustomerUserErrors(child, snapshot));
            }

            return customerUserErrors;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAddress_CustomerAddressCreate_CustomerUserErrors MapNonNullableICreateCustomerAddress_CustomerAddressCreate_CustomerUserErrors(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            ICreateCustomerAddress_CustomerAddressCreate_CustomerUserErrors returnValue = default !;
            if (data.__typename.Equals("CustomerUserError", global::System.StringComparison.Ordinal))
            {
                returnValue = new CreateCustomerAddress_CustomerAddressCreate_CustomerUserErrors_CustomerUserError(data.Field, data.Message ?? throw new global::System.ArgumentNullException());
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)
        {
            return Create(dataInfo, snapshot);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCustomerAddressResultInfo : global::StrawberryShake.IOperationResultDataInfo
    {
        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;
        private readonly global::System.UInt64 _version;
        public CreateCustomerAddressResultInfo(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerAddressCreatePayloadData? customerAddressCreate, global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds, global::System.UInt64 version)
        {
            CustomerAddressCreate = customerAddressCreate;
            _entityIds = entityIds ?? throw new global::System.ArgumentNullException(nameof(entityIds));
            _version = version;
        }

        /// <summary>
        /// Creates a new address for a customer.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerAddressCreatePayloadData? CustomerAddressCreate { get; }
        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;
        public global::System.UInt64 Version => _version;

        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)
        {
            return new CreateCustomerAddressResultInfo(CustomerAddressCreate, _entityIds, version);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCustomerAddress_CustomerAddressCreate_CustomerAddress_MailingAddressFromMailingAddressEntityMapper : global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity, CreateCustomerAddress_CustomerAddressCreate_CustomerAddress_MailingAddress>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public CreateCustomerAddress_CustomerAddressCreate_CustomerAddress_MailingAddressFromMailingAddressEntityMapper(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        public CreateCustomerAddress_CustomerAddressCreate_CustomerAddress_MailingAddress Map(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new CreateCustomerAddress_CustomerAddressCreate_CustomerAddress_MailingAddress(entity.Id, entity.Address1, entity.Address2, entity.City, entity.Company, entity.Country, entity.FirstName, entity.LastName, entity.Phone, entity.Province, entity.Zip);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCustomerResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CreateCustomerResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerEntity, CreateCustomer_CustomerCreate_Customer_Customer> _createCustomer_CustomerCreate_Customer_CustomerFromCustomerEntityMapper;
        public CreateCustomerResultFactory(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerEntity, CreateCustomer_CustomerCreate_Customer_Customer> createCustomer_CustomerCreate_Customer_CustomerFromCustomerEntityMapper)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _createCustomer_CustomerCreate_Customer_CustomerFromCustomerEntityMapper = createCustomer_CustomerCreate_Customer_CustomerFromCustomerEntityMapper ?? throw new global::System.ArgumentNullException(nameof(createCustomer_CustomerCreate_Customer_CustomerFromCustomerEntityMapper));
        }

        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerResult);

        public CreateCustomerResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            if (dataInfo is CreateCustomerResultInfo info)
            {
                return new CreateCustomerResult(MapICreateCustomer_CustomerCreate(info.CustomerCreate, snapshot));
            }

            throw new global::System.ArgumentException("CreateCustomerResultInfo expected.");
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomer_CustomerCreate? MapICreateCustomer_CustomerCreate(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerCreatePayloadData? data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (data is null)
            {
                return null;
            }

            ICreateCustomer_CustomerCreate returnValue = default !;
            if (data?.__typename.Equals("CustomerCreatePayload", global::System.StringComparison.Ordinal) ?? false)
            {
                returnValue = new CreateCustomer_CustomerCreate_CustomerCreatePayload(MapICreateCustomer_CustomerCreate_Customer(data.Customer, snapshot), MapNonNullableICreateCustomer_CustomerCreate_CustomerUserErrorsNonNullableArray(data.CustomerUserErrors ?? throw new global::System.ArgumentNullException(), snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomer_CustomerCreate_Customer? MapICreateCustomer_CustomerCreate_Customer(global::StrawberryShake.EntityId? entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId is null)
            {
                return null;
            }

            if (entityId.Value.Name.Equals("Customer", global::System.StringComparison.Ordinal))
            {
                return _createCustomer_CustomerCreate_Customer_CustomerFromCustomerEntityMapper.Map(snapshot.GetEntity<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerEntity>(entityId.Value) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomer_CustomerCreate_CustomerUserErrors> MapNonNullableICreateCustomer_CustomerCreate_CustomerUserErrorsNonNullableArray(global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (list is null)
            {
                throw new global::System.ArgumentNullException();
            }

            var customerUserErrors = new global::System.Collections.Generic.List<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomer_CustomerCreate_CustomerUserErrors>();
            foreach (global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData child in list)
            {
                customerUserErrors.Add(MapNonNullableICreateCustomer_CustomerCreate_CustomerUserErrors(child, snapshot));
            }

            return customerUserErrors;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomer_CustomerCreate_CustomerUserErrors MapNonNullableICreateCustomer_CustomerCreate_CustomerUserErrors(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            ICreateCustomer_CustomerCreate_CustomerUserErrors returnValue = default !;
            if (data.__typename.Equals("CustomerUserError", global::System.StringComparison.Ordinal))
            {
                returnValue = new CreateCustomer_CustomerCreate_CustomerUserErrors_CustomerUserError(data.Field, data.Message ?? throw new global::System.ArgumentNullException(), data.Code);
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)
        {
            return Create(dataInfo, snapshot);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCustomerResultInfo : global::StrawberryShake.IOperationResultDataInfo
    {
        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;
        private readonly global::System.UInt64 _version;
        public CreateCustomerResultInfo(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerCreatePayloadData? customerCreate, global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds, global::System.UInt64 version)
        {
            CustomerCreate = customerCreate;
            _entityIds = entityIds ?? throw new global::System.ArgumentNullException(nameof(entityIds));
            _version = version;
        }

        /// <summary>
        /// Creates a new customer.
        /// </summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerCreatePayloadData? CustomerCreate { get; }
        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;
        public global::System.UInt64 Version => _version;

        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)
        {
            return new CreateCustomerResultInfo(CustomerCreate, _entityIds, version);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCustomer_CustomerCreate_Customer_CustomerFromCustomerEntityMapper : global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerEntity, CreateCustomer_CustomerCreate_Customer_Customer>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public CreateCustomer_CustomerCreate_Customer_CustomerFromCustomerEntityMapper(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        public CreateCustomer_CustomerCreate_Customer_Customer Map(global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new CreateCustomer_CustomerCreate_Customer_Customer(entity.FirstName, entity.LastName, entity.Email, entity.Phone, entity.AcceptsMarketing);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    internal interface ICustomerAccessTokenCreateInputInfo
    {
        global::System.Boolean IsEmailSet { get; }

        global::System.Boolean IsPasswordSet { get; }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    internal interface ICheckoutLineItemInputInfo
    {
        global::System.Boolean IsCustomAttributesSet { get; }

        global::System.Boolean IsQuantitySet { get; }

        global::System.Boolean IsVariantIdSet { get; }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    internal interface IAttributeInputInfo
    {
        global::System.Boolean IsKeySet { get; }

        global::System.Boolean IsValueSet { get; }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    internal interface ICustomerUpdateInputInfo
    {
        global::System.Boolean IsFirstNameSet { get; }

        global::System.Boolean IsLastNameSet { get; }

        global::System.Boolean IsEmailSet { get; }

        global::System.Boolean IsPhoneSet { get; }

        global::System.Boolean IsPasswordSet { get; }

        global::System.Boolean IsAcceptsMarketingSet { get; }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    internal interface IMailingAddressInputInfo
    {
        global::System.Boolean IsAddress1Set { get; }

        global::System.Boolean IsAddress2Set { get; }

        global::System.Boolean IsCitySet { get; }

        global::System.Boolean IsCompanySet { get; }

        global::System.Boolean IsCountrySet { get; }

        global::System.Boolean IsFirstNameSet { get; }

        global::System.Boolean IsLastNameSet { get; }

        global::System.Boolean IsPhoneSet { get; }

        global::System.Boolean IsProvinceSet { get; }

        global::System.Boolean IsZipSet { get; }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    internal interface ICustomerCreateInputInfo
    {
        global::System.Boolean IsFirstNameSet { get; }

        global::System.Boolean IsLastNameSet { get; }

        global::System.Boolean IsEmailSet { get; }

        global::System.Boolean IsPhoneSet { get; }

        global::System.Boolean IsPasswordSet { get; }

        global::System.Boolean IsAcceptsMarketingSet { get; }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetCustomerBuilder : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetCustomerResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityIdSerializer _idSerializer;
        private readonly global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetCustomerResult> _resultDataFactory;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _iDParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Boolean, global::System.Boolean> _booleanParser;
        public GetCustomerBuilder(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer idSerializer, global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetCustomerResult> resultDataFactory, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _idSerializer = idSerializer ?? throw new global::System.ArgumentNullException(nameof(idSerializer));
            _resultDataFactory = resultDataFactory ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));
            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("String") ?? throw new global::System.ArgumentException("No serializer for type `String` found.");
            _iDParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("ID") ?? throw new global::System.ArgumentException("No serializer for type `ID` found.");
            _booleanParser = serializerResolver.GetLeafValueParser<global::System.Boolean, global::System.Boolean>("Boolean") ?? throw new global::System.ArgumentException("No serializer for type `Boolean` found.");
        }

        public global::StrawberryShake.IOperationResult<IGetCustomerResult> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)
        {
            (IGetCustomerResult Result, GetCustomerResultInfo Info)? data = null;
            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.IClientError>? errors = null;
            if (response.Exception is null)
            {
                try
                {
                    if (response.Body != null)
                    {
                        if (response.Body.RootElement.TryGetProperty("data", out global::System.Text.Json.JsonElement dataElement) && dataElement.ValueKind == global::System.Text.Json.JsonValueKind.Object)
                        {
                            data = BuildData(dataElement);
                        }

                        if (response.Body.RootElement.TryGetProperty("errors", out global::System.Text.Json.JsonElement errorsElement))
                        {
                            errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);
                        }
                    }
                }
                catch (global::System.Exception ex)
                {
                    errors = new global::StrawberryShake.IClientError[]
                    {
                        new global::StrawberryShake.ClientError(ex.Message, exception: ex, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { "body", response.Body?.RootElement.ToString() } })
                    };
                }
            }
            else
            {
                if (response.Body != null && response.Body.RootElement.TryGetProperty("errors", out global::System.Text.Json.JsonElement errorsElement))
                {
                    errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);
                }
                else
                {
                    errors = new global::StrawberryShake.IClientError[]
                    {
                        new global::StrawberryShake.ClientError(response.Exception.Message, exception: response.Exception, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { "body", response.Body?.RootElement.ToString() } })
                    };
                }
            }

            return new global::StrawberryShake.OperationResult<IGetCustomerResult>(data?.Result, data?.Info, _resultDataFactory, errors);
        }

        private (IGetCustomerResult, GetCustomerResultInfo) BuildData(global::System.Text.Json.JsonElement obj)
        {
            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();
            global::StrawberryShake.IEntityStoreSnapshot snapshot = default !;
            global::StrawberryShake.EntityId? customerId = default !;
            _entityStore.Update(session =>
            {
                customerId = UpdateIGetCustomer_CustomerEntity(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "customer"), entityIds);
                snapshot = session.CurrentSnapshot;
            });
            var resultInfo = new GetCustomerResultInfo(customerId, entityIds, snapshot.Version);
            return (_resultDataFactory.Create(resultInfo), resultInfo);
        }

        private global::StrawberryShake.EntityId? UpdateIGetCustomer_CustomerEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);
            entityIds.Add(entityId);
            if (entityId.Name.Equals("Customer", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerEntity? entity))
                {
                    session.SetEntity(entityId, new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerEntity(DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "firstName")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "lastName")), DeserializeNonNullableBoolean(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "acceptsMarketing")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "email")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "phone")), UpdateIGetCustomer_Customer_DefaultAddressEntity(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "defaultAddress"), entityIds)));
                }
                else
                {
                    session.SetEntity(entityId, new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerEntity(DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "firstName")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "lastName")), DeserializeNonNullableBoolean(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "acceptsMarketing")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "email")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "phone")), UpdateIGetCustomer_Customer_DefaultAddressEntity(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "defaultAddress"), entityIds)));
                }

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.String DeserializeNonNullableString(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _iDParser.Parse(obj.Value.GetString()!);
        }

        private global::System.String? DeserializeString(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            return _stringParser.Parse(obj.Value.GetString()!);
        }

        private global::System.Boolean DeserializeNonNullableBoolean(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _booleanParser.Parse(obj.Value.GetBoolean()!);
        }

        private global::StrawberryShake.EntityId? UpdateIGetCustomer_Customer_DefaultAddressEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);
            entityIds.Add(entityId);
            if (entityId.Name.Equals("MailingAddress", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity? entity))
                {
                    session.SetEntity(entityId, new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity(DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "address1")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "address2")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "city")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "company")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "country")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "firstName")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "lastName")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "phone")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "province")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "zip"))));
                }
                else
                {
                    session.SetEntity(entityId, new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity(DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "address1")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "address2")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "city")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "company")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "country")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "firstName")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "lastName")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "phone")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "province")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "zip"))));
                }

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetProductByHandleBuilder : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandleResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityIdSerializer _idSerializer;
        private readonly global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandleResult> _resultDataFactory;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Int32, global::System.Int32> _intParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _iDParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.Uri> _uRLParser;
        public GetProductByHandleBuilder(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer idSerializer, global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandleResult> resultDataFactory, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _idSerializer = idSerializer ?? throw new global::System.ArgumentNullException(nameof(idSerializer));
            _resultDataFactory = resultDataFactory ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));
            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("String") ?? throw new global::System.ArgumentException("No serializer for type `String` found.");
            _intParser = serializerResolver.GetLeafValueParser<global::System.Int32, global::System.Int32>("Int") ?? throw new global::System.ArgumentException("No serializer for type `Int` found.");
            _iDParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("ID") ?? throw new global::System.ArgumentException("No serializer for type `ID` found.");
            _uRLParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.Uri>("URL") ?? throw new global::System.ArgumentException("No serializer for type `URL` found.");
        }

        public global::StrawberryShake.IOperationResult<IGetProductByHandleResult> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)
        {
            (IGetProductByHandleResult Result, GetProductByHandleResultInfo Info)? data = null;
            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.IClientError>? errors = null;
            if (response.Exception is null)
            {
                try
                {
                    if (response.Body != null)
                    {
                        if (response.Body.RootElement.TryGetProperty("data", out global::System.Text.Json.JsonElement dataElement) && dataElement.ValueKind == global::System.Text.Json.JsonValueKind.Object)
                        {
                            data = BuildData(dataElement);
                        }

                        if (response.Body.RootElement.TryGetProperty("errors", out global::System.Text.Json.JsonElement errorsElement))
                        {
                            errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);
                        }
                    }
                }
                catch (global::System.Exception ex)
                {
                    errors = new global::StrawberryShake.IClientError[]
                    {
                        new global::StrawberryShake.ClientError(ex.Message, exception: ex, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { "body", response.Body?.RootElement.ToString() } })
                    };
                }
            }
            else
            {
                if (response.Body != null && response.Body.RootElement.TryGetProperty("errors", out global::System.Text.Json.JsonElement errorsElement))
                {
                    errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);
                }
                else
                {
                    errors = new global::StrawberryShake.IClientError[]
                    {
                        new global::StrawberryShake.ClientError(response.Exception.Message, exception: response.Exception, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { "body", response.Body?.RootElement.ToString() } })
                    };
                }
            }

            return new global::StrawberryShake.OperationResult<IGetProductByHandleResult>(data?.Result, data?.Info, _resultDataFactory, errors);
        }

        private (IGetProductByHandleResult, GetProductByHandleResultInfo) BuildData(global::System.Text.Json.JsonElement obj)
        {
            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();
            global::StrawberryShake.IEntityStoreSnapshot snapshot = default !;
            global::StrawberryShake.EntityId? productId = default !;
            _entityStore.Update(session =>
            {
                productId = UpdateIGetProductByHandle_ProductEntity(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "product"), entityIds);
                snapshot = session.CurrentSnapshot;
            });
            var resultInfo = new GetProductByHandleResultInfo(productId, entityIds, snapshot.Version);
            return (_resultDataFactory.Create(resultInfo), resultInfo);
        }

        private global::StrawberryShake.EntityId? UpdateIGetProductByHandle_ProductEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);
            entityIds.Add(entityId);
            if (entityId.Name.Equals("Product", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductEntity? entity))
                {
                    session.SetEntity(entityId, new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductEntity(DeserializeNonNullableIGetProductByHandle_Product_Variants(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "variants"), entityIds), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "handle")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "title")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "description")), DeserializeNonNullableIGetProductByHandle_Product_PriceRange(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "priceRange")), DeserializeNonNullableIGetProductByHandle_Product_Images(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "images"), entityIds), UpdateNonNullableIGetProductByHandle_Product_OptionsEntityNonNullableArray(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "options"), entityIds)));
                }
                else
                {
                    session.SetEntity(entityId, new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductEntity(DeserializeNonNullableIGetProductByHandle_Product_Variants(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "variants"), entityIds), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "handle")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "title")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "description")), DeserializeNonNullableIGetProductByHandle_Product_PriceRange(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "priceRange")), DeserializeNonNullableIGetProductByHandle_Product_Images(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "images"), entityIds), UpdateNonNullableIGetProductByHandle_Product_OptionsEntityNonNullableArray(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "options"), entityIds)));
                }

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductVariantConnectionData DeserializeNonNullableIGetProductByHandle_Product_Variants(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("ProductVariantConnection", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductVariantConnectionData(typename, edges: DeserializeNonNullableIGetProductByHandle_Product_Variants_EdgesNonNullableArray(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "edges"), entityIds));
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductVariantEdgeData> DeserializeNonNullableIGetProductByHandle_Product_Variants_EdgesNonNullableArray(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var productVariantEdges = new global::System.Collections.Generic.List<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductVariantEdgeData>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                productVariantEdges.Add(DeserializeNonNullableIGetProductByHandle_Product_Variants_Edges(session, child, entityIds));
            }

            return productVariantEdges;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductVariantEdgeData DeserializeNonNullableIGetProductByHandle_Product_Variants_Edges(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("ProductVariantEdge", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductVariantEdgeData(typename, node: UpdateNonNullableIGetProductByHandle_Product_Variants_Edges_NodeEntity(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "node"), entityIds));
            }

            throw new global::System.NotSupportedException();
        }

        private global::StrawberryShake.EntityId UpdateNonNullableIGetProductByHandle_Product_Variants_Edges_NodeEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);
            entityIds.Add(entityId);
            if (entityId.Name.Equals("ProductVariant", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductVariantEntity? entity))
                {
                    session.SetEntity(entityId, new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductVariantEntity(DeserializeInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "quantityAvailable")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "title")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id"))));
                }
                else
                {
                    session.SetEntity(entityId, new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductVariantEntity(DeserializeInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "quantityAvailable")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "title")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id"))));
                }

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Int32? DeserializeInt32(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            return _intParser.Parse(obj.Value.GetInt32()!);
        }

        private global::System.String DeserializeNonNullableString(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _stringParser.Parse(obj.Value.GetString()!);
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductPriceRangeData DeserializeNonNullableIGetProductByHandle_Product_PriceRange(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("ProductPriceRange", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductPriceRangeData(typename, minVariantPrice: DeserializeNonNullableIGetProductByHandle_Product_PriceRange_MinVariantPrice(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "minVariantPrice")));
            }

            throw new global::System.NotSupportedException();
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MoneyV2Data DeserializeNonNullableIGetProductByHandle_Product_PriceRange_MinVariantPrice(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("MoneyV2", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MoneyV2Data(typename, amount: DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "amount")));
            }

            throw new global::System.NotSupportedException();
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageConnectionData DeserializeNonNullableIGetProductByHandle_Product_Images(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("ImageConnection", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageConnectionData(typename, edges: DeserializeNonNullableIGetProductByHandle_Product_Images_EdgesNonNullableArray(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "edges"), entityIds));
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEdgeData> DeserializeNonNullableIGetProductByHandle_Product_Images_EdgesNonNullableArray(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var imageEdges = new global::System.Collections.Generic.List<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEdgeData>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                imageEdges.Add(DeserializeNonNullableIGetProductByHandle_Product_Images_Edges(session, child, entityIds));
            }

            return imageEdges;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEdgeData DeserializeNonNullableIGetProductByHandle_Product_Images_Edges(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("ImageEdge", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEdgeData(typename, node: UpdateNonNullableIGetProductByHandle_Product_Images_Edges_NodeEntity(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "node"), entityIds));
            }

            throw new global::System.NotSupportedException();
        }

        private global::StrawberryShake.EntityId UpdateNonNullableIGetProductByHandle_Product_Images_Edges_NodeEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);
            entityIds.Add(entityId);
            if (entityId.Name.Equals("Image", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEntity? entity))
                {
                    session.SetEntity(entityId, new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEntity(DeserializeNonNullableUri(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "url"))));
                }
                else
                {
                    session.SetEntity(entityId, new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEntity(DeserializeNonNullableUri(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "url"))));
                }

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Uri DeserializeNonNullableUri(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _uRLParser.Parse(obj.Value.GetString()!);
        }

        private global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId> UpdateNonNullableIGetProductByHandle_Product_OptionsEntityNonNullableArray(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var productOptions = new global::System.Collections.Generic.List<global::StrawberryShake.EntityId>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                productOptions.Add(UpdateNonNullableIGetProductByHandle_Product_OptionsEntity(session, child, entityIds));
            }

            return productOptions;
        }

        private global::StrawberryShake.EntityId UpdateNonNullableIGetProductByHandle_Product_OptionsEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);
            entityIds.Add(entityId);
            if (entityId.Name.Equals("ProductOption", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductOptionEntity? entity))
                {
                    session.SetEntity(entityId, new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductOptionEntity(DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), DeserializeNonNullableStringNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "values"))));
                }
                else
                {
                    session.SetEntity(entityId, new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductOptionEntity(DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), DeserializeNonNullableStringNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "values"))));
                }

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Collections.Generic.IReadOnlyList<global::System.String> DeserializeNonNullableStringNonNullableArray(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var @strings = new global::System.Collections.Generic.List<global::System.String>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                @strings.Add(DeserializeNonNullableString(child));
            }

            return @strings;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class GetProductsBuilder : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductsResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityIdSerializer _idSerializer;
        private readonly global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductsResult> _resultDataFactory;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.Uri> _uRLParser;
        public GetProductsBuilder(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer idSerializer, global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductsResult> resultDataFactory, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _idSerializer = idSerializer ?? throw new global::System.ArgumentNullException(nameof(idSerializer));
            _resultDataFactory = resultDataFactory ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));
            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("String") ?? throw new global::System.ArgumentException("No serializer for type `String` found.");
            _uRLParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.Uri>("URL") ?? throw new global::System.ArgumentException("No serializer for type `URL` found.");
        }

        public global::StrawberryShake.IOperationResult<IGetProductsResult> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)
        {
            (IGetProductsResult Result, GetProductsResultInfo Info)? data = null;
            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.IClientError>? errors = null;
            if (response.Exception is null)
            {
                try
                {
                    if (response.Body != null)
                    {
                        if (response.Body.RootElement.TryGetProperty("data", out global::System.Text.Json.JsonElement dataElement) && dataElement.ValueKind == global::System.Text.Json.JsonValueKind.Object)
                        {
                            data = BuildData(dataElement);
                        }

                        if (response.Body.RootElement.TryGetProperty("errors", out global::System.Text.Json.JsonElement errorsElement))
                        {
                            errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);
                        }
                    }
                }
                catch (global::System.Exception ex)
                {
                    errors = new global::StrawberryShake.IClientError[]
                    {
                        new global::StrawberryShake.ClientError(ex.Message, exception: ex, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { "body", response.Body?.RootElement.ToString() } })
                    };
                }
            }
            else
            {
                if (response.Body != null && response.Body.RootElement.TryGetProperty("errors", out global::System.Text.Json.JsonElement errorsElement))
                {
                    errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);
                }
                else
                {
                    errors = new global::StrawberryShake.IClientError[]
                    {
                        new global::StrawberryShake.ClientError(response.Exception.Message, exception: response.Exception, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { "body", response.Body?.RootElement.ToString() } })
                    };
                }
            }

            return new global::StrawberryShake.OperationResult<IGetProductsResult>(data?.Result, data?.Info, _resultDataFactory, errors);
        }

        private (IGetProductsResult, GetProductsResultInfo) BuildData(global::System.Text.Json.JsonElement obj)
        {
            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();
            global::StrawberryShake.IEntityStoreSnapshot snapshot = default !;
            global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductConnectionData productsId = default !;
            _entityStore.Update(session =>
            {
                productsId = DeserializeNonNullableIGetProducts_Products(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "products"), entityIds);
                snapshot = session.CurrentSnapshot;
            });
            var resultInfo = new GetProductsResultInfo(productsId, entityIds, snapshot.Version);
            return (_resultDataFactory.Create(resultInfo), resultInfo);
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductConnectionData DeserializeNonNullableIGetProducts_Products(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("ProductConnection", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductConnectionData(typename, edges: DeserializeNonNullableIGetProducts_Products_EdgesNonNullableArray(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "edges"), entityIds));
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductEdgeData> DeserializeNonNullableIGetProducts_Products_EdgesNonNullableArray(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var productEdges = new global::System.Collections.Generic.List<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductEdgeData>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                productEdges.Add(DeserializeNonNullableIGetProducts_Products_Edges(session, child, entityIds));
            }

            return productEdges;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductEdgeData DeserializeNonNullableIGetProducts_Products_Edges(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("ProductEdge", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductEdgeData(typename, node: UpdateNonNullableIGetProducts_Products_Edges_NodeEntity(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "node"), entityIds));
            }

            throw new global::System.NotSupportedException();
        }

        private global::StrawberryShake.EntityId UpdateNonNullableIGetProducts_Products_Edges_NodeEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);
            entityIds.Add(entityId);
            if (entityId.Name.Equals("Product", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductEntity? entity))
                {
                    session.SetEntity(entityId, new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductEntity(entity.Variants, DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "handle")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "title")), entity.Description, DeserializeNonNullableIGetProducts_Products_Edges_Node_PriceRange(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "priceRange")), DeserializeNonNullableIGetProducts_Products_Edges_Node_Images(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "images"), entityIds), entity.Options));
                }
                else
                {
                    session.SetEntity(entityId, new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductEntity(default !, DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "handle")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "title")), default !, DeserializeNonNullableIGetProducts_Products_Edges_Node_PriceRange(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "priceRange")), DeserializeNonNullableIGetProducts_Products_Edges_Node_Images(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "images"), entityIds), default !));
                }

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.String DeserializeNonNullableString(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _stringParser.Parse(obj.Value.GetString()!);
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductPriceRangeData DeserializeNonNullableIGetProducts_Products_Edges_Node_PriceRange(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("ProductPriceRange", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductPriceRangeData(typename, minVariantPrice: DeserializeNonNullableIGetProducts_Products_Edges_Node_PriceRange_MinVariantPrice(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "minVariantPrice")));
            }

            throw new global::System.NotSupportedException();
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MoneyV2Data DeserializeNonNullableIGetProducts_Products_Edges_Node_PriceRange_MinVariantPrice(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("MoneyV2", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MoneyV2Data(typename, amount: DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "amount")));
            }

            throw new global::System.NotSupportedException();
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageConnectionData DeserializeNonNullableIGetProducts_Products_Edges_Node_Images(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("ImageConnection", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageConnectionData(typename, edges: DeserializeNonNullableIGetProducts_Products_Edges_Node_Images_EdgesNonNullableArray(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "edges"), entityIds));
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEdgeData> DeserializeNonNullableIGetProducts_Products_Edges_Node_Images_EdgesNonNullableArray(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var imageEdges = new global::System.Collections.Generic.List<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEdgeData>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                imageEdges.Add(DeserializeNonNullableIGetProducts_Products_Edges_Node_Images_Edges(session, child, entityIds));
            }

            return imageEdges;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEdgeData DeserializeNonNullableIGetProducts_Products_Edges_Node_Images_Edges(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("ImageEdge", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEdgeData(typename, node: UpdateNonNullableIGetProducts_Products_Edges_Node_Images_Edges_NodeEntity(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "node"), entityIds));
            }

            throw new global::System.NotSupportedException();
        }

        private global::StrawberryShake.EntityId UpdateNonNullableIGetProducts_Products_Edges_Node_Images_Edges_NodeEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);
            entityIds.Add(entityId);
            if (entityId.Name.Equals("Image", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEntity? entity))
                {
                    session.SetEntity(entityId, new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEntity(DeserializeNonNullableUri(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "url"))));
                }
                else
                {
                    session.SetEntity(entityId, new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEntity(DeserializeNonNullableUri(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "url"))));
                }

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Uri DeserializeNonNullableUri(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _uRLParser.Parse(obj.Value.GetString()!);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCustomerAccessTokenBuilder : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAccessTokenResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityIdSerializer _idSerializer;
        private readonly global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAccessTokenResult> _resultDataFactory;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerErrorCode> _customerErrorCodeParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.DateTimeOffset> _dateTimeParser;
        public CreateCustomerAccessTokenBuilder(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer idSerializer, global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAccessTokenResult> resultDataFactory, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _idSerializer = idSerializer ?? throw new global::System.ArgumentNullException(nameof(idSerializer));
            _resultDataFactory = resultDataFactory ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));
            _customerErrorCodeParser = serializerResolver.GetLeafValueParser<global::System.String, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerErrorCode>("CustomerErrorCode") ?? throw new global::System.ArgumentException("No serializer for type `CustomerErrorCode` found.");
            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("String") ?? throw new global::System.ArgumentException("No serializer for type `String` found.");
            _dateTimeParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.DateTimeOffset>("DateTime") ?? throw new global::System.ArgumentException("No serializer for type `DateTime` found.");
        }

        public global::StrawberryShake.IOperationResult<ICreateCustomerAccessTokenResult> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)
        {
            (ICreateCustomerAccessTokenResult Result, CreateCustomerAccessTokenResultInfo Info)? data = null;
            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.IClientError>? errors = null;
            if (response.Exception is null)
            {
                try
                {
                    if (response.Body != null)
                    {
                        if (response.Body.RootElement.TryGetProperty("data", out global::System.Text.Json.JsonElement dataElement) && dataElement.ValueKind == global::System.Text.Json.JsonValueKind.Object)
                        {
                            data = BuildData(dataElement);
                        }

                        if (response.Body.RootElement.TryGetProperty("errors", out global::System.Text.Json.JsonElement errorsElement))
                        {
                            errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);
                        }
                    }
                }
                catch (global::System.Exception ex)
                {
                    errors = new global::StrawberryShake.IClientError[]
                    {
                        new global::StrawberryShake.ClientError(ex.Message, exception: ex, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { "body", response.Body?.RootElement.ToString() } })
                    };
                }
            }
            else
            {
                if (response.Body != null && response.Body.RootElement.TryGetProperty("errors", out global::System.Text.Json.JsonElement errorsElement))
                {
                    errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);
                }
                else
                {
                    errors = new global::StrawberryShake.IClientError[]
                    {
                        new global::StrawberryShake.ClientError(response.Exception.Message, exception: response.Exception, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { "body", response.Body?.RootElement.ToString() } })
                    };
                }
            }

            return new global::StrawberryShake.OperationResult<ICreateCustomerAccessTokenResult>(data?.Result, data?.Info, _resultDataFactory, errors);
        }

        private (ICreateCustomerAccessTokenResult, CreateCustomerAccessTokenResultInfo) BuildData(global::System.Text.Json.JsonElement obj)
        {
            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();
            global::StrawberryShake.IEntityStoreSnapshot snapshot = default !;
            _entityStore.Update(session =>
            {
                snapshot = session.CurrentSnapshot;
            });
            var resultInfo = new CreateCustomerAccessTokenResultInfo(DeserializeICreateCustomerAccessToken_CustomerAccessTokenCreate(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "customerAccessTokenCreate")), entityIds, snapshot.Version);
            return (_resultDataFactory.Create(resultInfo), resultInfo);
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerAccessTokenCreatePayloadData? DeserializeICreateCustomerAccessToken_CustomerAccessTokenCreate(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("CustomerAccessTokenCreatePayload", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerAccessTokenCreatePayloadData(typename, customerAccessToken: DeserializeICreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerAccessToken(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "customerAccessToken")), customerUserErrors: DeserializeNonNullableICreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerUserErrorsNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "customerUserErrors")));
            }

            throw new global::System.NotSupportedException();
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerAccessTokenData? DeserializeICreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerAccessToken(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("CustomerAccessToken", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerAccessTokenData(typename, accessToken: DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "accessToken")), expiresAt: DeserializeNonNullableDateTimeOffset(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "expiresAt")));
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.String DeserializeNonNullableString(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _stringParser.Parse(obj.Value.GetString()!);
        }

        private global::System.DateTimeOffset DeserializeNonNullableDateTimeOffset(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _dateTimeParser.Parse(obj.Value.GetString()!);
        }

        private global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData> DeserializeNonNullableICreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerUserErrorsNonNullableArray(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var customerUserErrors = new global::System.Collections.Generic.List<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                customerUserErrors.Add(DeserializeNonNullableICreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerUserErrors(child));
            }

            return customerUserErrors;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData DeserializeNonNullableICreateCustomerAccessToken_CustomerAccessTokenCreate_CustomerUserErrors(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("CustomerUserError", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData(typename, code: DeserializeCustomerErrorCode(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "code")), field: DeserializeStringNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "field")), message: DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "message")));
            }

            throw new global::System.NotSupportedException();
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerErrorCode? DeserializeCustomerErrorCode(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            return _customerErrorCodeParser.Parse(obj.Value.GetString()!);
        }

        private global::System.Collections.Generic.IReadOnlyList<global::System.String>? DeserializeStringNonNullableArray(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            var @strings = new global::System.Collections.Generic.List<global::System.String>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                @strings.Add(DeserializeNonNullableString(child));
            }

            return @strings;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCheckoutLoggedOutBuilder : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedOutResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityIdSerializer _idSerializer;
        private readonly global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedOutResult> _resultDataFactory;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Int32, global::System.Int32> _intParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _iDParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.Uri> _uRLParser;
        public CreateCheckoutLoggedOutBuilder(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer idSerializer, global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedOutResult> resultDataFactory, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _idSerializer = idSerializer ?? throw new global::System.ArgumentNullException(nameof(idSerializer));
            _resultDataFactory = resultDataFactory ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));
            _intParser = serializerResolver.GetLeafValueParser<global::System.Int32, global::System.Int32>("Int") ?? throw new global::System.ArgumentException("No serializer for type `Int` found.");
            _iDParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("ID") ?? throw new global::System.ArgumentException("No serializer for type `ID` found.");
            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("String") ?? throw new global::System.ArgumentException("No serializer for type `String` found.");
            _uRLParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.Uri>("URL") ?? throw new global::System.ArgumentException("No serializer for type `URL` found.");
        }

        public global::StrawberryShake.IOperationResult<ICreateCheckoutLoggedOutResult> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)
        {
            (ICreateCheckoutLoggedOutResult Result, CreateCheckoutLoggedOutResultInfo Info)? data = null;
            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.IClientError>? errors = null;
            if (response.Exception is null)
            {
                try
                {
                    if (response.Body != null)
                    {
                        if (response.Body.RootElement.TryGetProperty("data", out global::System.Text.Json.JsonElement dataElement) && dataElement.ValueKind == global::System.Text.Json.JsonValueKind.Object)
                        {
                            data = BuildData(dataElement);
                        }

                        if (response.Body.RootElement.TryGetProperty("errors", out global::System.Text.Json.JsonElement errorsElement))
                        {
                            errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);
                        }
                    }
                }
                catch (global::System.Exception ex)
                {
                    errors = new global::StrawberryShake.IClientError[]
                    {
                        new global::StrawberryShake.ClientError(ex.Message, exception: ex, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { "body", response.Body?.RootElement.ToString() } })
                    };
                }
            }
            else
            {
                if (response.Body != null && response.Body.RootElement.TryGetProperty("errors", out global::System.Text.Json.JsonElement errorsElement))
                {
                    errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);
                }
                else
                {
                    errors = new global::StrawberryShake.IClientError[]
                    {
                        new global::StrawberryShake.ClientError(response.Exception.Message, exception: response.Exception, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { "body", response.Body?.RootElement.ToString() } })
                    };
                }
            }

            return new global::StrawberryShake.OperationResult<ICreateCheckoutLoggedOutResult>(data?.Result, data?.Info, _resultDataFactory, errors);
        }

        private (ICreateCheckoutLoggedOutResult, CreateCheckoutLoggedOutResultInfo) BuildData(global::System.Text.Json.JsonElement obj)
        {
            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();
            global::StrawberryShake.IEntityStoreSnapshot snapshot = default !;
            global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutCreatePayloadData? checkoutCreateId = default !;
            _entityStore.Update(session =>
            {
                checkoutCreateId = DeserializeICreateCheckoutLoggedOut_CheckoutCreate(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "checkoutCreate"), entityIds);
                snapshot = session.CurrentSnapshot;
            });
            var resultInfo = new CreateCheckoutLoggedOutResultInfo(checkoutCreateId, entityIds, snapshot.Version);
            return (_resultDataFactory.Create(resultInfo), resultInfo);
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutCreatePayloadData? DeserializeICreateCheckoutLoggedOut_CheckoutCreate(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("CheckoutCreatePayload", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutCreatePayloadData(typename, checkout: UpdateICreateCheckoutLoggedOut_CheckoutCreate_CheckoutEntity(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "checkout"), entityIds), checkoutUserErrors: DeserializeNonNullableICreateCheckoutLoggedOut_CheckoutCreate_CheckoutUserErrorsNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "checkoutUserErrors")));
            }

            throw new global::System.NotSupportedException();
        }

        private global::StrawberryShake.EntityId? UpdateICreateCheckoutLoggedOut_CheckoutCreate_CheckoutEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);
            entityIds.Add(entityId);
            if (entityId.Name.Equals("Checkout", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutEntity? entity))
                {
                    session.SetEntity(entityId, new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutEntity(DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableUri(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "webUrl"))));
                }
                else
                {
                    session.SetEntity(entityId, new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutEntity(DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableUri(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "webUrl"))));
                }

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.String DeserializeNonNullableString(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _iDParser.Parse(obj.Value.GetString()!);
        }

        private global::System.Uri DeserializeNonNullableUri(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _uRLParser.Parse(obj.Value.GetString()!);
        }

        private global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutUserErrorData> DeserializeNonNullableICreateCheckoutLoggedOut_CheckoutCreate_CheckoutUserErrorsNonNullableArray(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var checkoutUserErrors = new global::System.Collections.Generic.List<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutUserErrorData>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                checkoutUserErrors.Add(DeserializeNonNullableICreateCheckoutLoggedOut_CheckoutCreate_CheckoutUserErrors(child));
            }

            return checkoutUserErrors;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutUserErrorData DeserializeNonNullableICreateCheckoutLoggedOut_CheckoutCreate_CheckoutUserErrors(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("CheckoutUserError", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutUserErrorData(typename, field: DeserializeStringNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "field")), message: DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "message")));
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Collections.Generic.IReadOnlyList<global::System.String>? DeserializeStringNonNullableArray(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            var @strings = new global::System.Collections.Generic.List<global::System.String>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                @strings.Add(DeserializeNonNullableString(child));
            }

            return @strings;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CheckoutCustomerAssociateV2Builder : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICheckoutCustomerAssociateV2Result>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityIdSerializer _idSerializer;
        private readonly global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICheckoutCustomerAssociateV2Result> _resultDataFactory;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _iDParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.Uri> _uRLParser;
        public CheckoutCustomerAssociateV2Builder(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer idSerializer, global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICheckoutCustomerAssociateV2Result> resultDataFactory, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _idSerializer = idSerializer ?? throw new global::System.ArgumentNullException(nameof(idSerializer));
            _resultDataFactory = resultDataFactory ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));
            _iDParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("ID") ?? throw new global::System.ArgumentException("No serializer for type `ID` found.");
            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("String") ?? throw new global::System.ArgumentException("No serializer for type `String` found.");
            _uRLParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.Uri>("URL") ?? throw new global::System.ArgumentException("No serializer for type `URL` found.");
        }

        public global::StrawberryShake.IOperationResult<ICheckoutCustomerAssociateV2Result> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)
        {
            (ICheckoutCustomerAssociateV2Result Result, CheckoutCustomerAssociateV2ResultInfo Info)? data = null;
            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.IClientError>? errors = null;
            if (response.Exception is null)
            {
                try
                {
                    if (response.Body != null)
                    {
                        if (response.Body.RootElement.TryGetProperty("data", out global::System.Text.Json.JsonElement dataElement) && dataElement.ValueKind == global::System.Text.Json.JsonValueKind.Object)
                        {
                            data = BuildData(dataElement);
                        }

                        if (response.Body.RootElement.TryGetProperty("errors", out global::System.Text.Json.JsonElement errorsElement))
                        {
                            errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);
                        }
                    }
                }
                catch (global::System.Exception ex)
                {
                    errors = new global::StrawberryShake.IClientError[]
                    {
                        new global::StrawberryShake.ClientError(ex.Message, exception: ex, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { "body", response.Body?.RootElement.ToString() } })
                    };
                }
            }
            else
            {
                if (response.Body != null && response.Body.RootElement.TryGetProperty("errors", out global::System.Text.Json.JsonElement errorsElement))
                {
                    errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);
                }
                else
                {
                    errors = new global::StrawberryShake.IClientError[]
                    {
                        new global::StrawberryShake.ClientError(response.Exception.Message, exception: response.Exception, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { "body", response.Body?.RootElement.ToString() } })
                    };
                }
            }

            return new global::StrawberryShake.OperationResult<ICheckoutCustomerAssociateV2Result>(data?.Result, data?.Info, _resultDataFactory, errors);
        }

        private (ICheckoutCustomerAssociateV2Result, CheckoutCustomerAssociateV2ResultInfo) BuildData(global::System.Text.Json.JsonElement obj)
        {
            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();
            global::StrawberryShake.IEntityStoreSnapshot snapshot = default !;
            global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutCustomerAssociateV2PayloadData? checkoutCustomerAssociateV2Id = default !;
            _entityStore.Update(session =>
            {
                checkoutCustomerAssociateV2Id = DeserializeICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "checkoutCustomerAssociateV2"), entityIds);
                snapshot = session.CurrentSnapshot;
            });
            var resultInfo = new CheckoutCustomerAssociateV2ResultInfo(checkoutCustomerAssociateV2Id, entityIds, snapshot.Version);
            return (_resultDataFactory.Create(resultInfo), resultInfo);
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutCustomerAssociateV2PayloadData? DeserializeICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("CheckoutCustomerAssociateV2Payload", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutCustomerAssociateV2PayloadData(typename, checkout: UpdateICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_CheckoutEntity(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "checkout"), entityIds), customer: UpdateICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_CustomerEntity(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "customer"), entityIds), userErrors: DeserializeNonNullableICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_UserErrorsNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "userErrors")));
            }

            throw new global::System.NotSupportedException();
        }

        private global::StrawberryShake.EntityId? UpdateICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_CheckoutEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);
            entityIds.Add(entityId);
            if (entityId.Name.Equals("Checkout", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutEntity? entity))
                {
                    session.SetEntity(entityId, new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutEntity(DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableUri(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "webUrl"))));
                }
                else
                {
                    session.SetEntity(entityId, new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutEntity(DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableUri(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "webUrl"))));
                }

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.String DeserializeNonNullableString(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _iDParser.Parse(obj.Value.GetString()!);
        }

        private global::System.Uri DeserializeNonNullableUri(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _uRLParser.Parse(obj.Value.GetString()!);
        }

        private global::StrawberryShake.EntityId? UpdateICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_CustomerEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);
            entityIds.Add(entityId);
            if (entityId.Name.Equals("Customer", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerEntity? entity))
                {
                    session.SetEntity(entityId, new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerEntity(DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), entity.FirstName, entity.LastName, entity.AcceptsMarketing, DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "email")), entity.Phone, entity.DefaultAddress));
                }
                else
                {
                    session.SetEntity(entityId, new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerEntity(DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), default !, default !, default !, DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "email")), default !, default !));
                }

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.String? DeserializeString(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            return _stringParser.Parse(obj.Value.GetString()!);
        }

        private global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.UserErrorData> DeserializeNonNullableICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_UserErrorsNonNullableArray(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var userErrors = new global::System.Collections.Generic.List<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.UserErrorData>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                userErrors.Add(DeserializeNonNullableICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_UserErrors(child));
            }

            return userErrors;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.UserErrorData DeserializeNonNullableICheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_UserErrors(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("UserError", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.UserErrorData(typename, field: DeserializeStringNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "field")), message: DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "message")));
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Collections.Generic.IReadOnlyList<global::System.String>? DeserializeStringNonNullableArray(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            var @strings = new global::System.Collections.Generic.List<global::System.String>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                @strings.Add(DeserializeNonNullableString(child));
            }

            return @strings;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class UpdateCustomerBuilder : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityIdSerializer _idSerializer;
        private readonly global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerResult> _resultDataFactory;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerErrorCode> _customerErrorCodeParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Boolean, global::System.Boolean> _booleanParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _iDParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.DateTimeOffset> _dateTimeParser;
        public UpdateCustomerBuilder(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer idSerializer, global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerResult> resultDataFactory, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _idSerializer = idSerializer ?? throw new global::System.ArgumentNullException(nameof(idSerializer));
            _resultDataFactory = resultDataFactory ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));
            _customerErrorCodeParser = serializerResolver.GetLeafValueParser<global::System.String, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerErrorCode>("CustomerErrorCode") ?? throw new global::System.ArgumentException("No serializer for type `CustomerErrorCode` found.");
            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("String") ?? throw new global::System.ArgumentException("No serializer for type `String` found.");
            _booleanParser = serializerResolver.GetLeafValueParser<global::System.Boolean, global::System.Boolean>("Boolean") ?? throw new global::System.ArgumentException("No serializer for type `Boolean` found.");
            _iDParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("ID") ?? throw new global::System.ArgumentException("No serializer for type `ID` found.");
            _dateTimeParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.DateTimeOffset>("DateTime") ?? throw new global::System.ArgumentException("No serializer for type `DateTime` found.");
        }

        public global::StrawberryShake.IOperationResult<IUpdateCustomerResult> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)
        {
            (IUpdateCustomerResult Result, UpdateCustomerResultInfo Info)? data = null;
            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.IClientError>? errors = null;
            if (response.Exception is null)
            {
                try
                {
                    if (response.Body != null)
                    {
                        if (response.Body.RootElement.TryGetProperty("data", out global::System.Text.Json.JsonElement dataElement) && dataElement.ValueKind == global::System.Text.Json.JsonValueKind.Object)
                        {
                            data = BuildData(dataElement);
                        }

                        if (response.Body.RootElement.TryGetProperty("errors", out global::System.Text.Json.JsonElement errorsElement))
                        {
                            errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);
                        }
                    }
                }
                catch (global::System.Exception ex)
                {
                    errors = new global::StrawberryShake.IClientError[]
                    {
                        new global::StrawberryShake.ClientError(ex.Message, exception: ex, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { "body", response.Body?.RootElement.ToString() } })
                    };
                }
            }
            else
            {
                if (response.Body != null && response.Body.RootElement.TryGetProperty("errors", out global::System.Text.Json.JsonElement errorsElement))
                {
                    errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);
                }
                else
                {
                    errors = new global::StrawberryShake.IClientError[]
                    {
                        new global::StrawberryShake.ClientError(response.Exception.Message, exception: response.Exception, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { "body", response.Body?.RootElement.ToString() } })
                    };
                }
            }

            return new global::StrawberryShake.OperationResult<IUpdateCustomerResult>(data?.Result, data?.Info, _resultDataFactory, errors);
        }

        private (IUpdateCustomerResult, UpdateCustomerResultInfo) BuildData(global::System.Text.Json.JsonElement obj)
        {
            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();
            global::StrawberryShake.IEntityStoreSnapshot snapshot = default !;
            global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUpdatePayloadData? customerUpdateId = default !;
            _entityStore.Update(session =>
            {
                customerUpdateId = DeserializeIUpdateCustomer_CustomerUpdate(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "customerUpdate"), entityIds);
                snapshot = session.CurrentSnapshot;
            });
            var resultInfo = new UpdateCustomerResultInfo(customerUpdateId, entityIds, snapshot.Version);
            return (_resultDataFactory.Create(resultInfo), resultInfo);
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUpdatePayloadData? DeserializeIUpdateCustomer_CustomerUpdate(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("CustomerUpdatePayload", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUpdatePayloadData(typename, customer: UpdateIUpdateCustomer_CustomerUpdate_CustomerEntity(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "customer"), entityIds), customerAccessToken: DeserializeIUpdateCustomer_CustomerUpdate_CustomerAccessToken(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "customerAccessToken")), customerUserErrors: DeserializeNonNullableIUpdateCustomer_CustomerUpdate_CustomerUserErrorsNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "customerUserErrors")));
            }

            throw new global::System.NotSupportedException();
        }

        private global::StrawberryShake.EntityId? UpdateIUpdateCustomer_CustomerUpdate_CustomerEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);
            entityIds.Add(entityId);
            if (entityId.Name.Equals("Customer", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerEntity? entity))
                {
                    session.SetEntity(entityId, new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerEntity(DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "firstName")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "lastName")), DeserializeNonNullableBoolean(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "acceptsMarketing")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "email")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "phone")), UpdateIUpdateCustomer_CustomerUpdate_Customer_DefaultAddressEntity(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "defaultAddress"), entityIds)));
                }
                else
                {
                    session.SetEntity(entityId, new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerEntity(DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "firstName")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "lastName")), DeserializeNonNullableBoolean(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "acceptsMarketing")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "email")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "phone")), UpdateIUpdateCustomer_CustomerUpdate_Customer_DefaultAddressEntity(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "defaultAddress"), entityIds)));
                }

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.String DeserializeNonNullableString(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _iDParser.Parse(obj.Value.GetString()!);
        }

        private global::System.String? DeserializeString(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            return _stringParser.Parse(obj.Value.GetString()!);
        }

        private global::System.Boolean DeserializeNonNullableBoolean(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _booleanParser.Parse(obj.Value.GetBoolean()!);
        }

        private global::StrawberryShake.EntityId? UpdateIUpdateCustomer_CustomerUpdate_Customer_DefaultAddressEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);
            entityIds.Add(entityId);
            if (entityId.Name.Equals("MailingAddress", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity? entity))
                {
                    session.SetEntity(entityId, new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity(DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "address1")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "address2")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "city")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "company")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "country")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "firstName")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "lastName")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "phone")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "province")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "zip"))));
                }
                else
                {
                    session.SetEntity(entityId, new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity(DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "address1")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "address2")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "city")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "company")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "country")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "firstName")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "lastName")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "phone")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "province")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "zip"))));
                }

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerAccessTokenData? DeserializeIUpdateCustomer_CustomerUpdate_CustomerAccessToken(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("CustomerAccessToken", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerAccessTokenData(typename, accessToken: DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "accessToken")), expiresAt: DeserializeNonNullableDateTimeOffset(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "expiresAt")));
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.DateTimeOffset DeserializeNonNullableDateTimeOffset(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _dateTimeParser.Parse(obj.Value.GetString()!);
        }

        private global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData> DeserializeNonNullableIUpdateCustomer_CustomerUpdate_CustomerUserErrorsNonNullableArray(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var customerUserErrors = new global::System.Collections.Generic.List<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                customerUserErrors.Add(DeserializeNonNullableIUpdateCustomer_CustomerUpdate_CustomerUserErrors(child));
            }

            return customerUserErrors;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData DeserializeNonNullableIUpdateCustomer_CustomerUpdate_CustomerUserErrors(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("CustomerUserError", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData(typename, code: DeserializeCustomerErrorCode(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "code")), field: DeserializeStringNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "field")), message: DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "message")));
            }

            throw new global::System.NotSupportedException();
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerErrorCode? DeserializeCustomerErrorCode(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            return _customerErrorCodeParser.Parse(obj.Value.GetString()!);
        }

        private global::System.Collections.Generic.IReadOnlyList<global::System.String>? DeserializeStringNonNullableArray(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            var @strings = new global::System.Collections.Generic.List<global::System.String>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                @strings.Add(DeserializeNonNullableString(child));
            }

            return @strings;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCheckoutLoggedInBuilder : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedInResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityIdSerializer _idSerializer;
        private readonly global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedInResult> _resultDataFactory;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Int32, global::System.Int32> _intParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _iDParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.Uri> _uRLParser;
        public CreateCheckoutLoggedInBuilder(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer idSerializer, global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedInResult> resultDataFactory, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _idSerializer = idSerializer ?? throw new global::System.ArgumentNullException(nameof(idSerializer));
            _resultDataFactory = resultDataFactory ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));
            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("String") ?? throw new global::System.ArgumentException("No serializer for type `String` found.");
            _intParser = serializerResolver.GetLeafValueParser<global::System.Int32, global::System.Int32>("Int") ?? throw new global::System.ArgumentException("No serializer for type `Int` found.");
            _iDParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("ID") ?? throw new global::System.ArgumentException("No serializer for type `ID` found.");
            _uRLParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.Uri>("URL") ?? throw new global::System.ArgumentException("No serializer for type `URL` found.");
        }

        public global::StrawberryShake.IOperationResult<ICreateCheckoutLoggedInResult> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)
        {
            (ICreateCheckoutLoggedInResult Result, CreateCheckoutLoggedInResultInfo Info)? data = null;
            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.IClientError>? errors = null;
            if (response.Exception is null)
            {
                try
                {
                    if (response.Body != null)
                    {
                        if (response.Body.RootElement.TryGetProperty("data", out global::System.Text.Json.JsonElement dataElement) && dataElement.ValueKind == global::System.Text.Json.JsonValueKind.Object)
                        {
                            data = BuildData(dataElement);
                        }

                        if (response.Body.RootElement.TryGetProperty("errors", out global::System.Text.Json.JsonElement errorsElement))
                        {
                            errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);
                        }
                    }
                }
                catch (global::System.Exception ex)
                {
                    errors = new global::StrawberryShake.IClientError[]
                    {
                        new global::StrawberryShake.ClientError(ex.Message, exception: ex, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { "body", response.Body?.RootElement.ToString() } })
                    };
                }
            }
            else
            {
                if (response.Body != null && response.Body.RootElement.TryGetProperty("errors", out global::System.Text.Json.JsonElement errorsElement))
                {
                    errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);
                }
                else
                {
                    errors = new global::StrawberryShake.IClientError[]
                    {
                        new global::StrawberryShake.ClientError(response.Exception.Message, exception: response.Exception, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { "body", response.Body?.RootElement.ToString() } })
                    };
                }
            }

            return new global::StrawberryShake.OperationResult<ICreateCheckoutLoggedInResult>(data?.Result, data?.Info, _resultDataFactory, errors);
        }

        private (ICreateCheckoutLoggedInResult, CreateCheckoutLoggedInResultInfo) BuildData(global::System.Text.Json.JsonElement obj)
        {
            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();
            global::StrawberryShake.IEntityStoreSnapshot snapshot = default !;
            global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutCreatePayloadData? checkoutCreateId = default !;
            _entityStore.Update(session =>
            {
                checkoutCreateId = DeserializeICreateCheckoutLoggedIn_CheckoutCreate(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "checkoutCreate"), entityIds);
                snapshot = session.CurrentSnapshot;
            });
            var resultInfo = new CreateCheckoutLoggedInResultInfo(checkoutCreateId, entityIds, snapshot.Version);
            return (_resultDataFactory.Create(resultInfo), resultInfo);
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutCreatePayloadData? DeserializeICreateCheckoutLoggedIn_CheckoutCreate(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("CheckoutCreatePayload", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutCreatePayloadData(typename, checkout: UpdateICreateCheckoutLoggedIn_CheckoutCreate_CheckoutEntity(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "checkout"), entityIds), checkoutUserErrors: DeserializeNonNullableICreateCheckoutLoggedIn_CheckoutCreate_CheckoutUserErrorsNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "checkoutUserErrors")));
            }

            throw new global::System.NotSupportedException();
        }

        private global::StrawberryShake.EntityId? UpdateICreateCheckoutLoggedIn_CheckoutCreate_CheckoutEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);
            entityIds.Add(entityId);
            if (entityId.Name.Equals("Checkout", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutEntity? entity))
                {
                    session.SetEntity(entityId, new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutEntity(DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableUri(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "webUrl"))));
                }
                else
                {
                    session.SetEntity(entityId, new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutEntity(DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableUri(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "webUrl"))));
                }

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.String DeserializeNonNullableString(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _iDParser.Parse(obj.Value.GetString()!);
        }

        private global::System.Uri DeserializeNonNullableUri(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _uRLParser.Parse(obj.Value.GetString()!);
        }

        private global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutUserErrorData> DeserializeNonNullableICreateCheckoutLoggedIn_CheckoutCreate_CheckoutUserErrorsNonNullableArray(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var checkoutUserErrors = new global::System.Collections.Generic.List<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutUserErrorData>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                checkoutUserErrors.Add(DeserializeNonNullableICreateCheckoutLoggedIn_CheckoutCreate_CheckoutUserErrors(child));
            }

            return checkoutUserErrors;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutUserErrorData DeserializeNonNullableICreateCheckoutLoggedIn_CheckoutCreate_CheckoutUserErrors(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("CheckoutUserError", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutUserErrorData(typename, field: DeserializeStringNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "field")), message: DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "message")));
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Collections.Generic.IReadOnlyList<global::System.String>? DeserializeStringNonNullableArray(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            var @strings = new global::System.Collections.Generic.List<global::System.String>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                @strings.Add(DeserializeNonNullableString(child));
            }

            return @strings;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class UpdateCustomerAddressBuilder : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerAddressResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityIdSerializer _idSerializer;
        private readonly global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerAddressResult> _resultDataFactory;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _iDParser;
        public UpdateCustomerAddressBuilder(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer idSerializer, global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerAddressResult> resultDataFactory, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _idSerializer = idSerializer ?? throw new global::System.ArgumentNullException(nameof(idSerializer));
            _resultDataFactory = resultDataFactory ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));
            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("String") ?? throw new global::System.ArgumentException("No serializer for type `String` found.");
            _iDParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("ID") ?? throw new global::System.ArgumentException("No serializer for type `ID` found.");
        }

        public global::StrawberryShake.IOperationResult<IUpdateCustomerAddressResult> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)
        {
            (IUpdateCustomerAddressResult Result, UpdateCustomerAddressResultInfo Info)? data = null;
            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.IClientError>? errors = null;
            if (response.Exception is null)
            {
                try
                {
                    if (response.Body != null)
                    {
                        if (response.Body.RootElement.TryGetProperty("data", out global::System.Text.Json.JsonElement dataElement) && dataElement.ValueKind == global::System.Text.Json.JsonValueKind.Object)
                        {
                            data = BuildData(dataElement);
                        }

                        if (response.Body.RootElement.TryGetProperty("errors", out global::System.Text.Json.JsonElement errorsElement))
                        {
                            errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);
                        }
                    }
                }
                catch (global::System.Exception ex)
                {
                    errors = new global::StrawberryShake.IClientError[]
                    {
                        new global::StrawberryShake.ClientError(ex.Message, exception: ex, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { "body", response.Body?.RootElement.ToString() } })
                    };
                }
            }
            else
            {
                if (response.Body != null && response.Body.RootElement.TryGetProperty("errors", out global::System.Text.Json.JsonElement errorsElement))
                {
                    errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);
                }
                else
                {
                    errors = new global::StrawberryShake.IClientError[]
                    {
                        new global::StrawberryShake.ClientError(response.Exception.Message, exception: response.Exception, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { "body", response.Body?.RootElement.ToString() } })
                    };
                }
            }

            return new global::StrawberryShake.OperationResult<IUpdateCustomerAddressResult>(data?.Result, data?.Info, _resultDataFactory, errors);
        }

        private (IUpdateCustomerAddressResult, UpdateCustomerAddressResultInfo) BuildData(global::System.Text.Json.JsonElement obj)
        {
            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();
            global::StrawberryShake.IEntityStoreSnapshot snapshot = default !;
            global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerAddressUpdatePayloadData? customerAddressUpdateId = default !;
            _entityStore.Update(session =>
            {
                customerAddressUpdateId = DeserializeIUpdateCustomerAddress_CustomerAddressUpdate(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "customerAddressUpdate"), entityIds);
                snapshot = session.CurrentSnapshot;
            });
            var resultInfo = new UpdateCustomerAddressResultInfo(customerAddressUpdateId, entityIds, snapshot.Version);
            return (_resultDataFactory.Create(resultInfo), resultInfo);
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerAddressUpdatePayloadData? DeserializeIUpdateCustomerAddress_CustomerAddressUpdate(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("CustomerAddressUpdatePayload", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerAddressUpdatePayloadData(typename, customerAddress: UpdateIUpdateCustomerAddress_CustomerAddressUpdate_CustomerAddressEntity(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "customerAddress"), entityIds), customerUserErrors: DeserializeNonNullableIUpdateCustomerAddress_CustomerAddressUpdate_CustomerUserErrorsNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "customerUserErrors")));
            }

            throw new global::System.NotSupportedException();
        }

        private global::StrawberryShake.EntityId? UpdateIUpdateCustomerAddress_CustomerAddressUpdate_CustomerAddressEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);
            entityIds.Add(entityId);
            if (entityId.Name.Equals("MailingAddress", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity? entity))
                {
                    session.SetEntity(entityId, new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity(DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "address1")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "address2")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "city")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "company")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "country")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "firstName")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "lastName")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "phone")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "province")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "zip"))));
                }
                else
                {
                    session.SetEntity(entityId, new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity(DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "address1")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "address2")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "city")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "company")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "country")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "firstName")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "lastName")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "phone")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "province")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "zip"))));
                }

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.String DeserializeNonNullableString(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _iDParser.Parse(obj.Value.GetString()!);
        }

        private global::System.String? DeserializeString(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            return _stringParser.Parse(obj.Value.GetString()!);
        }

        private global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData> DeserializeNonNullableIUpdateCustomerAddress_CustomerAddressUpdate_CustomerUserErrorsNonNullableArray(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var customerUserErrors = new global::System.Collections.Generic.List<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                customerUserErrors.Add(DeserializeNonNullableIUpdateCustomerAddress_CustomerAddressUpdate_CustomerUserErrors(child));
            }

            return customerUserErrors;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData DeserializeNonNullableIUpdateCustomerAddress_CustomerAddressUpdate_CustomerUserErrors(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("CustomerUserError", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData(typename, field: DeserializeStringNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "field")), message: DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "message")));
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Collections.Generic.IReadOnlyList<global::System.String>? DeserializeStringNonNullableArray(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            var @strings = new global::System.Collections.Generic.List<global::System.String>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                @strings.Add(DeserializeNonNullableString(child));
            }

            return @strings;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCustomerAddressBuilder : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAddressResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityIdSerializer _idSerializer;
        private readonly global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAddressResult> _resultDataFactory;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _iDParser;
        public CreateCustomerAddressBuilder(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer idSerializer, global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAddressResult> resultDataFactory, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _idSerializer = idSerializer ?? throw new global::System.ArgumentNullException(nameof(idSerializer));
            _resultDataFactory = resultDataFactory ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));
            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("String") ?? throw new global::System.ArgumentException("No serializer for type `String` found.");
            _iDParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("ID") ?? throw new global::System.ArgumentException("No serializer for type `ID` found.");
        }

        public global::StrawberryShake.IOperationResult<ICreateCustomerAddressResult> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)
        {
            (ICreateCustomerAddressResult Result, CreateCustomerAddressResultInfo Info)? data = null;
            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.IClientError>? errors = null;
            if (response.Exception is null)
            {
                try
                {
                    if (response.Body != null)
                    {
                        if (response.Body.RootElement.TryGetProperty("data", out global::System.Text.Json.JsonElement dataElement) && dataElement.ValueKind == global::System.Text.Json.JsonValueKind.Object)
                        {
                            data = BuildData(dataElement);
                        }

                        if (response.Body.RootElement.TryGetProperty("errors", out global::System.Text.Json.JsonElement errorsElement))
                        {
                            errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);
                        }
                    }
                }
                catch (global::System.Exception ex)
                {
                    errors = new global::StrawberryShake.IClientError[]
                    {
                        new global::StrawberryShake.ClientError(ex.Message, exception: ex, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { "body", response.Body?.RootElement.ToString() } })
                    };
                }
            }
            else
            {
                if (response.Body != null && response.Body.RootElement.TryGetProperty("errors", out global::System.Text.Json.JsonElement errorsElement))
                {
                    errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);
                }
                else
                {
                    errors = new global::StrawberryShake.IClientError[]
                    {
                        new global::StrawberryShake.ClientError(response.Exception.Message, exception: response.Exception, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { "body", response.Body?.RootElement.ToString() } })
                    };
                }
            }

            return new global::StrawberryShake.OperationResult<ICreateCustomerAddressResult>(data?.Result, data?.Info, _resultDataFactory, errors);
        }

        private (ICreateCustomerAddressResult, CreateCustomerAddressResultInfo) BuildData(global::System.Text.Json.JsonElement obj)
        {
            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();
            global::StrawberryShake.IEntityStoreSnapshot snapshot = default !;
            global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerAddressCreatePayloadData? customerAddressCreateId = default !;
            _entityStore.Update(session =>
            {
                customerAddressCreateId = DeserializeICreateCustomerAddress_CustomerAddressCreate(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "customerAddressCreate"), entityIds);
                snapshot = session.CurrentSnapshot;
            });
            var resultInfo = new CreateCustomerAddressResultInfo(customerAddressCreateId, entityIds, snapshot.Version);
            return (_resultDataFactory.Create(resultInfo), resultInfo);
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerAddressCreatePayloadData? DeserializeICreateCustomerAddress_CustomerAddressCreate(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("CustomerAddressCreatePayload", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerAddressCreatePayloadData(typename, customerAddress: UpdateICreateCustomerAddress_CustomerAddressCreate_CustomerAddressEntity(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "customerAddress"), entityIds), customerUserErrors: DeserializeNonNullableICreateCustomerAddress_CustomerAddressCreate_CustomerUserErrorsNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "customerUserErrors")));
            }

            throw new global::System.NotSupportedException();
        }

        private global::StrawberryShake.EntityId? UpdateICreateCustomerAddress_CustomerAddressCreate_CustomerAddressEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);
            entityIds.Add(entityId);
            if (entityId.Name.Equals("MailingAddress", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity? entity))
                {
                    session.SetEntity(entityId, new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity(DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "address1")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "address2")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "city")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "company")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "country")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "firstName")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "lastName")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "phone")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "province")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "zip"))));
                }
                else
                {
                    session.SetEntity(entityId, new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity(DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "address1")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "address2")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "city")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "company")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "country")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "firstName")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "lastName")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "phone")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "province")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "zip"))));
                }

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.String DeserializeNonNullableString(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _iDParser.Parse(obj.Value.GetString()!);
        }

        private global::System.String? DeserializeString(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            return _stringParser.Parse(obj.Value.GetString()!);
        }

        private global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData> DeserializeNonNullableICreateCustomerAddress_CustomerAddressCreate_CustomerUserErrorsNonNullableArray(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var customerUserErrors = new global::System.Collections.Generic.List<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                customerUserErrors.Add(DeserializeNonNullableICreateCustomerAddress_CustomerAddressCreate_CustomerUserErrors(child));
            }

            return customerUserErrors;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData DeserializeNonNullableICreateCustomerAddress_CustomerAddressCreate_CustomerUserErrors(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("CustomerUserError", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData(typename, field: DeserializeStringNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "field")), message: DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "message")));
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Collections.Generic.IReadOnlyList<global::System.String>? DeserializeStringNonNullableArray(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            var @strings = new global::System.Collections.Generic.List<global::System.String>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                @strings.Add(DeserializeNonNullableString(child));
            }

            return @strings;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CreateCustomerBuilder : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityIdSerializer _idSerializer;
        private readonly global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerResult> _resultDataFactory;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerErrorCode> _customerErrorCodeParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Boolean, global::System.Boolean> _booleanParser;
        public CreateCustomerBuilder(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer idSerializer, global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerResult> resultDataFactory, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _idSerializer = idSerializer ?? throw new global::System.ArgumentNullException(nameof(idSerializer));
            _resultDataFactory = resultDataFactory ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));
            _customerErrorCodeParser = serializerResolver.GetLeafValueParser<global::System.String, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerErrorCode>("CustomerErrorCode") ?? throw new global::System.ArgumentException("No serializer for type `CustomerErrorCode` found.");
            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("String") ?? throw new global::System.ArgumentException("No serializer for type `String` found.");
            _booleanParser = serializerResolver.GetLeafValueParser<global::System.Boolean, global::System.Boolean>("Boolean") ?? throw new global::System.ArgumentException("No serializer for type `Boolean` found.");
        }

        public global::StrawberryShake.IOperationResult<ICreateCustomerResult> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)
        {
            (ICreateCustomerResult Result, CreateCustomerResultInfo Info)? data = null;
            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.IClientError>? errors = null;
            if (response.Exception is null)
            {
                try
                {
                    if (response.Body != null)
                    {
                        if (response.Body.RootElement.TryGetProperty("data", out global::System.Text.Json.JsonElement dataElement) && dataElement.ValueKind == global::System.Text.Json.JsonValueKind.Object)
                        {
                            data = BuildData(dataElement);
                        }

                        if (response.Body.RootElement.TryGetProperty("errors", out global::System.Text.Json.JsonElement errorsElement))
                        {
                            errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);
                        }
                    }
                }
                catch (global::System.Exception ex)
                {
                    errors = new global::StrawberryShake.IClientError[]
                    {
                        new global::StrawberryShake.ClientError(ex.Message, exception: ex, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { "body", response.Body?.RootElement.ToString() } })
                    };
                }
            }
            else
            {
                if (response.Body != null && response.Body.RootElement.TryGetProperty("errors", out global::System.Text.Json.JsonElement errorsElement))
                {
                    errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);
                }
                else
                {
                    errors = new global::StrawberryShake.IClientError[]
                    {
                        new global::StrawberryShake.ClientError(response.Exception.Message, exception: response.Exception, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?> { { "body", response.Body?.RootElement.ToString() } })
                    };
                }
            }

            return new global::StrawberryShake.OperationResult<ICreateCustomerResult>(data?.Result, data?.Info, _resultDataFactory, errors);
        }

        private (ICreateCustomerResult, CreateCustomerResultInfo) BuildData(global::System.Text.Json.JsonElement obj)
        {
            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();
            global::StrawberryShake.IEntityStoreSnapshot snapshot = default !;
            global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerCreatePayloadData? customerCreateId = default !;
            _entityStore.Update(session =>
            {
                customerCreateId = DeserializeICreateCustomer_CustomerCreate(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "customerCreate"), entityIds);
                snapshot = session.CurrentSnapshot;
            });
            var resultInfo = new CreateCustomerResultInfo(customerCreateId, entityIds, snapshot.Version);
            return (_resultDataFactory.Create(resultInfo), resultInfo);
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerCreatePayloadData? DeserializeICreateCustomer_CustomerCreate(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("CustomerCreatePayload", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerCreatePayloadData(typename, customer: UpdateICreateCustomer_CustomerCreate_CustomerEntity(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "customer"), entityIds), customerUserErrors: DeserializeNonNullableICreateCustomer_CustomerCreate_CustomerUserErrorsNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "customerUserErrors")));
            }

            throw new global::System.NotSupportedException();
        }

        private global::StrawberryShake.EntityId? UpdateICreateCustomer_CustomerCreate_CustomerEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);
            entityIds.Add(entityId);
            if (entityId.Name.Equals("Customer", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerEntity? entity))
                {
                    session.SetEntity(entityId, new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerEntity(entity.Id, DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "firstName")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "lastName")), DeserializeNonNullableBoolean(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "acceptsMarketing")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "email")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "phone")), entity.DefaultAddress));
                }
                else
                {
                    session.SetEntity(entityId, new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerEntity(default !, DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "firstName")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "lastName")), DeserializeNonNullableBoolean(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "acceptsMarketing")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "email")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "phone")), default !));
                }

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.String? DeserializeString(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            return _stringParser.Parse(obj.Value.GetString()!);
        }

        private global::System.Boolean DeserializeNonNullableBoolean(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _booleanParser.Parse(obj.Value.GetBoolean()!);
        }

        private global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData> DeserializeNonNullableICreateCustomer_CustomerCreate_CustomerUserErrorsNonNullableArray(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var customerUserErrors = new global::System.Collections.Generic.List<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                customerUserErrors.Add(DeserializeNonNullableICreateCustomer_CustomerCreate_CustomerUserErrors(child));
            }

            return customerUserErrors;
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData DeserializeNonNullableICreateCustomer_CustomerCreate_CustomerUserErrors(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("CustomerUserError", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData(typename, field: DeserializeStringNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "field")), message: DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "message")), code: DeserializeCustomerErrorCode(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "code")));
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Collections.Generic.IReadOnlyList<global::System.String>? DeserializeStringNonNullableArray(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            var @strings = new global::System.Collections.Generic.List<global::System.String>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                @strings.Add(DeserializeNonNullableString(child));
            }

            return @strings;
        }

        private global::System.String DeserializeNonNullableString(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _stringParser.Parse(obj.Value.GetString()!);
        }

        private global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerErrorCode? DeserializeCustomerErrorCode(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            return _customerErrorCodeParser.Parse(obj.Value.GetString()!);
        }
    }

    ///<summary>An auto-generated type for paginating through multiple ProductVariants.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class ProductVariantConnectionData
    {
        public ProductVariantConnectionData(global::System.String __typename, global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductVariantEdgeData>? edges = default !)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
            Edges = edges;
        }

        public global::System.String __typename { get; }
        ///<summary>A list of edges.</summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductVariantEdgeData>? Edges { get; }
    }

    ///<summary>The price range of the product.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class ProductPriceRangeData
    {
        public ProductPriceRangeData(global::System.String __typename, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MoneyV2Data? minVariantPrice = default !)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
            MinVariantPrice = minVariantPrice;
        }

        public global::System.String __typename { get; }
        ///<summary>The lowest variant's price.</summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MoneyV2Data? MinVariantPrice { get; }
    }

    ///<summary>An auto-generated type for paginating through multiple Images.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class ImageConnectionData
    {
        public ImageConnectionData(global::System.String __typename, global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEdgeData>? edges = default !)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
            Edges = edges;
        }

        public global::System.String __typename { get; }
        ///<summary>A list of edges.</summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEdgeData>? Edges { get; }
    }

    ///<summary>An auto-generated type which holds one ProductVariant and a cursor during pagination.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class ProductVariantEdgeData
    {
        public ProductVariantEdgeData(global::System.String __typename, global::StrawberryShake.EntityId? node = default !)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
            Node = node;
        }

        public global::System.String __typename { get; }
        ///<summary>The item at the end of ProductVariantEdge.</summary>
        public global::StrawberryShake.EntityId? Node { get; }
    }

    ///<summary>A monetary value with currency.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IPricingValueData
    {
        global::System.String __typename { get; }
    }

    ///<summary>A monetary value with currency.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class MoneyV2Data : IPricingValueData
    {
        public MoneyV2Data(global::System.String __typename, global::System.String? amount = default !)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
            Amount = amount;
        }

        public global::System.String __typename { get; }
        ///<summary>String money amount.</summary>
        public global::System.String? Amount { get; }
    }

    ///<summary>An auto-generated type which holds one Image and a cursor during pagination.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class ImageEdgeData
    {
        public ImageEdgeData(global::System.String __typename, global::StrawberryShake.EntityId? node = default !)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
            Node = node;
        }

        public global::System.String __typename { get; }
        ///<summary>The item at the end of ImageEdge.</summary>
        public global::StrawberryShake.EntityId? Node { get; }
    }

    ///<summary>An auto-generated type for paginating through multiple Products.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class ProductConnectionData
    {
        public ProductConnectionData(global::System.String __typename, global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductEdgeData>? edges = default !)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
            Edges = edges;
        }

        public global::System.String __typename { get; }
        ///<summary>A list of edges.</summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductEdgeData>? Edges { get; }
    }

    ///<summary>An auto-generated type which holds one Product and a cursor during pagination.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class ProductEdgeData
    {
        public ProductEdgeData(global::System.String __typename, global::StrawberryShake.EntityId? node = default !)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
            Node = node;
        }

        public global::System.String __typename { get; }
        ///<summary>The item at the end of ProductEdge.</summary>
        public global::StrawberryShake.EntityId? Node { get; }
    }

    ///<summary>Return type for `customerAccessTokenCreate` mutation.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CustomerAccessTokenCreatePayloadData
    {
        public CustomerAccessTokenCreatePayloadData(global::System.String __typename, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerAccessTokenData? customerAccessToken = default !, global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData>? customerUserErrors = default !)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
            CustomerAccessToken = customerAccessToken;
            CustomerUserErrors = customerUserErrors;
        }

        public global::System.String __typename { get; }
        ///<summary>The newly created customer access token object.</summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerAccessTokenData? CustomerAccessToken { get; }
        ///<summary>The list of errors that occurred from executing the mutation.</summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData>? CustomerUserErrors { get; }
    }

    ///<summary>A CustomerAccessToken represents the unique token required to make modifications to the customer object.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CustomerAccessTokenData
    {
        public CustomerAccessTokenData(global::System.String __typename, global::System.String? accessToken = default !, global::System.DateTimeOffset? expiresAt = default !)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
            AccessToken = accessToken;
            ExpiresAt = expiresAt;
        }

        public global::System.String __typename { get; }
        ///<summary>The customer’s access token.</summary>
        public global::System.String? AccessToken { get; }
        ///<summary>The date and time when the customer access token expires.</summary>
        public global::System.DateTimeOffset? ExpiresAt { get; }
    }

    ///<summary>Represents an error that happens during execution of a customer mutation.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial interface IDisplayableErrorData
    {
        global::System.String __typename { get; }
    }

    ///<summary>Represents an error that happens during execution of a customer mutation.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CustomerUserErrorData : IDisplayableErrorData
    {
        public CustomerUserErrorData(global::System.String __typename, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerErrorCode? code = default !, global::System.Collections.Generic.IReadOnlyList<global::System.String>? field = default !, global::System.String? message = default !)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
            Code = code;
            Field = field;
            Message = message;
        }

        public global::System.String __typename { get; }
        ///<summary>The error code.</summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerErrorCode? Code { get; }
        ///<summary>The path to the input field that caused the error.</summary>
        public global::System.Collections.Generic.IReadOnlyList<global::System.String>? Field { get; }
        ///<summary>The error message.</summary>
        public global::System.String? Message { get; }
    }

    ///<summary>Return type for `checkoutCreate` mutation.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CheckoutCreatePayloadData
    {
        public CheckoutCreatePayloadData(global::System.String __typename, global::StrawberryShake.EntityId? checkout = default !, global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutUserErrorData>? checkoutUserErrors = default !)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
            Checkout = checkout;
            CheckoutUserErrors = checkoutUserErrors;
        }

        public global::System.String __typename { get; }
        ///<summary>The new checkout object.</summary>
        public global::StrawberryShake.EntityId? Checkout { get; }
        ///<summary>The list of errors that occurred from executing the mutation.</summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutUserErrorData>? CheckoutUserErrors { get; }
    }

    ///<summary>Represents an error that happens during execution of a checkout mutation.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CheckoutUserErrorData : IDisplayableErrorData
    {
        public CheckoutUserErrorData(global::System.String __typename, global::System.Collections.Generic.IReadOnlyList<global::System.String>? field = default !, global::System.String? message = default !)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
            Field = field;
            Message = message;
        }

        public global::System.String __typename { get; }
        ///<summary>The path to the input field that caused the error.</summary>
        public global::System.Collections.Generic.IReadOnlyList<global::System.String>? Field { get; }
        ///<summary>The error message.</summary>
        public global::System.String? Message { get; }
    }

    ///<summary>Return type for `checkoutCustomerAssociateV2` mutation.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CheckoutCustomerAssociateV2PayloadData
    {
        public CheckoutCustomerAssociateV2PayloadData(global::System.String __typename, global::StrawberryShake.EntityId? checkout = default !, global::StrawberryShake.EntityId? customer = default !, global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.UserErrorData>? userErrors = default !)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
            Checkout = checkout;
            Customer = customer;
            UserErrors = userErrors;
        }

        public global::System.String __typename { get; }
        ///<summary>The updated checkout object.</summary>
        public global::StrawberryShake.EntityId? Checkout { get; }
        ///<summary>The associated customer object.</summary>
        public global::StrawberryShake.EntityId? Customer { get; }
        ///<summary>The list of errors that occurred from executing the mutation.</summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.UserErrorData>? UserErrors { get; }
    }

    ///<summary>Represents an error in the input of a mutation.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class UserErrorData : IDisplayableErrorData
    {
        public UserErrorData(global::System.String __typename, global::System.Collections.Generic.IReadOnlyList<global::System.String>? field = default !, global::System.String? message = default !)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
            Field = field;
            Message = message;
        }

        public global::System.String __typename { get; }
        ///<summary>The path to the input field that caused the error.</summary>
        public global::System.Collections.Generic.IReadOnlyList<global::System.String>? Field { get; }
        ///<summary>The error message.</summary>
        public global::System.String? Message { get; }
    }

    ///<summary>Return type for `customerUpdate` mutation.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CustomerUpdatePayloadData
    {
        public CustomerUpdatePayloadData(global::System.String __typename, global::StrawberryShake.EntityId? customer = default !, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerAccessTokenData? customerAccessToken = default !, global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData>? customerUserErrors = default !)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
            Customer = customer;
            CustomerAccessToken = customerAccessToken;
            CustomerUserErrors = customerUserErrors;
        }

        public global::System.String __typename { get; }
        ///<summary>The updated customer object.</summary>
        public global::StrawberryShake.EntityId? Customer { get; }
        ///<summary>The newly created customer access token. If the customer's password is updated, all previous access tokens(including the one used to perform this mutation) become invalid, and a new token is generated.</summary>
        public global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerAccessTokenData? CustomerAccessToken { get; }
        ///<summary>The list of errors that occurred from executing the mutation.</summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData>? CustomerUserErrors { get; }
    }

    ///<summary>Return type for `customerAddressUpdate` mutation.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CustomerAddressUpdatePayloadData
    {
        public CustomerAddressUpdatePayloadData(global::System.String __typename, global::StrawberryShake.EntityId? customerAddress = default !, global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData>? customerUserErrors = default !)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
            CustomerAddress = customerAddress;
            CustomerUserErrors = customerUserErrors;
        }

        public global::System.String __typename { get; }
        ///<summary>The customer’s updated mailing address.</summary>
        public global::StrawberryShake.EntityId? CustomerAddress { get; }
        ///<summary>The list of errors that occurred from executing the mutation.</summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData>? CustomerUserErrors { get; }
    }

    ///<summary>Return type for `customerAddressCreate` mutation.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CustomerAddressCreatePayloadData
    {
        public CustomerAddressCreatePayloadData(global::System.String __typename, global::StrawberryShake.EntityId? customerAddress = default !, global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData>? customerUserErrors = default !)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
            CustomerAddress = customerAddress;
            CustomerUserErrors = customerUserErrors;
        }

        public global::System.String __typename { get; }
        ///<summary>The new customer address object.</summary>
        public global::StrawberryShake.EntityId? CustomerAddress { get; }
        ///<summary>The list of errors that occurred from executing the mutation.</summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData>? CustomerUserErrors { get; }
    }

    ///<summary>Return type for `customerCreate` mutation.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class CustomerCreatePayloadData
    {
        public CustomerCreatePayloadData(global::System.String __typename, global::StrawberryShake.EntityId? customer = default !, global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData>? customerUserErrors = default !)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
            Customer = customer;
            CustomerUserErrors = customerUserErrors;
        }

        public global::System.String __typename { get; }
        ///<summary>The created customer object.</summary>
        public global::StrawberryShake.EntityId? Customer { get; }
        ///<summary>The list of errors that occurred from executing the mutation.</summary>
        public global::System.Collections.Generic.IReadOnlyList<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerUserErrorData>? CustomerUserErrors { get; }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class ShopifyClientEntityIdFactory : global::StrawberryShake.IEntityIdSerializer
    {
        private static readonly global::System.Text.Json.JsonWriterOptions _options = new global::System.Text.Json.JsonWriterOptions()
        {
            Indented = false
        };
        public global::StrawberryShake.EntityId Parse(global::System.Text.Json.JsonElement obj)
        {
            global::System.String __typename = obj.GetProperty("__typename").GetString()!;
            return __typename switch
            {
                "Customer" => ParseCustomerEntityId(obj, __typename),
                "MailingAddress" => ParseMailingAddressEntityId(obj, __typename),
                "Product" => ParseProductEntityId(obj, __typename),
                "ProductOption" => ParseProductOptionEntityId(obj, __typename),
                "ProductVariant" => ParseProductVariantEntityId(obj, __typename),
                "Image" => ParseImageEntityId(obj, __typename),
                "Checkout" => ParseCheckoutEntityId(obj, __typename),
                _ => throw new global::System.NotSupportedException()};
        }

        public global::System.String Format(global::StrawberryShake.EntityId entityId)
        {
            return entityId.Name switch
            {
                "Customer" => FormatCustomerEntityId(entityId),
                "MailingAddress" => FormatMailingAddressEntityId(entityId),
                "Product" => FormatProductEntityId(entityId),
                "ProductOption" => FormatProductOptionEntityId(entityId),
                "ProductVariant" => FormatProductVariantEntityId(entityId),
                "Image" => FormatImageEntityId(entityId),
                "Checkout" => FormatCheckoutEntityId(entityId),
                _ => throw new global::System.NotSupportedException()};
        }

        private global::StrawberryShake.EntityId ParseCustomerEntityId(global::System.Text.Json.JsonElement obj, global::System.String type)
        {
            return new global::StrawberryShake.EntityId(type, obj.GetProperty("id").GetString()!);
        }

        private global::System.String FormatCustomerEntityId(global::StrawberryShake.EntityId entityId)
        {
            using var writer = new global::StrawberryShake.Internal.ArrayWriter();
            using var jsonWriter = new global::System.Text.Json.Utf8JsonWriter(writer, _options);
            jsonWriter.WriteStartObject();
            jsonWriter.WriteString("__typename", entityId.Name);
            jsonWriter.WriteString("id", (global::System.String)entityId.Value);
            jsonWriter.WriteEndObject();
            jsonWriter.Flush();
            return global::System.Text.Encoding.UTF8.GetString(writer.GetInternalBuffer(), 0, writer.Length);
        }

        private global::StrawberryShake.EntityId ParseMailingAddressEntityId(global::System.Text.Json.JsonElement obj, global::System.String type)
        {
            return new global::StrawberryShake.EntityId(type, obj.GetProperty("id").GetString()!);
        }

        private global::System.String FormatMailingAddressEntityId(global::StrawberryShake.EntityId entityId)
        {
            using var writer = new global::StrawberryShake.Internal.ArrayWriter();
            using var jsonWriter = new global::System.Text.Json.Utf8JsonWriter(writer, _options);
            jsonWriter.WriteStartObject();
            jsonWriter.WriteString("__typename", entityId.Name);
            jsonWriter.WriteString("id", (global::System.String)entityId.Value);
            jsonWriter.WriteEndObject();
            jsonWriter.Flush();
            return global::System.Text.Encoding.UTF8.GetString(writer.GetInternalBuffer(), 0, writer.Length);
        }

        private global::StrawberryShake.EntityId ParseProductEntityId(global::System.Text.Json.JsonElement obj, global::System.String type)
        {
            return new global::StrawberryShake.EntityId(type, obj.GetProperty("id").GetString()!);
        }

        private global::System.String FormatProductEntityId(global::StrawberryShake.EntityId entityId)
        {
            using var writer = new global::StrawberryShake.Internal.ArrayWriter();
            using var jsonWriter = new global::System.Text.Json.Utf8JsonWriter(writer, _options);
            jsonWriter.WriteStartObject();
            jsonWriter.WriteString("__typename", entityId.Name);
            jsonWriter.WriteString("id", (global::System.String)entityId.Value);
            jsonWriter.WriteEndObject();
            jsonWriter.Flush();
            return global::System.Text.Encoding.UTF8.GetString(writer.GetInternalBuffer(), 0, writer.Length);
        }

        private global::StrawberryShake.EntityId ParseProductOptionEntityId(global::System.Text.Json.JsonElement obj, global::System.String type)
        {
            return new global::StrawberryShake.EntityId(type, obj.GetProperty("id").GetString()!);
        }

        private global::System.String FormatProductOptionEntityId(global::StrawberryShake.EntityId entityId)
        {
            using var writer = new global::StrawberryShake.Internal.ArrayWriter();
            using var jsonWriter = new global::System.Text.Json.Utf8JsonWriter(writer, _options);
            jsonWriter.WriteStartObject();
            jsonWriter.WriteString("__typename", entityId.Name);
            jsonWriter.WriteString("id", (global::System.String)entityId.Value);
            jsonWriter.WriteEndObject();
            jsonWriter.Flush();
            return global::System.Text.Encoding.UTF8.GetString(writer.GetInternalBuffer(), 0, writer.Length);
        }

        private global::StrawberryShake.EntityId ParseProductVariantEntityId(global::System.Text.Json.JsonElement obj, global::System.String type)
        {
            return new global::StrawberryShake.EntityId(type, obj.GetProperty("id").GetString()!);
        }

        private global::System.String FormatProductVariantEntityId(global::StrawberryShake.EntityId entityId)
        {
            using var writer = new global::StrawberryShake.Internal.ArrayWriter();
            using var jsonWriter = new global::System.Text.Json.Utf8JsonWriter(writer, _options);
            jsonWriter.WriteStartObject();
            jsonWriter.WriteString("__typename", entityId.Name);
            jsonWriter.WriteString("id", (global::System.String)entityId.Value);
            jsonWriter.WriteEndObject();
            jsonWriter.Flush();
            return global::System.Text.Encoding.UTF8.GetString(writer.GetInternalBuffer(), 0, writer.Length);
        }

        private global::StrawberryShake.EntityId ParseImageEntityId(global::System.Text.Json.JsonElement obj, global::System.String type)
        {
            return new global::StrawberryShake.EntityId(type, obj.GetProperty("id").GetString()!);
        }

        private global::System.String FormatImageEntityId(global::StrawberryShake.EntityId entityId)
        {
            using var writer = new global::StrawberryShake.Internal.ArrayWriter();
            using var jsonWriter = new global::System.Text.Json.Utf8JsonWriter(writer, _options);
            jsonWriter.WriteStartObject();
            jsonWriter.WriteString("__typename", entityId.Name);
            jsonWriter.WriteString("id", (global::System.String)entityId.Value);
            jsonWriter.WriteEndObject();
            jsonWriter.Flush();
            return global::System.Text.Encoding.UTF8.GetString(writer.GetInternalBuffer(), 0, writer.Length);
        }

        private global::StrawberryShake.EntityId ParseCheckoutEntityId(global::System.Text.Json.JsonElement obj, global::System.String type)
        {
            return new global::StrawberryShake.EntityId(type, obj.GetProperty("id").GetString()!);
        }

        private global::System.String FormatCheckoutEntityId(global::StrawberryShake.EntityId entityId)
        {
            using var writer = new global::StrawberryShake.Internal.ArrayWriter();
            using var jsonWriter = new global::System.Text.Json.Utf8JsonWriter(writer, _options);
            jsonWriter.WriteStartObject();
            jsonWriter.WriteString("__typename", entityId.Name);
            jsonWriter.WriteString("id", (global::System.String)entityId.Value);
            jsonWriter.WriteEndObject();
            jsonWriter.Flush();
            return global::System.Text.Encoding.UTF8.GetString(writer.GetInternalBuffer(), 0, writer.Length);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public partial class ShopifyClientStoreAccessor : global::StrawberryShake.StoreAccessor
    {
        public ShopifyClientStoreAccessor(global::StrawberryShake.IOperationStore operationStore, global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer entityIdSerializer, global::System.Collections.Generic.IEnumerable<global::StrawberryShake.IOperationRequestFactory> requestFactories, global::System.Collections.Generic.IEnumerable<global::StrawberryShake.IOperationResultDataFactory> resultDataFactories) : base(operationStore, entityStore, entityIdSerializer, requestFactories, resultDataFactories)
        {
        }
    }
}

namespace Microsoft.Extensions.DependencyInjection
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.7.0.0")]
    public static partial class ShopifyClientServiceCollectionExtensions
    {
        public static global::StrawberryShake.IClientBuilder<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ShopifyClientStoreAccessor> AddShopifyClient(this global::Microsoft.Extensions.DependencyInjection.IServiceCollection services, global::StrawberryShake.ExecutionStrategy strategy = global::StrawberryShake.ExecutionStrategy.NetworkOnly)
        {
            var serviceCollection = new global::Microsoft.Extensions.DependencyInjection.ServiceCollection();
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp =>
            {
                ConfigureClientDefault(sp, serviceCollection, strategy);
                return new ClientServiceProvider(global::Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(serviceCollection));
            });
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => new global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ShopifyClientStoreAccessor(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IEntityStore>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IEntityIdSerializer>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Collections.Generic.IEnumerable<global::StrawberryShake.IOperationRequestFactory>>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Collections.Generic.IEnumerable<global::StrawberryShake.IOperationResultDataFactory>>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp))));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.GetCustomerQuery>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.GetProductByHandleQuery>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.GetProductsQuery>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CreateCustomerAccessTokenMutation>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CreateCheckoutLoggedOutMutation>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CheckoutCustomerAssociateV2Mutation>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.UpdateCustomerMutation>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CreateCheckoutLoggedInMutation>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.UpdateCustomerAddressMutation>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CreateCustomerAddressMutation>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CreateCustomerMutation>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ShopifyClient>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IShopifyClient>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            return new global::StrawberryShake.ClientBuilder<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ShopifyClientStoreAccessor>("ShopifyClient", services, serviceCollection);
        }

        private static global::Microsoft.Extensions.DependencyInjection.IServiceCollection ConfigureClientDefault(global::System.IServiceProvider parentServices, global::Microsoft.Extensions.DependencyInjection.ServiceCollection services, global::StrawberryShake.ExecutionStrategy strategy = global::StrawberryShake.ExecutionStrategy.NetworkOnly)
        {
            global::Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton<global::StrawberryShake.IEntityStore, global::StrawberryShake.EntityStore>(services);
            global::Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton<global::StrawberryShake.IOperationStore>(services, sp => new global::StrawberryShake.OperationStore(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IEntityStore>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Transport.Http.IHttpConnection>(services, sp =>
            {
                var clientFactory = global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Net.Http.IHttpClientFactory>(parentServices);
                return new global::StrawberryShake.Transport.Http.HttpConnection(() => clientFactory.CreateClient("ShopifyClient"));
            });
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerEntity, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.GetCustomer_Customer_Customer>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.GetCustomer_Customer_CustomerFromCustomerEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.GetCustomer_Customer_DefaultAddress_MailingAddress>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.GetCustomer_Customer_DefaultAddress_MailingAddressFromMailingAddressEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductEntity, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.GetProductByHandle_Product_Product>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.GetProductByHandle_Product_ProductFromProductEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductOptionEntity, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.GetProductByHandle_Product_Options_ProductOption>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.GetProductByHandle_Product_Options_ProductOptionFromProductOptionEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductVariantEntity, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.GetProductByHandle_Product_Variants_Edges_Node_ProductVariant>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.GetProductByHandle_Product_Variants_Edges_Node_ProductVariantFromProductVariantEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEntity, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.GetProductByHandle_Product_Images_Edges_Node_Image>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.GetProductByHandle_Product_Images_Edges_Node_ImageFromImageEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ProductEntity, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.GetProducts_Products_Edges_Node_Product>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.GetProducts_Products_Edges_Node_ProductFromProductEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ImageEntity, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.GetProducts_Products_Edges_Node_Images_Edges_Node_Image>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.GetProducts_Products_Edges_Node_Images_Edges_Node_ImageFromImageEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutEntity, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CreateCheckoutLoggedOut_CheckoutCreate_Checkout_Checkout>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CreateCheckoutLoggedOut_CheckoutCreate_Checkout_CheckoutFromCheckoutEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutEntity, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Checkout_Checkout>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Checkout_CheckoutFromCheckoutEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerEntity, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Customer_Customer>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutCustomerAssociateV2_CheckoutCustomerAssociateV2_Customer_CustomerFromCustomerEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerEntity, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.UpdateCustomer_CustomerUpdate_Customer_Customer>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.UpdateCustomer_CustomerUpdate_Customer_CustomerFromCustomerEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.UpdateCustomer_CustomerUpdate_Customer_DefaultAddress_MailingAddress>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.UpdateCustomer_CustomerUpdate_Customer_DefaultAddress_MailingAddressFromMailingAddressEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutEntity, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CreateCheckoutLoggedIn_CheckoutCreate_Checkout_Checkout>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CreateCheckoutLoggedIn_CheckoutCreate_Checkout_CheckoutFromCheckoutEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.UpdateCustomerAddress_CustomerAddressUpdate_CustomerAddress_MailingAddress>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.UpdateCustomerAddress_CustomerAddressUpdate_CustomerAddress_MailingAddressFromMailingAddressEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.MailingAddressEntity, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CreateCustomerAddress_CustomerAddressCreate_CustomerAddress_MailingAddress>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CreateCustomerAddress_CustomerAddressCreate_CustomerAddress_MailingAddressFromMailingAddressEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CustomerEntity, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CreateCustomer_CustomerCreate_Customer_Customer>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CreateCustomer_CustomerCreate_Customer_CustomerFromCustomerEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerErrorCodeSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.StringSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.BooleanSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.ByteSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.ShortSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.IntSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.LongSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.FloatSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.DecimalSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.UrlSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.UUIDSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.IdSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.DateTimeSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.DateSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.ByteArraySerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.TimeSpanSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.JsonSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer>(services, new global::StrawberryShake.Serialization.UrlSerializer("URL"));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerAccessTokenCreateInputInputValueFormatter>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CheckoutLineItemInputInputValueFormatter>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.AttributeInputInputValueFormatter>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerUpdateInputInputValueFormatter>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.MailingAddressInputInputValueFormatter>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CustomerCreateInputInputValueFormatter>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializerResolver>(services, sp => new global::StrawberryShake.Serialization.SerializerResolver(global::System.Linq.Enumerable.Concat(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Collections.Generic.IEnumerable<global::StrawberryShake.Serialization.ISerializer>>(parentServices), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Collections.Generic.IEnumerable<global::StrawberryShake.Serialization.ISerializer>>(sp))));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetCustomerResult>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.GetCustomerResultFactory>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetCustomerResult>>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationRequestFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetCustomerQuery>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetCustomerResult>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.GetCustomerBuilder>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetCustomerResult>>(services, sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetCustomerResult>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.IHttpConnection>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetCustomerResult>>(sp), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp), strategy));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.GetCustomerQuery>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetCustomerQuery>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.GetCustomerQuery>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandleResult>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.GetProductByHandleResultFactory>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandleResult>>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationRequestFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandleQuery>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandleResult>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.GetProductByHandleBuilder>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandleResult>>(services, sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandleResult>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.IHttpConnection>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandleResult>>(sp), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp), strategy));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.GetProductByHandleQuery>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductByHandleQuery>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.GetProductByHandleQuery>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductsResult>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.GetProductsResultFactory>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductsResult>>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationRequestFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductsQuery>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductsResult>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.GetProductsBuilder>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductsResult>>(services, sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductsResult>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.IHttpConnection>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductsResult>>(sp), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp), strategy));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.GetProductsQuery>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IGetProductsQuery>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.GetProductsQuery>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAccessTokenResult>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CreateCustomerAccessTokenResultFactory>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAccessTokenResult>>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationRequestFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAccessTokenMutation>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAccessTokenResult>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CreateCustomerAccessTokenBuilder>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAccessTokenResult>>(services, sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAccessTokenResult>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.IHttpConnection>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAccessTokenResult>>(sp), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp), strategy));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CreateCustomerAccessTokenMutation>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAccessTokenMutation>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CreateCustomerAccessTokenMutation>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedOutResult>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CreateCheckoutLoggedOutResultFactory>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedOutResult>>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationRequestFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedOutMutation>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedOutResult>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CreateCheckoutLoggedOutBuilder>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedOutResult>>(services, sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedOutResult>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.IHttpConnection>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedOutResult>>(sp), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp), strategy));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CreateCheckoutLoggedOutMutation>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedOutMutation>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CreateCheckoutLoggedOutMutation>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICheckoutCustomerAssociateV2Result>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutCustomerAssociateV2ResultFactory>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICheckoutCustomerAssociateV2Result>>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationRequestFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICheckoutCustomerAssociateV2Mutation>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICheckoutCustomerAssociateV2Result>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CheckoutCustomerAssociateV2Builder>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICheckoutCustomerAssociateV2Result>>(services, sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICheckoutCustomerAssociateV2Result>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.IHttpConnection>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICheckoutCustomerAssociateV2Result>>(sp), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp), strategy));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CheckoutCustomerAssociateV2Mutation>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICheckoutCustomerAssociateV2Mutation>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CheckoutCustomerAssociateV2Mutation>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerResult>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.UpdateCustomerResultFactory>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerResult>>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationRequestFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerMutation>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerResult>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.UpdateCustomerBuilder>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerResult>>(services, sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerResult>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.IHttpConnection>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerResult>>(sp), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp), strategy));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.UpdateCustomerMutation>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerMutation>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.UpdateCustomerMutation>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedInResult>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CreateCheckoutLoggedInResultFactory>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedInResult>>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationRequestFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedInMutation>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedInResult>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CreateCheckoutLoggedInBuilder>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedInResult>>(services, sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedInResult>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.IHttpConnection>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedInResult>>(sp), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp), strategy));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CreateCheckoutLoggedInMutation>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCheckoutLoggedInMutation>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CreateCheckoutLoggedInMutation>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerAddressResult>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.UpdateCustomerAddressResultFactory>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerAddressResult>>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationRequestFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerAddressMutation>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerAddressResult>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.UpdateCustomerAddressBuilder>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerAddressResult>>(services, sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerAddressResult>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.IHttpConnection>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerAddressResult>>(sp), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp), strategy));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.UpdateCustomerAddressMutation>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IUpdateCustomerAddressMutation>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.UpdateCustomerAddressMutation>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAddressResult>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CreateCustomerAddressResultFactory>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAddressResult>>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationRequestFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAddressMutation>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAddressResult>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CreateCustomerAddressBuilder>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAddressResult>>(services, sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAddressResult>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.IHttpConnection>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAddressResult>>(sp), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp), strategy));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CreateCustomerAddressMutation>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerAddressMutation>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CreateCustomerAddressMutation>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerResult>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CreateCustomerResultFactory>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultDataFactory<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerResult>>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationRequestFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerMutation>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerResult>, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.CreateCustomerBuilder>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerResult>>(services, sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerResult>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.IHttpConnection>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerResult>>(sp), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp), strategy));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CreateCustomerMutation>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ICreateCustomerMutation>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.CreateCustomerMutation>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityIdSerializer, global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.State.ShopifyClientEntityIdFactory>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ShopifyClient>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.IShopifyClient>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::HiFlyer.HiFlyerClassLibrary.GraphQLAPIClient.ShopifyClient>(sp));
            return services;
        }

        private class ClientServiceProvider : System.IServiceProvider, System.IDisposable
        {
            private readonly System.IServiceProvider _provider;
            public ClientServiceProvider(System.IServiceProvider provider)
            {
                _provider = provider;
            }

            public object? GetService(System.Type serviceType)
            {
                return _provider.GetService(serviceType);
            }

            public void Dispose()
            {
                if (_provider is System.IDisposable d)
                {
                    d.Dispose();
                }
            }
        }
    }
}
